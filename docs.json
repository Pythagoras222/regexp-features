{
  "srcDir": "/home/runner/work/regexp-features/regexp-features/src/",
  "outDir": "/home/runner/work/regexp-features/regexp-features/docs/",
  "branch": "main",
  "languages": [
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "c",
      "language": "c",
      "name": "C",
      "built": true,
      "outFile": "languages/c.md",
      "priority": 0,
      "engines": [
        {
          "$ref": "#/engines/1"
        },
        {
          "$ref": "#/engines/4"
        },
        {
          "$ref": "#/engines/6"
        }
      ],
      "content": "# Language: C\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/c.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/c.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n- [PCRE](../engines/pcre.md)\n- [Oniguruma](../engines/oniguruma.md)\n- [ICU](../engines/icu.md)\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/c.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "cpp",
      "language": "cpp",
      "name": "C++",
      "built": true,
      "outFile": "languages/cpp.md",
      "priority": 1,
      "engines": [
        {
          "$ref": "#/engines/1"
        },
        {
          "$ref": "#/engines/2"
        },
        {
          "$ref": "#/engines/4"
        },
        {
          "$ref": "#/engines/5"
        },
        {
          "$ref": "#/engines/6"
        },
        {
          "$ref": "#/engines/7"
        }
      ],
      "content": "# Language: C++\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/cpp.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/cpp.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n- [PCRE](../engines/pcre.md)\n- [Boost.Regex](../engines/boost.regex.md)\n- [Oniguruma](../engines/oniguruma.md)\n- [Hyperscan](../engines/hyperscan.md)\n- [ICU](../engines/icu.md)\n- [Glib/GRegex](../engines/glib-gregex.md)\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/cpp.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "csharp",
      "language": "csharp",
      "name": "C#",
      "built": true,
      "outFile": "languages/csharp.md",
      "priority": 2,
      "engines": [
        {
          "$ref": "#/engines/3"
        }
      ],
      "content": "# Language: C#\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/csharp.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/csharp.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n- [.NET](../engines/dotnet.md)\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/csharp.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "d",
      "language": "d",
      "name": "D",
      "built": true,
      "outFile": "languages/d.md",
      "priority": 3,
      "engines": [],
      "content": "# Language: D\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/d.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/d.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/d.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "ecmascript",
      "language": "ecmascript",
      "name": "ECMAScript",
      "built": true,
      "outFile": "languages/ecmascript.md",
      "priority": 4,
      "engines": [
        {
          "$ref": "#/engines/8"
        }
      ],
      "content": "# Language: ECMAScript\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/ecmascript.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/ecmascript.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n- [ECMAScript](../engines/ecmascript.md)\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/ecmascript.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "fsharp",
      "language": "fsharp",
      "name": "F#",
      "built": true,
      "outFile": "languages/fsharp.md",
      "priority": 5,
      "engines": [
        {
          "$ref": "#/engines/3"
        }
      ],
      "content": "# Language: F#\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/fsharp.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/fsharp.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n- [.NET](../engines/dotnet.md)\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/fsharp.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "haskell",
      "language": "haskell",
      "name": "Haskell",
      "built": true,
      "outFile": "languages/haskell.md",
      "priority": 6,
      "engines": [],
      "content": "# Language: Haskell\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/haskell.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/haskell.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/haskell.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "java",
      "language": "java",
      "name": "Java",
      "built": true,
      "outFile": "languages/java.md",
      "priority": 7,
      "engines": [],
      "content": "# Language: Java\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/java.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/java.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/java.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "julia",
      "language": "julia",
      "name": "Julia",
      "built": true,
      "outFile": "languages/julia.md",
      "priority": 8,
      "engines": [],
      "content": "# Language: Julia\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/julia.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/julia.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/julia.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "lua",
      "language": "lua",
      "name": "Lua",
      "built": true,
      "outFile": "languages/lua.md",
      "priority": 9,
      "engines": [],
      "content": "# Language: Lua\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/lua.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/lua.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/lua.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "object-pascal",
      "language": "object-pascal",
      "name": "Object Pascal",
      "built": true,
      "outFile": "languages/object-pascal.md",
      "priority": 10,
      "engines": [],
      "content": "# Language: Object Pascal\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/object-pascal.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/object-pascal.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/object-pascal.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "perl",
      "language": "perl",
      "name": "Perl",
      "built": true,
      "outFile": "languages/perl.md",
      "priority": 11,
      "engines": [
        {
          "$ref": "#/engines/0"
        }
      ],
      "content": "# Language: Perl\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/perl.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/perl.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n- [Perl](../engines/perl.md)\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/perl.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "python",
      "language": "python",
      "name": "Python",
      "built": true,
      "outFile": "languages/python.md",
      "priority": 12,
      "engines": [],
      "content": "# Language: Python\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/python.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/python.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/python.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "ruby",
      "language": "ruby",
      "name": "Ruby",
      "built": true,
      "outFile": "languages/ruby.md",
      "priority": 13,
      "engines": [],
      "content": "# Language: Ruby\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/ruby.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/ruby.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/ruby.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "rust",
      "language": "rust",
      "name": "Rust",
      "built": true,
      "outFile": "languages/rust.md",
      "priority": 14,
      "engines": [],
      "content": "# Language: Rust\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/rust.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/rust.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/rust.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "tcl",
      "language": "tcl",
      "name": "Tcl",
      "built": true,
      "outFile": "languages/tcl.md",
      "priority": 15,
      "engines": [],
      "content": "# Language: Tcl\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/tcl.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/tcl.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/tcl.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Language",
      "id": "vbnet",
      "language": "vbnet",
      "name": "VB.net",
      "built": true,
      "outFile": "languages/vbnet.md",
      "priority": 16,
      "engines": [
        {
          "$ref": "#/engines/3"
        }
      ],
      "content": "# Language: VB.net\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Languages](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/languages/vbnet.md \"source for: name\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/languages/vbnet.md)\r\n-->\r\n\r\n\r\n## Engines\r\n\r\n- [.NET](../engines/dotnet.md)\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: ../features/flags.md\r\n[Flag]: ../features/flags.md\r\n[RegExp Flags]: ../features/flags.md\r\n[RegExp Flag]: ../features/flags.md\r\n[Anchors]: ../features/anchors.md\r\n[Anchor]: ../features/anchors.md\r\n[Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[Buffer Boundary]: ../features/buffer-boundaries.md\r\n[Word Boundaries]: ../features/word-boundaries.md\r\n[Word Boundary]: ../features/word-boundaries.md\r\n[Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[Text Segment Boundary]: ../features/text-segment-boundaries.md\r\n[Continuation Escape]: ../features/continuation-escape.md\r\n[Alternatives]: ../features/alternatives.md\r\n[Alternative]: ../features/alternatives.md\r\n[Wildcard]: ../features/wildcard.md\r\n[Wildcards]: ../features/wildcard.md\r\n[Character Classes]: ../features/character-classes.md\r\n[Character Class]: ../features/character-classes.md\r\n[Posix Character Classes]: ../features/posix-character-classes.md\r\n[Posix Character Class]: ../features/posix-character-classes.md\r\n[Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[Negated Posix Character Class]: ../features/negated-posix-character-classes.md\r\n[Collating Elements]: ../features/collating-elements.md\r\n[Collating Element]: ../features/collating-elements.md\r\n[Equivalence Classes]: ../features/equivalence-classes.md\r\n[Equivalence Class]: ../features/equivalence-classes.md\r\n[Character Class Escapes]: ../features/character-class-escapes.md\r\n[Character Class Escape]: ../features/character-class-escapes.md\r\n[Line Endings Escape]: ../features/line-endings-escape.md\r\n[Character Property Escapes]: ../features/character-property-escapes.md\r\n[Character Property Escape]: ../features/character-property-escapes.md\r\n[Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[Character Class Nested Sets]: ../features/character-class-nested-set.md\r\n[Character Class Intersection]: ../features/character-class-intersection.md\r\n[Character Class Intersections]: ../features/character-class-intersection.md\r\n[Character Class Union]: ../features/character-class-union.md\r\n[Character Class Unions]: ../features/character-class-union.md\r\n[Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: ../features/character-class-symmetric-difference.md\r\n[Character Class Complement]: ../features/character-class-complement.md\r\n[Character Class Complements]: ../features/character-class-complement.md\r\n[Quoted Characters]: ../features/quoted-characters.md\r\n[Quantifiers]: ../features/quantifiers.md\r\n[Quantifier]: ../features/quantifiers.md\r\n[Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[Lazy Quantifier]: ../features/lazy-quantifiers.md\r\n[Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[Possessive Quantifier]: ../features/possessive-quantifiers.md\r\n[Capturing Groups]: ../features/capturing-groups.md\r\n[Capturing Group]: ../features/capturing-groups.md\r\n[Capture Groups]: ../features/capturing-groups.md\r\n[Capture Group]: ../features/capturing-groups.md\r\n[Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[Named Capturing Group]: ../features/named-capturing-groups.md\r\n[Named Capture Groups]: ../features/named-capturing-groups.md\r\n[Named Capture Group]: ../features/named-capturing-groups.md\r\n[Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[Non-Capturing group]: ../features/non-capturing-groups.md\r\n[Backreferences]: ../features/backreferences.md\r\n[Backreference]: ../features/backreferences.md\r\n[Comments]: ../features/comments.md\r\n[Comment]: ../features/comments.md\r\n[Line Comments]: ../features/line-comments.md\r\n[Line Comment]: ../features/line-comments.md\r\n[x-mode Comments]: ../features/line-comments.md\r\n[x-mode Comment]: ../features/line-comments.md\r\n[Modifiers]: ../features/modifiers.md\r\n[Modifier]: ../features/modifiers.md\r\n[Branch Reset]: ../features/branch-reset.md\r\n[Lookahead]: ../features/lookahead.md\r\n[Lookbehind]: ../features/lookbehind.md\r\n[Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: ../features/non-backtracking-expressions.md\r\n[Recursion]: ../features/recursion.md\r\n[Recursive Expression]: ../features/recursion.md\r\n[Conditional Expressions]: ../features/conditional-expressions.md\r\n[Conditional Expression]: ../features/conditional-expressions.md\r\n[Subroutines]: ../features/subroutines.md\r\n[Subroutine]: ../features/subroutines.md\r\n[Callouts]: ../features/callouts.md\r\n[Callout]: ../features/callouts.md\r\n[Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n[Backtracking Control Verb]: ../features/backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: c.md\r\n[C++]: cpp.md\r\n[C#]: csharp.md\r\n[D]: d.md\r\n[ECMAScript]: ecmascript.md\r\n[F#]: fsharp.md\r\n[Haskell]: haskell.md\r\n[Java]: java.md\r\n[Julia]: julia.md\r\n[Lua]: lua.md\r\n[Object Pascal]: object-pascal.md\r\n[Perl]: perl.md\r\n[Python]: python.md\r\n[Ruby]: ruby.md\r\n[Rust]: rust.md\r\n[Tcl]: tcl.md\r\n[VB.net]: vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/vbnet.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/languages/language-toc.yml"
      ]
    }
  ],
  "features": [
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "flags",
      "feature": "flags",
      "name": "Flags",
      "built": true,
      "outFile": "features/flags.md",
      "priority": 0,
      "aliases": [
        "Flag",
        "RegExp Flags",
        "RegExp Flag"
      ],
      "description": "<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.",
      "syntax": "The following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).",
      "see_also": [
        {
          "feature": "modifiers",
          "name": "Modifiers"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/0"
          },
          "name": "Flags",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Flag",
            "RegExp Flags",
            "RegExp Flag"
          ],
          "reference": "https://perldoc.perl.org/perlre#Modifiers",
          "description": "<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.",
          "syntax": "The following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x`, `xx` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n- `a`, `aa`, `d`, `l`, `u` &mdash; Character Set Modifiers. Affect which character-set rules are used.\r\n- `n` &mdash; Explicit Capture. Prevents non-named capture groups from capturing.\r\n- `c` &mdash; Keep the current position during repeated matching.\r\n- `g` &mdash; Global. Globally match the pattern repeatedly in the string.",
          "see_also": [
            {
              "feature": "modifiers",
              "name": "Modifiers"
            }
          ],
          "content": "## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x`, `xx` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n- `a`, `aa`, `d`, `l`, `u` &mdash; Character Set Modifiers. Affect which character-set rules are used.\r\n- `n` &mdash; Explicit Capture. Prevents non-named capture groups from capturing.\r\n- `c` &mdash; Keep the current position during repeated matching.\r\n- `g` &mdash; Global. Globally match the pattern repeatedly in the string.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/flags.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/flags.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/flags.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/0"
          },
          "name": "Flags",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Flag",
            "RegExp Flags",
            "RegExp Flag"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC13",
          "description": "<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.",
          "syntax": "The following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `n` &mdash; Explicit captures. Regular [Capturing Groups] are not captured, only [Named Capturing Groups] are captured.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n- `xx` &mdash; \"Extended More\" Mode. Same as `x` but unescaped spaces and horizontal tab characters are also ignored inside [character classes].",
          "see_also": [
            {
              "feature": "modifiers",
              "name": "Modifiers"
            }
          ],
          "content": "## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `n` &mdash; Explicit captures. Regular [Capturing Groups] are not captured, only [Named Capturing Groups] are captured.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n- `xx` &mdash; \"Extended More\" Mode. Same as `x` but unescaped spaces and horizontal tab characters are also ignored inside [character classes].\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/flags.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/flags.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/flags.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/0"
          },
          "name": "Flags",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Flag",
            "RegExp Flags",
            "RegExp Flag"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.modifiers",
          "description": "<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.",
          "syntax": "The following flags are supported:\r\n\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).",
          "see_also": [
            {
              "feature": "modifiers",
              "name": "Modifiers"
            }
          ],
          "content": "## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/flags.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/flags.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/flags.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/0"
          },
          "name": "Flags",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Flag",
            "RegExp Flags",
            "RegExp Flag"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-options",
          "description": "<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.",
          "syntax": "The following flags are supported:\r\n\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `n` &mdash; Explicit captures. Regular [Capturing Groups] are not captured, only [Named Capturing Groups] are captured.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space). Allows `x`-mode [comments].",
          "see_also": [
            {
              "feature": "modifiers",
              "name": "Modifiers"
            }
          ],
          "content": "## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `n` &mdash; Explicit captures. Regular [Capturing Groups] are not captured, only [Named Capturing Groups] are captured.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space). Allows `x`-mode [comments].\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/flags.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/flags.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/flags.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/0"
          },
          "name": "Flags",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Flag",
            "RegExp Flags",
            "RegExp Flag"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L265-L289",
          "description": "<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.",
          "syntax": "The following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n- `W` &mdash; ASCII-only words (when using `\\w`, `\\p{Word}`, `[[:word:]]`, `\\b`, or `\\B`)\r\n- `D` &mdash; ASCII-only digits (when using `\\d`, `\\p{Digit}`, `[[:digit:]]`)\r\n- `S` &mdash; ASCII-only space (when using `\\s`, `\\p{Space}`, `[[:space:]]`)\r\n- `P` &mdash; ASCII-only POSIX properties (includes `W`, `D`, and `S` flags)\r\n- <code>y{<em>?</em>}</code> &mdash; Changes meaning of `\\X`, `\\y`, and `\\Y` in unicode mode:\r\n  - `y{g}` &mdash; Extended Grapheme Cluster mode\r\n  - `y{w}` &mdash; Word mode.\r\n\r\nSome flags depend on options provided to Oniguruma <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>:\r\n- `ONIG_SYNTAX_ONIGURUMA`:\r\n  - `m` &mdash; Multiline. Causes the [wildcard] `.` to match newline characters.\r\n- `ONIG_SYNTAX_PERL` and `ONIG_SYNTAX_JAVA`:\r\n  - `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n  - `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.",
          "see_also": [
            {
              "feature": "modifiers",
              "name": "Modifiers"
            }
          ],
          "content": "## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n- `W` &mdash; ASCII-only words (when using `\\w`, `\\p{Word}`, `[[:word:]]`, `\\b`, or `\\B`)\r\n- `D` &mdash; ASCII-only digits (when using `\\d`, `\\p{Digit}`, `[[:digit:]]`)\r\n- `S` &mdash; ASCII-only space (when using `\\s`, `\\p{Space}`, `[[:space:]]`)\r\n- `P` &mdash; ASCII-only POSIX properties (includes `W`, `D`, and `S` flags)\r\n- <code>y{<em>?</em>}</code> &mdash; Changes meaning of `\\X`, `\\y`, and `\\Y` in unicode mode:\r\n  - `y{g}` &mdash; Extended Grapheme Cluster mode\r\n  - `y{w}` &mdash; Word mode.\r\n\r\nSome flags depend on options provided to Oniguruma <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>:\r\n- `ONIG_SYNTAX_ONIGURUMA`:\r\n  - `m` &mdash; Multiline. Causes the [wildcard] `.` to match newline characters.\r\n- `ONIG_SYNTAX_PERL` and `ONIG_SYNTAX_JAVA`:\r\n  - `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n  - `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/flags.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/flags.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/flags.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/0"
          },
          "name": "Flags",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Flag",
            "RegExp Flags",
            "RegExp Flag"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.",
          "syntax": "The following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).",
          "see_also": [
            {
              "feature": "modifiers",
              "name": "Modifiers"
            }
          ],
          "content": "## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/flags.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/flags.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/0"
          },
          "name": "Flags",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Flag",
            "RegExp Flags",
            "RegExp Flag"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#flag-options",
          "description": "<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.",
          "syntax": "The following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `w` &mdash; Unicode Word. Changes the behavior of `\\b` in a pattern.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).",
          "see_also": [
            {
              "feature": "modifiers",
              "name": "Modifiers"
            }
          ],
          "content": "## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `w` &mdash; Unicode Word. Changes the behavior of `\\b` in a pattern.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/flags.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/flags.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/flags.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/0"
          },
          "name": "Flags",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Flag",
            "RegExp Flags",
            "RegExp Flag"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.11",
          "description": "<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.",
          "syntax": "The following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).",
          "see_also": [
            {
              "feature": "modifiers",
              "name": "Modifiers"
            }
          ],
          "content": "## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/flags.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/flags.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/0"
          },
          "name": "Flags",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Flag",
            "RegExp Flags",
            "RegExp Flag"
          ],
          "reference": "https://tc39.es/ecma262/#sec-regexpinitialize",
          "description": "<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.",
          "syntax": "The following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `u` &mdash; Unicode. Enforces stricter parsing of `RegExp` patterns, improved handling of escaped Unicode surrogate pairs, and allows the use of <code>\\u{<em>CodePoint</em>}</code>.\r\n- `g` &mdash; Global. Indicates the match must start at or after the index specified by the `lastIndex` property of the `RegExp`. When matching completes successfully, `lastIndex` will be updated with the ending index of the last match.\r\n- `y` &mdash; Sticky. Indicates the match must start at the index specified by the `lastIndex` property of the `RegExp`. When matching completes successfully, `lastIndex` will be updated with the ending index of the last match.\r\n- `d` &mdash; Indices. Indicates the match result object will include an `indices` property with the start and end indices of each captured subexpression.\r\n  > NOTE: This feature is at Stage 4 of the ECMA-262 specification process. See the [RegExp Match Indices proposal](https://github.com/tc39/proposal-regexp-match-indices) for more information.",
          "see_also": [
            {
              "feature": "modifiers",
              "name": "Modifiers"
            }
          ],
          "content": "## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `u` &mdash; Unicode. Enforces stricter parsing of `RegExp` patterns, improved handling of escaped Unicode surrogate pairs, and allows the use of <code>\\u{<em>CodePoint</em>}</code>.\r\n- `g` &mdash; Global. Indicates the match must start at or after the index specified by the `lastIndex` property of the `RegExp`. When matching completes successfully, `lastIndex` will be updated with the ending index of the last match.\r\n- `y` &mdash; Sticky. Indicates the match must start at the index specified by the `lastIndex` property of the `RegExp`. When matching completes successfully, `lastIndex` will be updated with the ending index of the last match.\r\n- `d` &mdash; Indices. Indicates the match result object will include an `indices` property with the start and end indices of each captured subexpression.\r\n  > NOTE: This feature is at Stage 4 of the ECMA-262 specification process. See the [RegExp Match Indices proposal](https://github.com/tc39/proposal-regexp-match-indices) for more information.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/flags.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/flags.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/flags.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
          ]
        }
      ],
      "content": "# Feature: Flags\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-flags) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-flags) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-flags) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-flags) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-flags) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-flags) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-flags) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-flags) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-flags) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/flags.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "anchors",
      "feature": "anchors",
      "name": "Anchors",
      "built": true,
      "outFile": "features/anchors.md",
      "priority": 1,
      "aliases": [
        "Anchor"
      ],
      "description": "<dfn>Anchors</dfn> match the start or end of a line.",
      "syntax": "- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.",
      "see_also": [
        {
          "feature": "buffer-boundaries",
          "name": "Buffer Boundaries"
        },
        {
          "feature": "word-boundaries",
          "name": "Word Boundaries"
        },
        {
          "feature": "text-segment-boundaries",
          "name": "Text Segment Boundaries"
        },
        {
          "feature": "continuation-escape",
          "name": "Continuation Escape"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/1"
          },
          "name": "Anchors",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Anchor"
          ],
          "reference": "https://perldoc.perl.org/perlre#Metacharacters",
          "description": "<dfn>Anchors</dfn> match the start or end of a line.",
          "syntax": "- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.",
          "see_also": [
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/anchors.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/anchors.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/1"
          },
          "name": "Anchors",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Anchor"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC6",
          "description": "<dfn>Anchors</dfn> match the start or end of a line.",
          "syntax": "- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.",
          "see_also": [
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/anchors.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/anchors.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/1"
          },
          "name": "Anchors",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Anchor"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.anchors",
          "description": "<dfn>Anchors</dfn> match the start or end of a line.",
          "syntax": "- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.",
          "see_also": [
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/anchors.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/anchors.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/anchors.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/1"
          },
          "name": "Anchors",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Anchor"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/anchors-in-regular-expressions",
          "description": "<dfn>Anchors</dfn> match the start or end of a line.",
          "syntax": "- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.",
          "see_also": [
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/anchors.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/anchors.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/1"
          },
          "name": "Anchors",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Anchor"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L172",
          "description": "<dfn>Anchors</dfn> match the start or end of a line.",
          "syntax": "- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.",
          "see_also": [
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/anchors.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/anchors.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/1"
          },
          "name": "Anchors",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Anchor"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "<dfn>Anchors</dfn> match the start or end of a line.",
          "syntax": "- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.",
          "see_also": [
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/anchors.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/anchors.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/1"
          },
          "name": "Anchors",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Anchor"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "<dfn>Anchors</dfn> match the start or end of a line.",
          "syntax": "- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.",
          "see_also": [
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/anchors.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/anchors.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/1"
          },
          "name": "Anchors",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Anchor"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.5",
          "description": "<dfn>Anchors</dfn> match the start or end of a line.",
          "syntax": "- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.",
          "see_also": [
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/anchors.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/anchors.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/1"
          },
          "name": "Anchors",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Anchor"
          ],
          "reference": "https://tc39.es/ecma262/#sec-assertion",
          "description": "<dfn>Anchors</dfn> match the start or end of a line.",
          "syntax": "- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.",
          "see_also": [
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/anchors.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/anchors.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
          ]
        }
      ],
      "content": "# Feature: Anchors\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-anchors) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-anchors) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-anchors) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-anchors) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-anchors) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-anchors) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-anchors) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-anchors) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-anchors) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/anchors.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "buffer-boundaries",
      "feature": "buffer-boundaries",
      "name": "Buffer Boundaries",
      "built": true,
      "outFile": "features/buffer-boundaries.md",
      "priority": 2,
      "aliases": [
        "Buffer Boundary"
      ],
      "description": "A <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.",
      "syntax": "- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.",
      "see_also": [
        {
          "feature": "anchors",
          "name": "Anchors"
        },
        {
          "feature": "word-boundaries",
          "name": "Word Boundaries"
        },
        {
          "feature": "text-segment-boundaries",
          "name": "Text Segment Boundaries"
        },
        {
          "feature": "continuation-escape",
          "name": "Continuation Escape"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/2"
          },
          "name": "Buffer Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Buffer Boundary"
          ],
          "reference": "https://perldoc.perl.org/perlre#Assertions",
          "description": "A <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.",
          "syntax": "- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/buffer-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/buffer-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/2"
          },
          "name": "Buffer Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Buffer Boundary"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC5",
          "description": "A <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.",
          "syntax": "- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/buffer-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/buffer-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/2"
          },
          "name": "Buffer Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Buffer Boundary"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.buffer_boundaries",
          "description": "A <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.",
          "syntax": "- `` \\` `` &mdash; Matches the start of the input.\r\n- `\\'` &mdash; Matches the end of the input.\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional sequence of newlines at the end of the buffer. Equivalent to `(?=\\n*\\z)`.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `` \\` `` &mdash; Matches the start of the input.\r\n- `\\'` &mdash; Matches the end of the input.\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional sequence of newlines at the end of the buffer. Equivalent to `(?=\\n*\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/buffer-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/buffer-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/buffer-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/2"
          },
          "name": "Buffer Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Buffer Boundary"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/anchors-in-regular-expressions",
          "description": "A <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.",
          "syntax": "- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/buffer-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/buffer-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/2"
          },
          "name": "Buffer Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Buffer Boundary"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L179-L181",
          "description": "A <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.",
          "syntax": "- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/buffer-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/buffer-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/2"
          },
          "name": "Buffer Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Buffer Boundary"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.",
          "syntax": "- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/buffer-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/buffer-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/2"
          },
          "name": "Buffer Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Buffer Boundary"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "A <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.",
          "syntax": "- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/buffer-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/buffer-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/2"
          },
          "name": "Buffer Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Buffer Boundary"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.12",
          "description": "A <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.",
          "syntax": "- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/buffer-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/buffer-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/2"
          },
          "name": "Buffer Boundaries",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Buffer Boundary"
          ],
          "description": "A <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.",
          "syntax": "- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/buffer-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/buffer-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
          ]
        }
      ],
      "content": "# Feature: Buffer Boundaries\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-buffer-boundaries) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-buffer-boundaries) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-buffer-boundaries) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-buffer-boundaries) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-buffer-boundaries) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-buffer-boundaries) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-buffer-boundaries) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-buffer-boundaries) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-buffer-boundaries) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/buffer-boundaries.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "word-boundaries",
      "feature": "word-boundaries",
      "name": "Word Boundaries",
      "built": true,
      "outFile": "features/word-boundaries.md",
      "priority": 3,
      "aliases": [
        "Word Boundary"
      ],
      "description": "A <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.",
      "syntax": "- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.",
      "see_also": [
        {
          "feature": "anchors",
          "name": "Anchors"
        },
        {
          "feature": "buffer-boundaries",
          "name": "Buffer Boundaries"
        },
        {
          "feature": "text-segment-boundaries",
          "name": "Text Segment Boundaries"
        },
        {
          "feature": "continuation-escape",
          "name": "Continuation Escape"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/3"
          },
          "name": "Word Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Word Boundary"
          ],
          "reference": "https://perldoc.perl.org/perlre#Assertions",
          "description": "A <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.",
          "syntax": "- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n- <code>\\b{<em>name</em>}</code> &mdash; Matches the start or the end of a unicode boundary specified by *name*.\r\n- <code>\\B{<em>name</em>}</code> &mdash; Matches when *not* at the start or the end of a unicode boundary specified by *name*.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n- <code>\\b{<em>name</em>}</code> &mdash; Matches the start or the end of a unicode boundary specified by *name*.\r\n- <code>\\B{<em>name</em>}</code> &mdash; Matches when *not* at the start or the end of a unicode boundary specified by *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/word-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/word-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/word-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/3"
          },
          "name": "Word Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Word Boundary"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC5",
          "description": "A <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.",
          "syntax": "- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n- `[[:<:]]` &mdash; Matches the start of a word. Equivalent to: `\\b(?=\\w)`\r\n- `[[:>:]]` &mdash; Matches the end of a word. Equivalent to: `\\b(?<=\\w)`",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n- `[[:<:]]` &mdash; Matches the start of a word. Equivalent to: `\\b(?=\\w)`\r\n- `[[:>:]]` &mdash; Matches the end of a word. Equivalent to: `\\b(?<=\\w)`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/word-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/word-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/word-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/3"
          },
          "name": "Word Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Word Boundary"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.word_boundaries",
          "description": "A <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.",
          "syntax": "- `` \\` `` &mdash; Matches the start of the input.\r\n- `\\'` &mdash; Matches the end of the input.\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional sequence of newlines at the end of the buffer. Equivalent to `(?=\\n*\\z)`.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `` \\` `` &mdash; Matches the start of the input.\r\n- `\\'` &mdash; Matches the end of the input.\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional sequence of newlines at the end of the buffer. Equivalent to `(?=\\n*\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/word-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/word-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/word-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/3"
          },
          "name": "Word Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Word Boundary"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/anchors-in-regular-expressions",
          "description": "A <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.",
          "syntax": "- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/word-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/word-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/3"
          },
          "name": "Word Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Word Boundary"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L176-L177",
          "description": "A <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.",
          "syntax": "- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/word-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/word-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/3"
          },
          "name": "Word Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Word Boundary"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.",
          "syntax": "- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/word-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/word-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/3"
          },
          "name": "Word Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Word Boundary"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "A <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.",
          "syntax": "- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/word-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/word-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/3"
          },
          "name": "Word Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Word Boundary"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.12",
          "description": "A <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.",
          "syntax": "- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/word-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/word-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/3"
          },
          "name": "Word Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Word Boundary"
          ],
          "reference": "https://tc39.es/ecma262/#sec-assertion",
          "description": "A <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.",
          "syntax": "- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/word-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/word-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
          ]
        }
      ],
      "content": "# Feature: Word Boundaries\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-word-boundaries) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-word-boundaries) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-word-boundaries) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-word-boundaries) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-word-boundaries) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-word-boundaries) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-word-boundaries) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-word-boundaries) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-word-boundaries) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/word-boundaries.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "text-segment-boundaries",
      "feature": "text-segment-boundaries",
      "name": "Text Segment Boundaries",
      "built": true,
      "outFile": "features/text-segment-boundaries.md",
      "priority": 4,
      "aliases": [
        "Text Segment Boundary"
      ],
      "description": "A <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.",
      "syntax": "- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.",
      "see_also": [
        {
          "feature": "anchors",
          "name": "Anchors"
        },
        {
          "feature": "buffer-boundaries",
          "name": "Buffer Boundaries"
        },
        {
          "feature": "word-boundaries",
          "name": "Word Boundaries"
        },
        {
          "feature": "continuation-escape",
          "name": "Continuation Escape"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/4"
          },
          "name": "Text Segment Boundaries",
          "supported": false,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Text Segment Boundary"
          ],
          "description": "A <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.",
          "syntax": "- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/text-segment-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/4"
          },
          "name": "Text Segment Boundaries",
          "supported": false,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Text Segment Boundary"
          ],
          "description": "A <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.",
          "syntax": "- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/text-segment-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/4"
          },
          "name": "Text Segment Boundaries",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Text Segment Boundary"
          ],
          "description": "A <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.",
          "syntax": "- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/text-segment-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/4"
          },
          "name": "Text Segment Boundaries",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Text Segment Boundary"
          ],
          "description": "A <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.",
          "syntax": "- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/text-segment-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/4"
          },
          "name": "Text Segment Boundaries",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Text Segment Boundary"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L186-L201",
          "description": "A <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.",
          "syntax": "- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/text-segment-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/text-segment-boundaries.md)\r\n-->\r\n\r\nA <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/text-segment-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/text-segment-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/4"
          },
          "name": "Text Segment Boundaries",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Text Segment Boundary"
          ],
          "description": "A <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.",
          "syntax": "- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/text-segment-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/4"
          },
          "name": "Text Segment Boundaries",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Text Segment Boundary"
          ],
          "description": "A <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.",
          "syntax": "- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/text-segment-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/4"
          },
          "name": "Text Segment Boundaries",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Text Segment Boundary"
          ],
          "description": "A <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.",
          "syntax": "- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/text-segment-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/4"
          },
          "name": "Text Segment Boundaries",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Text Segment Boundary"
          ],
          "description": "A <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.",
          "syntax": "- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "continuation-escape",
              "name": "Continuation Escape"
            }
          ],
          "content": "## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/text-segment-boundaries.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
          ]
        }
      ],
      "content": "# Feature: Text Segment Boundaries\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [❌](../engines/perl.md#feature-text-segment-boundaries) |\r\n| [PCRE](../engines/pcre.md) | [❌](../engines/pcre.md#feature-text-segment-boundaries) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-text-segment-boundaries) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-text-segment-boundaries) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-text-segment-boundaries) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-text-segment-boundaries) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-text-segment-boundaries) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-text-segment-boundaries) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-text-segment-boundaries) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/text-segment-boundaries.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "continuation-escape",
      "feature": "continuation-escape",
      "name": "Continuation Escape",
      "built": true,
      "outFile": "features/continuation-escape.md",
      "priority": 5,
      "description": "A <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.",
      "syntax": "- `\\G` &mdash; Matches either the start of the input or the start of the last match.",
      "see_also": [
        {
          "feature": "anchors",
          "name": "Anchors"
        },
        {
          "feature": "buffer-boundaries",
          "name": "Buffer Boundaries"
        },
        {
          "feature": "word-boundaries",
          "name": "Word Boundaries"
        },
        {
          "feature": "text-segment-boundaries",
          "name": "Text Segment Boundaries"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/5"
          },
          "name": "Continuation Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "reference": "https://perldoc.perl.org/perlre#Assertions",
          "description": "A <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.",
          "syntax": "- `\\G` &mdash; Matches either the start of the input or the start of the last match.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            }
          ],
          "content": "## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/continuation-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/continuation-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/5"
          },
          "name": "Continuation Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC5",
          "description": "A <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.",
          "syntax": "- `\\G` &mdash; Matches either the start of the input or the start of the last match.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            }
          ],
          "content": "## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/continuation-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/continuation-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/5"
          },
          "name": "Continuation Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.continuation_escape",
          "description": "A <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.",
          "syntax": "- `\\G` &mdash; Matches either the start of the input or the start of the last match.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            }
          ],
          "content": "## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/continuation-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/continuation-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/5"
          },
          "name": "Continuation Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/anchors-in-regular-expressions",
          "description": "A <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.",
          "syntax": "- `\\G` &mdash; Matches either the start of the input or the start of the last match.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            }
          ],
          "content": "## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/continuation-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/continuation-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/5"
          },
          "name": "Continuation Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L182",
          "description": "A <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.",
          "syntax": "- `\\G` &mdash; Matches either the start of the input or the start of the last match.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            }
          ],
          "content": "## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/continuation-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/continuation-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/5"
          },
          "name": "Continuation Escape",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "description": "A <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.",
          "syntax": "- `\\G` &mdash; Matches either the start of the input or the start of the last match.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            }
          ],
          "content": "## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/continuation-escape.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/continuation-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/5"
          },
          "name": "Continuation Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "A <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.",
          "syntax": "- `\\G` &mdash; Matches either the start of the input or the start of the last match.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            }
          ],
          "content": "## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/continuation-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/continuation-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/5"
          },
          "name": "Continuation Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.12",
          "description": "A <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.",
          "syntax": "- `\\G` &mdash; Matches either the start of the input or the start of the last match.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            }
          ],
          "content": "## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/continuation-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/continuation-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/5"
          },
          "name": "Continuation Escape",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "description": "A <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.",
          "syntax": "- `\\G` &mdash; Matches either the start of the input or the start of the last match.",
          "see_also": [
            {
              "feature": "anchors",
              "name": "Anchors"
            },
            {
              "feature": "buffer-boundaries",
              "name": "Buffer Boundaries"
            },
            {
              "feature": "word-boundaries",
              "name": "Word Boundaries"
            },
            {
              "feature": "text-segment-boundaries",
              "name": "Text Segment Boundaries"
            }
          ],
          "content": "## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/continuation-escape.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/continuation-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
          ]
        }
      ],
      "content": "# Feature: Continuation Escape\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-continuation-escape) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-continuation-escape) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-continuation-escape) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-continuation-escape) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-continuation-escape) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-continuation-escape) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-continuation-escape) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-continuation-escape) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-continuation-escape) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/anchors-and-boundaries/continuation-escape.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "alternatives",
      "feature": "alternatives",
      "name": "Alternatives",
      "built": true,
      "outFile": "features/alternatives.md",
      "priority": 6,
      "aliases": [
        "Alternative"
      ],
      "description": "An <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.",
      "syntax": "- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/6"
          },
          "name": "Alternatives",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Alternative"
          ],
          "reference": "https://perldoc.perl.org/perlre#Metacharacters",
          "description": "An <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.",
          "syntax": "- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "content": "## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/alternatives.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/alternatives.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/6"
          },
          "name": "Alternatives",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Alternative"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC12",
          "description": "An <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.",
          "syntax": "- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "content": "## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/alternatives.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/alternatives.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/6"
          },
          "name": "Alternatives",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Alternative"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.alternation",
          "description": "An <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.",
          "syntax": "- `|` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n> NOTE: In `Boost.Regex`, empty alternatives are not allowed, so `|abc` is invalid. You can specify an explicit empty alternative by using `(?:)`, for example: `(?:)|abc`.",
          "content": "## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `|` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n> NOTE: In `Boost.Regex`, empty alternatives are not allowed, so `|abc` is invalid. You can specify an explicit empty alternative by using `(?:)`, for example: `(?:)|abc`.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/alternatives.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/alternatives.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/alternatives.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/6"
          },
          "name": "Alternatives",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Alternative"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/alternation-constructs-in-regular-expressions#Either_Or",
          "description": "An <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.",
          "syntax": "- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "content": "## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/alternatives.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/alternatives.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/6"
          },
          "name": "Alternatives",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Alternative"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L9",
          "description": "An <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.",
          "syntax": "- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "content": "## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/alternatives.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/alternatives.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/6"
          },
          "name": "Alternatives",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Alternative"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "An <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.",
          "syntax": "- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "content": "## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/alternatives.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/alternatives.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/6"
          },
          "name": "Alternatives",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Alternative"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "An <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.",
          "syntax": "- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "content": "## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/alternatives.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/alternatives.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/6"
          },
          "name": "Alternatives",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Alternative"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.10",
          "description": "An <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.",
          "syntax": "- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "content": "## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/alternatives.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/alternatives.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/6"
          },
          "name": "Alternatives",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Alternative"
          ],
          "reference": "https://tc39.es/ecma262/#sec-alternative",
          "description": "An <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.",
          "syntax": "- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "content": "## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/alternatives.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/alternatives.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
          ]
        }
      ],
      "content": "# Feature: Alternatives\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\")</sup>\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-alternatives) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-alternatives) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-alternatives) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-alternatives) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-alternatives) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-alternatives) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-alternatives) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-alternatives) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-alternatives) |\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/alternatives.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "wildcard",
      "feature": "wildcard",
      "name": "Wildcard",
      "built": true,
      "outFile": "features/wildcard.md",
      "priority": 7,
      "aliases": [
        "Wildcards"
      ],
      "description": "A <dfn>Wildcard</dfn> matches a single, non-newline character.",
      "syntax": "- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/7"
          },
          "name": "Wildcard",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Wildcards"
          ],
          "reference": "https://perldoc.perl.org/perlre#Metacharacters",
          "description": "A <dfn>Wildcard</dfn> matches a single, non-newline character.",
          "syntax": "- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "content": "## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/wildcard.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/wildcard.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/7"
          },
          "name": "Wildcard",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Wildcards"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC7",
          "description": "A <dfn>Wildcard</dfn> matches a single, non-newline character.",
          "syntax": "- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "content": "## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/wildcard.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/wildcard.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/7"
          },
          "name": "Wildcard",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Wildcards"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.wildcard",
          "description": "A <dfn>Wildcard</dfn> matches a single, non-newline character.",
          "syntax": "- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "content": "## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/wildcard.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/wildcard.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/7"
          },
          "name": "Wildcard",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Wildcards"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions#any-character-",
          "description": "A <dfn>Wildcard</dfn> matches a single, non-newline character.",
          "syntax": "- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "content": "## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/wildcard.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/wildcard.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/7"
          },
          "name": "Wildcard",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Wildcards"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L48",
          "description": "A <dfn>Wildcard</dfn> matches a single, non-newline character.",
          "syntax": "- `.` &mdash; Matches any character except newline characters. If the `m` [flag] is set then this matches any character.\r\n  - NOTE: The `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc.",
          "content": "## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `m` [flag] is set then this matches any character.\r\n  - NOTE: The `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/wildcard.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/wildcard.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/wildcard.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/7"
          },
          "name": "Wildcard",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Wildcards"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Wildcard</dfn> matches a single, non-newline character.",
          "syntax": "- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "content": "## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/wildcard.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/wildcard.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/7"
          },
          "name": "Wildcard",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Wildcards"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "A <dfn>Wildcard</dfn> matches a single, non-newline character.",
          "syntax": "- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "content": "## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/wildcard.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/wildcard.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/7"
          },
          "name": "Wildcard",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Wildcards"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.6",
          "description": "A <dfn>Wildcard</dfn> matches a single, non-newline character.",
          "syntax": "- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "content": "## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/wildcard.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/wildcard.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/7"
          },
          "name": "Wildcard",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Wildcards"
          ],
          "reference": "https://tc39.es/ecma262/#sec-atom",
          "description": "A <dfn>Wildcard</dfn> matches a single, non-newline character.",
          "syntax": "- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "content": "## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/wildcard.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/wildcard.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
          ]
        }
      ],
      "content": "# Feature: Wildcard\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-wildcard) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-wildcard) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-wildcard) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-wildcard) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-wildcard) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-wildcard) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-wildcard) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-wildcard) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-wildcard) |\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/wildcard.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "character-classes",
      "feature": "character-classes",
      "name": "Character Classes",
      "built": true,
      "outFile": "features/character-classes.md",
      "priority": 8,
      "aliases": [
        "Character Class"
      ],
      "description": "A <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.",
      "syntax": "- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.",
      "see_also": [
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "links": [
        {
          "name": "Character Class Range",
          "href": "#character-class-range"
        },
        {
          "name": "Negated Character Class",
          "href": "#negated-character-class"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/8"
          },
          "name": "Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Character Class"
          ],
          "reference": "https://perldoc.perl.org/perlre#Character-Classes-and-other-Special-Escapes",
          "description": "A <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.",
          "syntax": "- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n- `(?[…])` &mdash; Extended Bracketed Character Class, permit the following features:\r\n  - [Character Class Intersection]\r\n  - [Character Class Subtraction]\r\n  - [Character Class Nested Set]\r\n  - [Character Class Union]\r\n  - [Character Class Symmetric Difference]\r\n  - [Character Class Complement]\r\n\r\n#### Extended Bracketed Character Class\r\n\r\nInside of `(?[…])`, only meta characters are permitted and whitespace is ignored. Individual characters (like `a`, `1`, etc.) must be enclosed in a [Character Class Nested Set].\r\n\r\nIn addition, expressions within the bracketed character class may be grouped using `(` and `)`.",
          "see_also": [
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "links": {
            "$ref": "#/features/8/links"
          },
          "content": "## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n- `(?[…])` &mdash; Extended Bracketed Character Class, permit the following features:\r\n  - [Character Class Intersection]\r\n  - [Character Class Subtraction]\r\n  - [Character Class Nested Set]\r\n  - [Character Class Union]\r\n  - [Character Class Symmetric Difference]\r\n  - [Character Class Complement]\r\n\r\n#### Extended Bracketed Character Class\r\n\r\nInside of `(?[…])`, only meta characters are permitted and whitespace is ignored. Individual characters (like `a`, `1`, etc.) must be enclosed in a [Character Class Nested Set].\r\n\r\nIn addition, expressions within the bracketed character class may be grouped using `(` and `)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/8"
          },
          "name": "Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Character Class"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC9",
          "description": "A <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.",
          "syntax": "- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.",
          "see_also": [
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "links": {
            "$ref": "#/features/8/links"
          },
          "content": "## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/8"
          },
          "name": "Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Character Class"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.character_sets",
          "description": "A <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.",
          "syntax": "- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.",
          "see_also": [
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "links": {
            "$ref": "#/features/8/links"
          },
          "content": "## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/8"
          },
          "name": "Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Character Class"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions",
          "description": "A <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.",
          "syntax": "- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.",
          "see_also": [
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "links": {
            "$ref": "#/features/8/links"
          },
          "content": "## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/8"
          },
          "name": "Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Character Class"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L205",
          "description": "A <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.",
          "syntax": "- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.",
          "see_also": [
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "links": {
            "$ref": "#/features/8/links"
          },
          "content": "## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/8"
          },
          "name": "Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Character Class"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.",
          "syntax": "- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.",
          "see_also": [
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "links": {
            "$ref": "#/features/8/links"
          },
          "content": "## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/8"
          },
          "name": "Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Character Class"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "A <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.",
          "syntax": "- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.",
          "see_also": [
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "links": {
            "$ref": "#/features/8/links"
          },
          "content": "## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/8"
          },
          "name": "Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Character Class"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.8",
          "description": "A <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.",
          "syntax": "- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.",
          "see_also": [
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "links": {
            "$ref": "#/features/8/links"
          },
          "content": "## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/8"
          },
          "name": "Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Character Class"
          ],
          "reference": "https://tc39.es/ecma262/#sec-characterclass",
          "description": "A <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.",
          "syntax": "- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.",
          "see_also": [
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "links": {
            "$ref": "#/features/8/links"
          },
          "content": "## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
          ]
        }
      ],
      "content": "# Feature: Character Classes\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-character-classes) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-character-classes) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-character-classes) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-character-classes) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-character-classes) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-character-classes) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-character-classes) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-character-classes) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-character-classes) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n[Character Class Range]: #character-class-range\r\n[Negated Character Class]: #negated-character-class\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
      ],
      "linksSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-classes.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "posix-character-classes",
      "feature": "posix-character-classes",
      "name": "Posix Character Classes",
      "built": true,
      "outFile": "features/posix-character-classes.md",
      "priority": 9,
      "aliases": [
        "Posix Character Class"
      ],
      "description": "A <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.",
      "syntax": "- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/9"
          },
          "name": "Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Posix Character Class"
          ],
          "reference": "https://perldoc.perl.org/perlrecharclass#POSIX-Character-Classes",
          "description": "A <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.",
          "syntax": "- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n- <code>(?[[:<em>name</em>:]])</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n- <code>(?[[:<em>name</em>:]])</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/9"
          },
          "name": "Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Posix Character Class"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC10",
          "description": "A <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.",
          "syntax": "- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/9"
          },
          "name": "Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Posix Character Class"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.character_classes",
          "description": "A <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.",
          "syntax": "- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/9"
          },
          "name": "Posix Character Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Posix Character Class"
          ],
          "description": "A <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.",
          "syntax": "- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/posix-character-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/9"
          },
          "name": "Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Posix Character Class"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L218",
          "description": "A <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.",
          "syntax": "- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/9"
          },
          "name": "Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Posix Character Class"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.",
          "syntax": "- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/9"
          },
          "name": "Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Posix Character Class"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#set-expressions-character-classes",
          "description": "A <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.",
          "syntax": "- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/9"
          },
          "name": "Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Posix Character Class"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.9",
          "description": "A <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.",
          "syntax": "- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/9"
          },
          "name": "Posix Character Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Posix Character Class"
          ],
          "description": "A <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.",
          "syntax": "- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/posix-character-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
          ]
        }
      ],
      "content": "# Feature: Posix Character Classes\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-posix-character-classes) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-posix-character-classes) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-posix-character-classes) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-posix-character-classes) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-posix-character-classes) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-posix-character-classes) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-posix-character-classes) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-posix-character-classes) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-posix-character-classes) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/posix-character-classes.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "negated-posix-character-classes",
      "feature": "negated-posix-character-classes",
      "name": "Negated Posix Character Classes",
      "built": true,
      "outFile": "features/negated-posix-character-classes.md",
      "priority": 10,
      "aliases": [
        "Negated Posix Character Class"
      ],
      "description": "A <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.",
      "syntax": "- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/10"
          },
          "name": "Negated Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Negated Posix Character Class"
          ],
          "reference": "https://perldoc.perl.org/perlrecharclass#POSIX-Character-Classes",
          "description": "A <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.",
          "syntax": "- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n- <code>(?[[:^<em>name</em>:]])</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/negated-posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/negated-posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n- <code>(?[[:^<em>name</em>:]])</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/negated-posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/negated-posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/negated-posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/10"
          },
          "name": "Negated Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Negated Posix Character Class"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC10",
          "description": "A <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.",
          "syntax": "- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/negated-posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/negated-posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/negated-posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/negated-posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/10"
          },
          "name": "Negated Posix Character Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Negated Posix Character Class"
          ],
          "description": "A <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n> NOTE: Some engines support negated posix character classes using <code>\\[\\[:^<em>name</em>:\\]\\]</code>, however this does not seem to be supported per the documentation. Instead, you must use a [Negated Character Class] with a [Posix Character Class]: <code>\\[^\\[:<em>name</em>:\\]\\]</code>.",
          "syntax": "- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/negated-posix-character-classes.md \"source for: supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/negated-posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/negated-posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/10"
          },
          "name": "Negated Posix Character Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Negated Posix Character Class"
          ],
          "description": "A <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.",
          "syntax": "- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/negated-posix-character-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/negated-posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/10"
          },
          "name": "Negated Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Negated Posix Character Class"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L218",
          "description": "A <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.",
          "syntax": "- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/negated-posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/negated-posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/negated-posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/negated-posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/10"
          },
          "name": "Negated Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Negated Posix Character Class"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.",
          "syntax": "- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/negated-posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/negated-posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/negated-posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/negated-posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/10"
          },
          "name": "Negated Posix Character Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Negated Posix Character Class"
          ],
          "description": "A <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.",
          "syntax": "- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/negated-posix-character-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/negated-posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/10"
          },
          "name": "Negated Posix Character Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Negated Posix Character Class"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.9",
          "description": "A <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.",
          "syntax": "- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/negated-posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/negated-posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/negated-posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/negated-posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/10"
          },
          "name": "Negated Posix Character Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Negated Posix Character Class"
          ],
          "description": "A <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.",
          "syntax": "- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/negated-posix-character-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/negated-posix-character-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
          ]
        }
      ],
      "content": "# Feature: Negated Posix Character Classes\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-negated-posix-character-classes) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-negated-posix-character-classes) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-negated-posix-character-classes) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-negated-posix-character-classes) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-negated-posix-character-classes) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-negated-posix-character-classes) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-negated-posix-character-classes) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-negated-posix-character-classes) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-negated-posix-character-classes) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/negated-posix-character-classes.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "collating-elements",
      "feature": "collating-elements",
      "name": "Collating Elements",
      "built": true,
      "outFile": "features/collating-elements.md",
      "priority": 11,
      "aliases": [
        "Collating Element"
      ],
      "description": "A <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.",
      "syntax": "- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/11"
          },
          "name": "Collating Elements",
          "supported": false,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Collating Element"
          ],
          "description": "A <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.",
          "syntax": "- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/collating-elements.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/11"
          },
          "name": "Collating Elements",
          "supported": false,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Collating Element"
          ],
          "description": "A <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.",
          "syntax": "- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/collating-elements.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/11"
          },
          "name": "Collating Elements",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Collating Element"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.collating_elements",
          "description": "A <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.",
          "syntax": "- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/collating-elements.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/collating-elements.md)\r\n-->\r\n\r\nA <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/collating-elements.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/collating-elements.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/11"
          },
          "name": "Collating Elements",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Collating Element"
          ],
          "description": "A <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.",
          "syntax": "- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/collating-elements.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/11"
          },
          "name": "Collating Elements",
          "supported": false,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Collating Element"
          ],
          "description": "A <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.",
          "syntax": "- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/collating-elements.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/11"
          },
          "name": "Collating Elements",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Collating Element"
          ],
          "description": "A <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.",
          "syntax": "- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/collating-elements.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/11"
          },
          "name": "Collating Elements",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Collating Element"
          ],
          "description": "A <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.",
          "syntax": "- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/collating-elements.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/11"
          },
          "name": "Collating Elements",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Collating Element"
          ],
          "description": "A <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.",
          "syntax": "- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/collating-elements.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/11"
          },
          "name": "Collating Elements",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Collating Element"
          ],
          "description": "A <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.",
          "syntax": "- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/collating-elements.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
          ]
        }
      ],
      "content": "# Feature: Collating Elements\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [❌](../engines/perl.md#feature-collating-elements) |\r\n| [PCRE](../engines/pcre.md) | [❌](../engines/pcre.md#feature-collating-elements) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-collating-elements) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-collating-elements) |\r\n| [Oniguruma](../engines/oniguruma.md) | [❌](../engines/oniguruma.md#feature-collating-elements) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-collating-elements) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-collating-elements) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-collating-elements) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-collating-elements) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/collating-elements.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "equivalence-classes",
      "feature": "equivalence-classes",
      "name": "Equivalence Classes",
      "built": true,
      "outFile": "features/equivalence-classes.md",
      "priority": 12,
      "aliases": [
        "Equivalence Class"
      ],
      "description": "An <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.",
      "syntax": "- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/12"
          },
          "name": "Equivalence Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Equivalence Class"
          ],
          "description": "An <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.",
          "syntax": "- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/equivalence-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/12"
          },
          "name": "Equivalence Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Equivalence Class"
          ],
          "description": "An <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.",
          "syntax": "- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/equivalence-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/12"
          },
          "name": "Equivalence Classes",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Equivalence Class"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.equivalence_classes",
          "description": "An <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.",
          "syntax": "- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/equivalence-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/equivalence-classes.md)\r\n-->\r\n\r\nAn <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/equivalence-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/equivalence-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/12"
          },
          "name": "Equivalence Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Equivalence Class"
          ],
          "description": "An <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.",
          "syntax": "- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/equivalence-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/12"
          },
          "name": "Equivalence Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Equivalence Class"
          ],
          "description": "An <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.",
          "syntax": "- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/equivalence-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/12"
          },
          "name": "Equivalence Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Equivalence Class"
          ],
          "description": "An <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.",
          "syntax": "- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/equivalence-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/12"
          },
          "name": "Equivalence Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Equivalence Class"
          ],
          "description": "An <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.",
          "syntax": "- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/equivalence-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/12"
          },
          "name": "Equivalence Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Equivalence Class"
          ],
          "description": "An <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.",
          "syntax": "- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/equivalence-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/12"
          },
          "name": "Equivalence Classes",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Equivalence Class"
          ],
          "description": "An <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.",
          "syntax": "- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/equivalence-classes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
          ]
        }
      ],
      "content": "# Feature: Equivalence Classes\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\")</sup>\r\n\r\nAn <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [❌](../engines/perl.md#feature-equivalence-classes) |\r\n| [PCRE](../engines/pcre.md) | [❌](../engines/pcre.md#feature-equivalence-classes) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-equivalence-classes) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-equivalence-classes) |\r\n| [Oniguruma](../engines/oniguruma.md) | [❌](../engines/oniguruma.md#feature-equivalence-classes) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-equivalence-classes) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-equivalence-classes) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-equivalence-classes) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-equivalence-classes) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/equivalence-classes.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "character-class-escapes",
      "feature": "character-class-escapes",
      "name": "Character Class Escapes",
      "built": true,
      "outFile": "features/character-class-escapes.md",
      "priority": 13,
      "aliases": [
        "Character Class Escape"
      ],
      "description": "A <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.",
      "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/13"
          },
          "name": "Character Class Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Character Class Escape"
          ],
          "reference": "https://perldoc.perl.org/perlre#Character-Classes-and-other-Special-Escapes",
          "description": "A <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.",
          "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/13"
          },
          "name": "Character Class Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Character Class Escape"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC9",
          "description": "A <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.",
          "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\h` &mdash; Any horizontal whitespace character.\r\n- `\\H` &mdash; Any non-horizontal whitespace character.\r\n- `\\v` &mdash; Any vertical whitespace character.\r\n- `\\V` &mdash; Any non-vertical whitespace character.\r\n- `\\N` &mdash; Any character that is not a newline. Similar to `.`, but is not affected by the `s` [RegExp flag].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\h` &mdash; Any horizontal whitespace character.\r\n- `\\H` &mdash; Any non-horizontal whitespace character.\r\n- `\\v` &mdash; Any vertical whitespace character.\r\n- `\\V` &mdash; Any non-vertical whitespace character.\r\n- `\\N` &mdash; Any character that is not a newline. Similar to `.`, but is not affected by the `s` [RegExp flag].\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/13"
          },
          "name": "Character Class Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Character Class Escape"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.single_character_character_class",
          "description": "A <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.",
          "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\l` &mdash; Any lower-case character.\r\n- `\\L` &mdash; Any non-lower-case character.\r\n- `\\u` &mdash; Any upper-case character.\r\n- `\\U` &mdash; Any non-upper-case character.\r\n- `\\h` &mdash; Any horizontal whitespace character.\r\n- `\\H` &mdash; Any non-horizontal whitespace character.\r\n- `\\v` &mdash; Any vertical whitespace character.\r\n- `\\V` &mdash; Any non-vertical whitespace character.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\l` &mdash; Any lower-case character.\r\n- `\\L` &mdash; Any non-lower-case character.\r\n- `\\u` &mdash; Any upper-case character.\r\n- `\\U` &mdash; Any non-upper-case character.\r\n- `\\h` &mdash; Any horizontal whitespace character.\r\n- `\\H` &mdash; Any non-horizontal whitespace character.\r\n- `\\v` &mdash; Any vertical whitespace character.\r\n- `\\V` &mdash; Any non-vertical whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/13"
          },
          "name": "Character Class Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Character Class Escape"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions#word-character-w",
          "description": "A <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.",
          "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/13"
          },
          "name": "Character Class Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Character Class Escape"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L50-L91",
          "description": "A <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.",
          "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\h` &mdash; Any hexadecimal digit character. Equivalent to `[0-9a-fA-F]`.\r\n- `\\H` &mdash; Any non-hexadecimal character. Equivalent to `[^0-9a-fA-F]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]` in non-Unicode mode, `\\p{General_Category}` in Unicode mode.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]` in non-Unicode mode, `\\P{General_Category}` in Unicode mode.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\N` &mdash; Any non-newline character. Equivalent to `(?-m:.)`.\r\n  - NOTE: The `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc.\r\n- `\\O` &mdash; Any character. Equivalent to `(?m:.)`.\r\n  - NOTE: The `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc.\r\n- `\\X` &mdash; Text segment. Equivalent to `(?>\\O(?:\\Y\\O)*)`.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\h` &mdash; Any hexadecimal digit character. Equivalent to `[0-9a-fA-F]`.\r\n- `\\H` &mdash; Any non-hexadecimal character. Equivalent to `[^0-9a-fA-F]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]` in non-Unicode mode, `\\p{General_Category}` in Unicode mode.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]` in non-Unicode mode, `\\P{General_Category}` in Unicode mode.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\N` &mdash; Any non-newline character. Equivalent to `(?-m:.)`.\r\n  - NOTE: The `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc.\r\n- `\\O` &mdash; Any character. Equivalent to `(?m:.)`.\r\n  - NOTE: The `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc.\r\n- `\\X` &mdash; Text segment. Equivalent to `(?>\\O(?:\\Y\\O)*)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/13"
          },
          "name": "Character Class Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Character Class Escape"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.",
          "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/13"
          },
          "name": "Character Class Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Character Class Escape"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "A <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.",
          "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/13"
          },
          "name": "Character Class Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Character Class Escape"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.9",
          "description": "A <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.",
          "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/13"
          },
          "name": "Character Class Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Character Class Escape"
          ],
          "reference": "https://tc39.es/ecma262/#sec-characterclassescape",
          "description": "A <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.",
          "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
          ]
        }
      ],
      "content": "# Feature: Character Class Escapes\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-character-class-escapes) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-character-class-escapes) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-character-class-escapes) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-character-class-escapes) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-character-class-escapes) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-character-class-escapes) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-character-class-escapes) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-character-class-escapes) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-character-class-escapes) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-escapes.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "line-endings-escape",
      "feature": "line-endings-escape",
      "name": "Line Endings Escape",
      "built": true,
      "outFile": "features/line-endings-escape.md",
      "priority": 14,
      "description": "A <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.",
      "syntax": "- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/14"
          },
          "name": "Line Endings Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "reference": "https://perldoc.perl.org/perlre#Character-Classes-and-other-Special-Escapes",
          "description": "A <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.",
          "syntax": "- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/line-endings-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/line-endings-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/14"
          },
          "name": "Line Endings Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC2",
          "description": "A <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.",
          "syntax": "- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/line-endings-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/line-endings-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/14"
          },
          "name": "Line Endings Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.matching_line_endings",
          "description": "A <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.",
          "syntax": "- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/line-endings-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/line-endings-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/14"
          },
          "name": "Line Endings Escape",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "description": "A <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.",
          "syntax": "- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/line-endings-escape.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/line-endings-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/14"
          },
          "name": "Line Endings Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L83-L87",
          "description": "A <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.",
          "syntax": "- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/line-endings-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/line-endings-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/14"
          },
          "name": "Line Endings Escape",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "description": "A <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.",
          "syntax": "- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/line-endings-escape.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/line-endings-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/14"
          },
          "name": "Line Endings Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "A <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.",
          "syntax": "- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/line-endings-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/line-endings-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/14"
          },
          "name": "Line Endings Escape",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.10",
          "description": "A <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.",
          "syntax": "- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/line-endings-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/line-endings-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/14"
          },
          "name": "Line Endings Escape",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "description": "A <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.",
          "syntax": "- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/line-endings-escape.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/line-endings-escape.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
          ]
        }
      ],
      "content": "# Feature: Line Endings Escape\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-line-endings-escape) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-line-endings-escape) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-line-endings-escape) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-line-endings-escape) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-line-endings-escape) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-line-endings-escape) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-line-endings-escape) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-line-endings-escape) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-line-endings-escape) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/line-endings-escape.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "character-property-escapes",
      "feature": "character-property-escapes",
      "name": "Character Property Escapes",
      "built": true,
      "outFile": "features/character-property-escapes.md",
      "priority": 15,
      "aliases": [
        "Character Property Escape"
      ],
      "description": "A <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.",
      "syntax": "- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/15"
          },
          "name": "Character Property Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Character Property Escape"
          ],
          "reference": "https://perldoc.perl.org/perlre#Character-Classes-and-other-Special-Escapes",
          "description": "A <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.",
          "syntax": "- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-property-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-property-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/15"
          },
          "name": "Character Property Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Character Property Escape"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC9",
          "description": "A <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.",
          "syntax": "- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-property-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-property-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/15"
          },
          "name": "Character Property Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Character Property Escape"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.character_properties",
          "description": "A <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.",
          "syntax": "- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-property-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-property-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/15"
          },
          "name": "Character Property Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Character Property Escape"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions#unicode-category-or-unicode-block-p",
          "description": "A <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.",
          "syntax": "- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined unicode property name. Matches a character that has the unicode property *name*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined unicode property name. Matches a character that does not have the unicode property *name*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined unicode property name. Matches a character that has the unicode property *name*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined unicode property name. Matches a character that does not have the unicode property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-property-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-property-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-property-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/15"
          },
          "name": "Character Property Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Character Property Escape"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L112",
          "description": "A <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.",
          "syntax": "- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\p{^<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\p{^<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-property-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-property-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-property-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/15"
          },
          "name": "Character Property Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Character Property Escape"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.",
          "syntax": "- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-property-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-property-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/15"
          },
          "name": "Character Property Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Character Property Escape"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "A <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.",
          "syntax": "- <code>\\N{<em>name</em>}</code> &mdash; Where *name* is a predefined unicode character name. Matches the named unicode character.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\N{<em>name</em>}</code> &mdash; Where *name* is a predefined unicode character name. Matches the named unicode character.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-property-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-property-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-property-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/15"
          },
          "name": "Character Property Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Character Property Escape"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.11",
          "description": "A <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.",
          "syntax": "- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-property-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-property-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/15"
          },
          "name": "Character Property Escapes",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Character Property Escape"
          ],
          "reference": "https://tc39.es/ecma262/#sec-characterclassescape",
          "description": "A <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.",
          "syntax": "- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-property-escapes.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-property-escapes.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
          ]
        }
      ],
      "content": "# Feature: Character Property Escapes\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-character-property-escapes) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-character-property-escapes) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-character-property-escapes) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-character-property-escapes) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-character-property-escapes) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-character-property-escapes) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-character-property-escapes) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-character-property-escapes) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-character-property-escapes) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-property-escapes.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "character-class-nested-set",
      "feature": "character-class-nested-set",
      "name": "Character Class Nested Set",
      "built": true,
      "outFile": "features/character-class-nested-set.md",
      "priority": 16,
      "aliases": [
        "Character Class Nested Sets"
      ],
      "description": "A <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].",
      "syntax": "- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].",
      "example": "```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/16"
          },
          "name": "Character Class Nested Set",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Character Class Nested Sets"
          ],
          "reference": "https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes",
          "description": "A <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].",
          "syntax": "- `(?[ […] ])` &mdash; Where `…` includes any contents allowed in a normal [character class].",
          "example": "```\r\n(?[[a-z]&[^d-q]])\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-nested-set.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-nested-set.md)\r\n-->\r\n\r\nA <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-nested-set.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?[ […] ])` &mdash; Where `…` includes any contents allowed in a normal [character class].\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-nested-set.md \"source for: example\")</sup>\r\n\r\n\r\n```\r\n(?[[a-z]&[^d-q]])\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-nested-set.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-nested-set.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-nested-set.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-nested-set.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/16"
          },
          "name": "Character Class Nested Set",
          "supported": false,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Character Class Nested Sets"
          ],
          "description": "A <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].",
          "syntax": "- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].",
          "example": "```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-nested-set.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-nested-set.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/16"
          },
          "name": "Character Class Nested Set",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Character Class Nested Sets"
          ],
          "description": "A <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].",
          "syntax": "- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].",
          "example": "```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-nested-set.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-nested-set.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/16"
          },
          "name": "Character Class Nested Set",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Character Class Nested Sets"
          ],
          "description": "A <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].",
          "syntax": "- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].",
          "example": "```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-nested-set.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-nested-set.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/16"
          },
          "name": "Character Class Nested Set",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Character Class Nested Sets"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L210",
          "description": "A <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].",
          "syntax": "- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].",
          "example": "```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-nested-set.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-nested-set.md)\r\n-->\r\n\r\nA <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: example\")</sup>\r\n\r\n\r\n```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-nested-set.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-nested-set.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/16"
          },
          "name": "Character Class Nested Set",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Character Class Nested Sets"
          ],
          "description": "A <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].",
          "syntax": "- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].",
          "example": "```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-nested-set.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-nested-set.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/16"
          },
          "name": "Character Class Nested Set",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Character Class Nested Sets"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#set-expressions-character-classes",
          "description": "A <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].",
          "syntax": "- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].",
          "example": "```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-nested-set.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-nested-set.md)\r\n-->\r\n\r\nA <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: example\")</sup>\r\n\r\n\r\n```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-nested-set.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-nested-set.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/16"
          },
          "name": "Character Class Nested Set",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Character Class Nested Sets"
          ],
          "description": "A <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].",
          "syntax": "- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].",
          "example": "```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-nested-set.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-nested-set.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/16"
          },
          "name": "Character Class Nested Set",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Character Class Nested Sets"
          ],
          "reference": "https://github.com/tc39/proposal-regexp-set-notation",
          "description": "A <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].\r\n\r\n> NOTE: This feature is currently a [proposal](https://github.com/tc39/proposal-regexp-set-notation) at Stage 2 of the ECMA-262 specification process.",
          "syntax": "- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].",
          "example": "```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-nested-set.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-nested-set.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-nested-set.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-nested-set.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
          ]
        }
      ],
      "content": "# Feature: Character Class Nested Set\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: example\")</sup>\r\n\r\n\r\n```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-character-class-nested-set) |\r\n| [PCRE](../engines/pcre.md) | [❌](../engines/pcre.md#feature-character-class-nested-set) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-character-class-nested-set) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-character-class-nested-set) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-character-class-nested-set) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-character-class-nested-set) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-character-class-nested-set) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-character-class-nested-set) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-character-class-nested-set) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
      ],
      "exampleSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-nested-set.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "character-class-intersection",
      "feature": "character-class-intersection",
      "name": "Character Class Intersection",
      "built": true,
      "outFile": "features/character-class-intersection.md",
      "priority": 17,
      "aliases": [
        "Character Class Intersections"
      ],
      "description": "<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.",
      "syntax": "- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/17"
          },
          "name": "Character Class Intersection",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Character Class Intersections"
          ],
          "reference": "https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes",
          "description": "<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.",
          "syntax": "- <code>(?[ <em>a</em> & <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-intersection.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-intersection.md)\r\n-->\r\n\r\n<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-intersection.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?[ <em>a</em> & <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-intersection.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-intersection.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-intersection.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/17"
          },
          "name": "Character Class Intersection",
          "supported": false,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Character Class Intersections"
          ],
          "description": "<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.",
          "syntax": "- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-intersection.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-intersection.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/17"
          },
          "name": "Character Class Intersection",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Character Class Intersections"
          ],
          "description": "<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.",
          "syntax": "- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-intersection.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-intersection.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/17"
          },
          "name": "Character Class Intersection",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Character Class Intersections"
          ],
          "description": "<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.",
          "syntax": "- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-intersection.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-intersection.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/17"
          },
          "name": "Character Class Intersection",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Character Class Intersections"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L210",
          "description": "<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.",
          "syntax": "- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-intersection.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-intersection.md)\r\n-->\r\n\r\n<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-intersection.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-intersection.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/17"
          },
          "name": "Character Class Intersection",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Character Class Intersections"
          ],
          "description": "<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.",
          "syntax": "- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-intersection.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-intersection.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/17"
          },
          "name": "Character Class Intersection",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Character Class Intersections"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#set-expressions-character-classes",
          "description": "<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.",
          "syntax": "- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-intersection.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-intersection.md)\r\n-->\r\n\r\n<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-intersection.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-intersection.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/17"
          },
          "name": "Character Class Intersection",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Character Class Intersections"
          ],
          "description": "<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.",
          "syntax": "- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-intersection.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-intersection.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/17"
          },
          "name": "Character Class Intersection",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Character Class Intersections"
          ],
          "reference": "https://github.com/tc39/proposal-regexp-set-notation",
          "description": "<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.\r\n\r\n> NOTE: This feature is currently a [proposal](https://github.com/tc39/proposal-regexp-set-notation) at Stage 2 of the ECMA-262 specification process.",
          "syntax": "- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-intersection.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-intersection.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-intersection.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-intersection.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
          ]
        }
      ],
      "content": "# Feature: Character Class Intersection\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-character-class-intersection) |\r\n| [PCRE](../engines/pcre.md) | [❌](../engines/pcre.md#feature-character-class-intersection) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-character-class-intersection) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-character-class-intersection) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-character-class-intersection) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-character-class-intersection) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-character-class-intersection) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-character-class-intersection) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-character-class-intersection) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-intersection.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "character-class-union",
      "feature": "character-class-union",
      "name": "Character Class Union",
      "built": true,
      "outFile": "features/character-class-union.md",
      "priority": 18,
      "aliases": [
        "Character Class Unions"
      ],
      "description": "<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/18"
          },
          "name": "Character Class Union",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Character Class Unions"
          ],
          "reference": "https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes",
          "description": "<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].",
          "syntax": "- <code>(?[ <em>a</em> + <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n- <code>(?[ <em>a</em> | <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-union.md)\r\n-->\r\n\r\n<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-union.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?[ <em>a</em> + <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n- <code>(?[ <em>a</em> | <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-union.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-union.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-union.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/18"
          },
          "name": "Character Class Union",
          "supported": false,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Character Class Unions"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-union.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-union.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/18"
          },
          "name": "Character Class Union",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Character Class Unions"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-union.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-union.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/18"
          },
          "name": "Character Class Union",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Character Class Unions"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-union.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-union.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/18"
          },
          "name": "Character Class Union",
          "supported": false,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Character Class Unions"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-union.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-union.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/18"
          },
          "name": "Character Class Union",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Character Class Unions"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-union.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-union.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/18"
          },
          "name": "Character Class Union",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Character Class Unions"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-union.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-union.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/18"
          },
          "name": "Character Class Union",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Character Class Unions"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-union.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-union.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/18"
          },
          "name": "Character Class Union",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Character Class Unions"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-union.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-union.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
          ]
        }
      ],
      "content": "# Feature: Character Class Union\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-character-class-union) |\r\n| [PCRE](../engines/pcre.md) | [❌](../engines/pcre.md#feature-character-class-union) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-character-class-union) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-character-class-union) |\r\n| [Oniguruma](../engines/oniguruma.md) | [❌](../engines/oniguruma.md#feature-character-class-union) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-character-class-union) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-character-class-union) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-character-class-union) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-character-class-union) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-union.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "character-class-subtraction",
      "feature": "character-class-subtraction",
      "name": "Character Class Subtraction",
      "built": true,
      "outFile": "features/character-class-subtraction.md",
      "priority": 19,
      "description": "<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/19"
          },
          "name": "Character Class Subtraction",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "reference": "https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes",
          "description": "<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].",
          "syntax": "- <code>(?[ <em>a</em> - <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-subtraction.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-subtraction.md)\r\n-->\r\n\r\n<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-subtraction.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?[ <em>a</em> - <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-subtraction.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-subtraction.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-subtraction.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/19"
          },
          "name": "Character Class Subtraction",
          "supported": false,
          "built": true,
          "outFile": "engines/pcre.md",
          "description": "<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-subtraction.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-subtraction.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/19"
          },
          "name": "Character Class Subtraction",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "description": "<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-subtraction.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-subtraction.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/19"
          },
          "name": "Character Class Subtraction",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions#character-class-subtraction-base_group---excluded_group",
          "description": "<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-subtraction.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-class-subtraction.md)\r\n-->\r\n\r\n<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-subtraction.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-subtraction.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/19"
          },
          "name": "Character Class Subtraction",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L210-L212",
          "description": "<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n> NOTE: Oniguruma does not support character class subtraction directly, instead you must use a combination of [character class intersections] and [character class nested sets]",
          "syntax": "",
          "example": "```\r\n[a-w&&[^c-g]z]\r\n```\r\n\r\nIs equivalent to the following pseudo pattern:\r\n\r\n```\r\n([a-w] AND ([^c-g] OR z))\r\n```\r\n\r\nWhich reduces to:\r\n\r\n```re\r\n[abh-w]\r\n```\r\n\r\nSource for this example comes from Oniguruma: [source](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L212)",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-subtraction.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-subtraction.md)\r\n-->\r\n\r\n<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n> NOTE: Oniguruma does not support character class subtraction directly, instead you must use a combination of [character class intersections] and [character class nested sets]\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-subtraction.md \"source for: example\")</sup>\r\n\r\n\r\n```\r\n[a-w&&[^c-g]z]\r\n```\r\n\r\nIs equivalent to the following pseudo pattern:\r\n\r\n```\r\n([a-w] AND ([^c-g] OR z))\r\n```\r\n\r\nWhich reduces to:\r\n\r\n```re\r\n[abh-w]\r\n```\r\n\r\nSource for this example comes from Oniguruma: [source](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L212)\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-subtraction.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-subtraction.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-subtraction.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-subtraction.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-subtraction.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/19"
          },
          "name": "Character Class Subtraction",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "description": "<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-subtraction.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-subtraction.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/19"
          },
          "name": "Character Class Subtraction",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#set-expressions-character-classes",
          "description": "<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].",
          "syntax": "- `[…--…]` &mdash; Matches any character that is in the left-hand set of `--` but not in the right-hand set.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-subtraction.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-subtraction.md)\r\n-->\r\n\r\n<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-subtraction.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…--…]` &mdash; Matches any character that is in the left-hand set of `--` but not in the right-hand set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-subtraction.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-subtraction.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-subtraction.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/19"
          },
          "name": "Character Class Subtraction",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "description": "<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-subtraction.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-subtraction.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/19"
          },
          "name": "Character Class Subtraction",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "reference": "https://github.com/tc39/proposal-regexp-set-notation",
          "description": "<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n> NOTE: This feature is currently a [proposal](https://github.com/tc39/proposal-regexp-set-notation) at Stage 2 of the ECMA-262 specification process.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-subtraction.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-subtraction.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-subtraction.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-subtraction.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-subtraction.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
          ]
        }
      ],
      "content": "# Feature: Character Class Subtraction\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-character-class-subtraction) |\r\n| [PCRE](../engines/pcre.md) | [❌](../engines/pcre.md#feature-character-class-subtraction) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-character-class-subtraction) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-character-class-subtraction) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-character-class-subtraction) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-character-class-subtraction) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-character-class-subtraction) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-character-class-subtraction) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-character-class-subtraction) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-subtraction.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "character-class-symmetric-difference",
      "feature": "character-class-symmetric-difference",
      "name": "Character Class Symmetric Difference",
      "built": true,
      "outFile": "features/character-class-symmetric-difference.md",
      "priority": 20,
      "aliases": [
        "Character Class Symmetric Differences"
      ],
      "description": "<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-complement",
          "name": "Character Class Complement"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/20"
          },
          "name": "Character Class Symmetric Difference",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Character Class Symmetric Differences"
          ],
          "reference": "https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes",
          "description": "<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].",
          "syntax": "- <code>(?[ <em>a</em> ^ <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-symmetric-difference.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?[ <em>a</em> ^ <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-symmetric-difference.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-symmetric-difference.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-symmetric-difference.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/20"
          },
          "name": "Character Class Symmetric Difference",
          "supported": false,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Character Class Symmetric Differences"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-symmetric-difference.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-symmetric-difference.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/20"
          },
          "name": "Character Class Symmetric Difference",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Character Class Symmetric Differences"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-symmetric-difference.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-symmetric-difference.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/20"
          },
          "name": "Character Class Symmetric Difference",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Character Class Symmetric Differences"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-symmetric-difference.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-symmetric-difference.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/20"
          },
          "name": "Character Class Symmetric Difference",
          "supported": false,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Character Class Symmetric Differences"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-symmetric-difference.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-symmetric-difference.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/20"
          },
          "name": "Character Class Symmetric Difference",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Character Class Symmetric Differences"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-symmetric-difference.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-symmetric-difference.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/20"
          },
          "name": "Character Class Symmetric Difference",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Character Class Symmetric Differences"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-symmetric-difference.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-symmetric-difference.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/20"
          },
          "name": "Character Class Symmetric Difference",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Character Class Symmetric Differences"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-symmetric-difference.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-symmetric-difference.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/20"
          },
          "name": "Character Class Symmetric Difference",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Character Class Symmetric Differences"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-complement",
              "name": "Character Class Complement"
            }
          ],
          "content": "## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-symmetric-difference.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-symmetric-difference.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
          ]
        }
      ],
      "content": "# Feature: Character Class Symmetric Difference\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-character-class-symmetric-difference) |\r\n| [PCRE](../engines/pcre.md) | [❌](../engines/pcre.md#feature-character-class-symmetric-difference) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-character-class-symmetric-difference) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-character-class-symmetric-difference) |\r\n| [Oniguruma](../engines/oniguruma.md) | [❌](../engines/oniguruma.md#feature-character-class-symmetric-difference) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-character-class-symmetric-difference) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-character-class-symmetric-difference) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-character-class-symmetric-difference) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-character-class-symmetric-difference) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-symmetric-difference.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "character-class-complement",
      "feature": "character-class-complement",
      "name": "Character Class Complement",
      "built": true,
      "outFile": "features/character-class-complement.md",
      "priority": 21,
      "aliases": [
        "Character Class Complements"
      ],
      "description": "<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].",
      "see_also": [
        {
          "feature": "character-classes",
          "name": "Character Classes"
        },
        {
          "feature": "posix-character-classes",
          "name": "Posix Character Classes"
        },
        {
          "feature": "negated-posix-character-classes",
          "name": "Negated Posix Character Classes"
        },
        {
          "feature": "collating-elements",
          "name": "Collating Elements"
        },
        {
          "feature": "equivalence-classes",
          "name": "Equivalence Classes"
        },
        {
          "feature": "character-class-escapes",
          "name": "Character Class Escapes"
        },
        {
          "feature": "line-endings-escape",
          "name": "Line Endings Escape"
        },
        {
          "feature": "character-property-escapes",
          "name": "Character Property Escapes"
        },
        {
          "feature": "character-class-nested-set",
          "name": "Character Class Nested Set"
        },
        {
          "feature": "character-class-intersection",
          "name": "Character Class Intersection"
        },
        {
          "feature": "character-class-union",
          "name": "Character Class Union"
        },
        {
          "feature": "character-class-subtraction",
          "name": "Character Class Subtraction"
        },
        {
          "feature": "character-class-symmetric-difference",
          "name": "Character Class Symmetric Difference"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/21"
          },
          "name": "Character Class Complement",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Character Class Complements"
          ],
          "reference": "https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes",
          "description": "<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].",
          "syntax": "- <code>(?[ !<em>a</em> ])</code> &mdash; Where *a* is a metacharacter or other *Class Atom*.",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            }
          ],
          "content": "## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-complement.md)\r\n-->\r\n\r\n<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-complement.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?[ !<em>a</em> ])</code> &mdash; Where *a* is a metacharacter or other *Class Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-complement.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-complement.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/character-class-complement.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/21"
          },
          "name": "Character Class Complement",
          "supported": false,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Character Class Complements"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            }
          ],
          "content": "## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-complement.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/character-class-complement.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/21"
          },
          "name": "Character Class Complement",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Character Class Complements"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            }
          ],
          "content": "## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-complement.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/character-class-complement.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/21"
          },
          "name": "Character Class Complement",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Character Class Complements"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            }
          ],
          "content": "## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-complement.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/character-class-complement.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/21"
          },
          "name": "Character Class Complement",
          "supported": false,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Character Class Complements"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            }
          ],
          "content": "## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-complement.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/character-class-complement.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/21"
          },
          "name": "Character Class Complement",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Character Class Complements"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            }
          ],
          "content": "## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-complement.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/character-class-complement.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/21"
          },
          "name": "Character Class Complement",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Character Class Complements"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            }
          ],
          "content": "## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-complement.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/character-class-complement.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/21"
          },
          "name": "Character Class Complement",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Character Class Complements"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            }
          ],
          "content": "## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-complement.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/character-class-complement.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/21"
          },
          "name": "Character Class Complement",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Character Class Complements"
          ],
          "reference": "#not-supported-features",
          "description": "<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].",
          "see_also": [
            {
              "feature": "character-classes",
              "name": "Character Classes"
            },
            {
              "feature": "posix-character-classes",
              "name": "Posix Character Classes"
            },
            {
              "feature": "negated-posix-character-classes",
              "name": "Negated Posix Character Classes"
            },
            {
              "feature": "collating-elements",
              "name": "Collating Elements"
            },
            {
              "feature": "equivalence-classes",
              "name": "Equivalence Classes"
            },
            {
              "feature": "character-class-escapes",
              "name": "Character Class Escapes"
            },
            {
              "feature": "line-endings-escape",
              "name": "Line Endings Escape"
            },
            {
              "feature": "character-property-escapes",
              "name": "Character Property Escapes"
            },
            {
              "feature": "character-class-nested-set",
              "name": "Character Class Nested Set"
            },
            {
              "feature": "character-class-intersection",
              "name": "Character Class Intersection"
            },
            {
              "feature": "character-class-union",
              "name": "Character Class Union"
            },
            {
              "feature": "character-class-subtraction",
              "name": "Character Class Subtraction"
            },
            {
              "feature": "character-class-symmetric-difference",
              "name": "Character Class Symmetric Difference"
            }
          ],
          "content": "## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-complement.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/character-class-complement.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
          ]
        }
      ],
      "content": "# Feature: Character Class Complement\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-character-class-complement) |\r\n| [PCRE](../engines/pcre.md) | [❌](../engines/pcre.md#feature-character-class-complement) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-character-class-complement) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-character-class-complement) |\r\n| [Oniguruma](../engines/oniguruma.md) | [❌](../engines/oniguruma.md#feature-character-class-complement) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-character-class-complement) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-character-class-complement) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-character-class-complement) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-character-class-complement) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/character-classes/character-class-complement.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "quoted-characters",
      "feature": "quoted-characters",
      "name": "Quoted Characters",
      "built": true,
      "outFile": "features/quoted-characters.md",
      "priority": 22,
      "description": "<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.",
      "syntax": "- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/22"
          },
          "name": "Quoted Characters",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "reference": "https://perldoc.perl.org/perlre#Escape-sequences",
          "description": "<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.",
          "syntax": "- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "content": "## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/quoted-characters.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/quoted-characters.md)\r\n-->\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/quoted-characters.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/quoted-characters.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/22"
          },
          "name": "Quoted Characters",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC5",
          "description": "<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.",
          "syntax": "- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "content": "## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/quoted-characters.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/quoted-characters.md)\r\n-->\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/quoted-characters.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/quoted-characters.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/22"
          },
          "name": "Quoted Characters",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.quoting_escape",
          "description": "<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.",
          "syntax": "- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "content": "## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/quoted-characters.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/quoted-characters.md)\r\n-->\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/quoted-characters.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/quoted-characters.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/22"
          },
          "name": "Quoted Characters",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "description": "<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.",
          "syntax": "- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "content": "## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/quoted-characters.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/quoted-characters.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/22"
          },
          "name": "Quoted Characters",
          "supported": false,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "description": "<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.",
          "syntax": "- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "content": "## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/quoted-characters.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/quoted-characters.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/22"
          },
          "name": "Quoted Characters",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "description": "<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.",
          "syntax": "- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "content": "## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/quoted-characters.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/quoted-characters.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/22"
          },
          "name": "Quoted Characters",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.",
          "syntax": "- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "content": "## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/quoted-characters.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/quoted-characters.md)\r\n-->\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/quoted-characters.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/quoted-characters.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/22"
          },
          "name": "Quoted Characters",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4",
          "description": "<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.",
          "syntax": "- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "content": "## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/quoted-characters.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/quoted-characters.md)\r\n-->\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/quoted-characters.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/quoted-characters.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/22"
          },
          "name": "Quoted Characters",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "description": "<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.",
          "syntax": "- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.",
          "content": "## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/quoted-characters.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/quoted-characters.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
          ]
        }
      ],
      "content": "# Feature: Quoted Characters\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-quoted-characters) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-quoted-characters) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-quoted-characters) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-quoted-characters) |\r\n| [Oniguruma](../engines/oniguruma.md) | [❌](../engines/oniguruma.md#feature-quoted-characters) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-quoted-characters) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-quoted-characters) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-quoted-characters) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-quoted-characters) |\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quoted-characters.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "quantifiers",
      "feature": "quantifiers",
      "name": "Quantifiers",
      "built": true,
      "outFile": "features/quantifiers.md",
      "priority": 23,
      "aliases": [
        "Quantifier"
      ],
      "description": "<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.",
      "syntax": "- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.",
      "see_also": [
        {
          "feature": "lazy-quantifiers",
          "name": "Lazy Quantifiers"
        },
        {
          "feature": "possessive-quantifiers",
          "name": "Possessive Quantifiers"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/23"
          },
          "name": "Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Quantifier"
          ],
          "reference": "https://perldoc.perl.org/perlre#Quantifiers",
          "description": "<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.",
          "syntax": "- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{,<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-most *n* times. Example: `a{,2}` matches ``, `a`, `aa`, but not `aaa`, `aaaa`, etc.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.",
          "see_also": [
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{,<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-most *n* times. Example: `a{,2}` matches ``, `a`, `aa`, but not `aaa`, `aaaa`, etc.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/23"
          },
          "name": "Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Quantifier"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC17",
          "description": "<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.",
          "syntax": "- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.",
          "see_also": [
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/23"
          },
          "name": "Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Quantifier"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.repeats",
          "description": "<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.",
          "syntax": "- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.",
          "see_also": [
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/23"
          },
          "name": "Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Quantifier"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/quantifiers-in-regular-expressions",
          "description": "<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.",
          "syntax": "- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.",
          "see_also": [
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/23"
          },
          "name": "Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Quantifier"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L132",
          "description": "<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.",
          "syntax": "- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.",
          "see_also": [
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/23"
          },
          "name": "Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Quantifier"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.",
          "syntax": "- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.",
          "see_also": [
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/23"
          },
          "name": "Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Quantifier"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.",
          "syntax": "- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.",
          "see_also": [
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/23"
          },
          "name": "Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Quantifier"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.14",
          "description": "<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.",
          "syntax": "- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.",
          "see_also": [
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/23"
          },
          "name": "Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Quantifier"
          ],
          "reference": "https://tc39.es/ecma262/#sec-quantifier",
          "description": "<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.",
          "syntax": "- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.",
          "see_also": [
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
          ]
        }
      ],
      "content": "# Feature: Quantifiers\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-quantifiers) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-quantifiers) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-quantifiers) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-quantifiers) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-quantifiers) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-quantifiers) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-quantifiers) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-quantifiers) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-quantifiers) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/quantifiers.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "lazy-quantifiers",
      "feature": "lazy-quantifiers",
      "name": "Lazy Quantifiers",
      "built": true,
      "outFile": "features/lazy-quantifiers.md",
      "priority": 24,
      "aliases": [
        "Lazy Quantifier"
      ],
      "description": "<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.",
      "syntax": "- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.",
      "see_also": [
        {
          "feature": "quantifiers",
          "name": "Quantifiers"
        },
        {
          "feature": "possessive-quantifiers",
          "name": "Possessive Quantifiers"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/24"
          },
          "name": "Lazy Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Lazy Quantifier"
          ],
          "reference": "https://perldoc.perl.org/perlre#Quantifiers",
          "description": "<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.",
          "syntax": "- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{,<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-most *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{,<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-most *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/lazy-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/lazy-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/lazy-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/24"
          },
          "name": "Lazy Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Lazy Quantifier"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC17",
          "description": "<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.",
          "syntax": "- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/lazy-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/lazy-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/24"
          },
          "name": "Lazy Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Lazy Quantifier"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.non_greedy_repeats",
          "description": "<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.",
          "syntax": "- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/lazy-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/lazy-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/24"
          },
          "name": "Lazy Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Lazy Quantifier"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/quantifiers-in-regular-expressions#greedy-and-lazy-quantifiers",
          "description": "<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.",
          "syntax": "- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/lazy-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/lazy-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/24"
          },
          "name": "Lazy Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Lazy Quantifier"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L145",
          "description": "<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.",
          "syntax": "- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/lazy-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/lazy-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/24"
          },
          "name": "Lazy Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Lazy Quantifier"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.",
          "syntax": "- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/lazy-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/lazy-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/24"
          },
          "name": "Lazy Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Lazy Quantifier"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.",
          "syntax": "- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/lazy-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/lazy-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/24"
          },
          "name": "Lazy Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Lazy Quantifier"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.14",
          "description": "<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.",
          "syntax": "- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/lazy-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/lazy-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/24"
          },
          "name": "Lazy Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Lazy Quantifier"
          ],
          "reference": "https://tc39.es/ecma262/#sec-quantifier",
          "description": "<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.",
          "syntax": "- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "possessive-quantifiers",
              "name": "Possessive Quantifiers"
            }
          ],
          "content": "## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/lazy-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/lazy-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
          ]
        }
      ],
      "content": "# Feature: Lazy Quantifiers\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-lazy-quantifiers) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-lazy-quantifiers) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-lazy-quantifiers) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-lazy-quantifiers) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-lazy-quantifiers) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-lazy-quantifiers) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-lazy-quantifiers) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-lazy-quantifiers) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-lazy-quantifiers) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/lazy-quantifiers.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "possessive-quantifiers",
      "feature": "possessive-quantifiers",
      "name": "Possessive Quantifiers",
      "built": true,
      "outFile": "features/possessive-quantifiers.md",
      "priority": 25,
      "aliases": [
        "Possessive Quantifier"
      ],
      "description": "<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.",
      "syntax": "- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.",
      "see_also": [
        {
          "feature": "quantifiers",
          "name": "Quantifiers"
        },
        {
          "feature": "lazy-quantifiers",
          "name": "Lazy Quantifiers"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/25"
          },
          "name": "Possessive Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Possessive Quantifier"
          ],
          "reference": "https://perldoc.perl.org/perlre#Quantifiers",
          "description": "<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.",
          "syntax": "- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times without backtracking (redundant).\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{,<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-most *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            }
          ],
          "content": "## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times without backtracking (redundant).\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{,<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-most *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/possessive-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/possessive-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/possessive-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/25"
          },
          "name": "Possessive Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Possessive Quantifier"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC18",
          "description": "<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.",
          "syntax": "- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            }
          ],
          "content": "## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/possessive-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/possessive-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/25"
          },
          "name": "Possessive Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Possessive Quantifier"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.possessive_repeats",
          "description": "<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.",
          "syntax": "- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            }
          ],
          "content": "## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/possessive-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/possessive-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/25"
          },
          "name": "Possessive Quantifiers",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Possessive Quantifier"
          ],
          "description": "<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.",
          "syntax": "- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            }
          ],
          "content": "## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/possessive-quantifiers.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/possessive-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/25"
          },
          "name": "Possessive Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Possessive Quantifier"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L159",
          "description": "<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.",
          "syntax": "- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            }
          ],
          "content": "## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/possessive-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/possessive-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/25"
          },
          "name": "Possessive Quantifiers",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Possessive Quantifier"
          ],
          "description": "<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.",
          "syntax": "- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            }
          ],
          "content": "## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/possessive-quantifiers.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/possessive-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/25"
          },
          "name": "Possessive Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Possessive Quantifier"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.",
          "syntax": "- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            }
          ],
          "content": "## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/possessive-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/possessive-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/25"
          },
          "name": "Possessive Quantifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Possessive Quantifier"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.15",
          "description": "<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.",
          "syntax": "- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            }
          ],
          "content": "## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/possessive-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/possessive-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/25"
          },
          "name": "Possessive Quantifiers",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Possessive Quantifier"
          ],
          "description": "<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.",
          "syntax": "- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.",
          "see_also": [
            {
              "feature": "quantifiers",
              "name": "Quantifiers"
            },
            {
              "feature": "lazy-quantifiers",
              "name": "Lazy Quantifiers"
            }
          ],
          "content": "## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/possessive-quantifiers.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/possessive-quantifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
          ]
        }
      ],
      "content": "# Feature: Possessive Quantifiers\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-possessive-quantifiers) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-possessive-quantifiers) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-possessive-quantifiers) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-possessive-quantifiers) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-possessive-quantifiers) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-possessive-quantifiers) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-possessive-quantifiers) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-possessive-quantifiers) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-possessive-quantifiers) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/quantifiers/possessive-quantifiers.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "capturing-groups",
      "feature": "capturing-groups",
      "name": "Capturing Groups",
      "built": true,
      "outFile": "features/capturing-groups.md",
      "priority": 26,
      "aliases": [
        "Capturing Group",
        "Capture Groups",
        "Capture Group"
      ],
      "description": "A <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.",
      "syntax": "- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.",
      "see_also": [
        {
          "feature": "named-capturing-groups",
          "name": "Named Capturing Groups"
        },
        {
          "feature": "non-capturing-groups",
          "name": "Non-Capturing Groups"
        },
        {
          "feature": "backreferences",
          "name": "Backreferences"
        },
        {
          "feature": "recursion",
          "name": "Recursion"
        },
        {
          "feature": "subroutines",
          "name": "Subroutines"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/26"
          },
          "name": "Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Capturing Group",
            "Capture Groups",
            "Capture Group"
          ],
          "reference": "https://perldoc.perl.org/perlre#Capture-groups",
          "description": "A <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.",
          "syntax": "- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/26"
          },
          "name": "Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Capturing Group",
            "Capture Groups",
            "Capture Group"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC14",
          "description": "A <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.",
          "syntax": "- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/26"
          },
          "name": "Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Capturing Group",
            "Capture Groups",
            "Capture Group"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.marked_sub_expressions",
          "description": "A <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.",
          "syntax": "- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/26"
          },
          "name": "Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Capturing Group",
            "Capture Groups",
            "Capture Group"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#matched_subexpression",
          "description": "A <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.",
          "syntax": "- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/26"
          },
          "name": "Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Capturing Group",
            "Capture Groups",
            "Capture Group"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L293",
          "description": "A <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.",
          "syntax": "- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/26"
          },
          "name": "Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Capturing Group",
            "Capture Groups",
            "Capture Group"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.",
          "syntax": "- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/26"
          },
          "name": "Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Capturing Group",
            "Capture Groups",
            "Capture Group"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "A <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.",
          "syntax": "- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\h` &mdash; Any horizontal whitespace character.\r\n- `\\H` &mdash; Any non-horizontal whitespace character.\r\n- `\\v` &mdash; Any vertical whitespace character.\r\n- `\\V` &mdash; Any non-vertical whitespace character.",
          "see_also": [
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\h` &mdash; Any horizontal whitespace character.\r\n- `\\H` &mdash; Any non-horizontal whitespace character.\r\n- `\\v` &mdash; Any vertical whitespace character.\r\n- `\\V` &mdash; Any non-vertical whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/26"
          },
          "name": "Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Capturing Group",
            "Capture Groups",
            "Capture Group"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.12",
          "description": "A <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.",
          "syntax": "- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/26"
          },
          "name": "Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Capturing Group",
            "Capture Groups",
            "Capture Group"
          ],
          "reference": "https://tc39.es/ecma262/#sec-atom",
          "description": "A <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.",
          "syntax": "- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
          ]
        }
      ],
      "content": "# Feature: Capturing Groups\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-capturing-groups) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-capturing-groups) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-capturing-groups) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-capturing-groups) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-capturing-groups) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-capturing-groups) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-capturing-groups) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-capturing-groups) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-capturing-groups) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/capturing-groups.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "named-capturing-groups",
      "feature": "named-capturing-groups",
      "name": "Named Capturing Groups",
      "built": true,
      "outFile": "features/named-capturing-groups.md",
      "priority": 27,
      "aliases": [
        "Named Capturing Group",
        "Named Capture Groups",
        "Named Capture Group"
      ],
      "description": "A <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.",
      "syntax": "- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.",
      "see_also": [
        {
          "feature": "capturing-groups",
          "name": "Capturing Groups"
        },
        {
          "feature": "non-capturing-groups",
          "name": "Non-Capturing Groups"
        },
        {
          "feature": "backreferences",
          "name": "Backreferences"
        },
        {
          "feature": "recursion",
          "name": "Recursion"
        },
        {
          "feature": "subroutines",
          "name": "Subroutines"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/27"
          },
          "name": "Named Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Named Capturing Group",
            "Named Capture Groups",
            "Named Capture Group"
          ],
          "reference": "https://perldoc.perl.org/perlre#Capture-groups",
          "description": "A <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.",
          "syntax": "- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/named-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/named-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/27"
          },
          "name": "Named Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Named Capturing Group",
            "Named Capture Groups",
            "Named Capture Group"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC16",
          "description": "A <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.",
          "syntax": "- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?P&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?P&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/named-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/named-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/named-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/27"
          },
          "name": "Named Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Named Capturing Group",
            "Named Capture Groups",
            "Named Capture Group"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.named_subexpressions",
          "description": "A <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.",
          "syntax": "- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/named-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/named-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/27"
          },
          "name": "Named Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Named Capturing Group",
            "Named Capture Groups",
            "Named Capture Group"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#named-matched-subexpressions",
          "description": "A <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.",
          "syntax": "- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/named-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/named-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/27"
          },
          "name": "Named Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Named Capturing Group",
            "Named Capture Groups",
            "Named Capture Group"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L312",
          "description": "A <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.",
          "syntax": "- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/named-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/named-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/27"
          },
          "name": "Named Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Named Capturing Group",
            "Named Capture Groups",
            "Named Capture Group"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.",
          "syntax": "- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/named-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/named-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/27"
          },
          "name": "Named Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Named Capturing Group",
            "Named Capture Groups",
            "Named Capture Group"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "A <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.",
          "syntax": "- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/named-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/named-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/27"
          },
          "name": "Named Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Named Capturing Group",
            "Named Capture Groups",
            "Named Capture Group"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.13",
          "description": "A <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.",
          "syntax": "- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?P&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?P&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/named-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/named-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/named-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/27"
          },
          "name": "Named Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Named Capturing Group",
            "Named Capture Groups",
            "Named Capture Group"
          ],
          "reference": "https://tc39.es/ecma262/#sec-atom",
          "description": "A <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.",
          "syntax": "- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "non-capturing-groups",
              "name": "Non-Capturing Groups"
            },
            {
              "feature": "backreferences",
              "name": "Backreferences"
            },
            {
              "feature": "recursion",
              "name": "Recursion"
            },
            {
              "feature": "subroutines",
              "name": "Subroutines"
            }
          ],
          "content": "## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/named-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/named-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/named-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
          ]
        }
      ],
      "content": "# Feature: Named Capturing Groups\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-named-capturing-groups) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-named-capturing-groups) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-named-capturing-groups) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-named-capturing-groups) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-named-capturing-groups) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-named-capturing-groups) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-named-capturing-groups) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-named-capturing-groups) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-named-capturing-groups) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/named-capturing-groups.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "non-capturing-groups",
      "feature": "non-capturing-groups",
      "name": "Non-Capturing Groups",
      "built": true,
      "outFile": "features/non-capturing-groups.md",
      "priority": 28,
      "aliases": [
        "Non-Capturing group"
      ],
      "description": "A <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.",
      "syntax": "- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.",
      "see_also": [
        {
          "feature": "capturing-groups",
          "name": "Capturing Groups"
        },
        {
          "feature": "named-capturing-groups",
          "name": "Named Capturing Groups"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/28"
          },
          "name": "Non-Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Non-Capturing group"
          ],
          "reference": "https://perldoc.perl.org/perlre#Capture-groups",
          "description": "A <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.",
          "syntax": "- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/non-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/non-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/28"
          },
          "name": "Non-Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Non-Capturing group"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC14",
          "description": "A <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.",
          "syntax": "- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/non-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/non-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/28"
          },
          "name": "Non-Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Non-Capturing group"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.non_marking_grouping",
          "description": "A <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.",
          "syntax": "- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/non-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/non-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/28"
          },
          "name": "Non-Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Non-Capturing group"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#noncapturing-groups",
          "description": "A <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.",
          "syntax": "- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/non-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/non-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/28"
          },
          "name": "Non-Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Non-Capturing group"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L292",
          "description": "A <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.",
          "syntax": "- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/non-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/non-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/28"
          },
          "name": "Non-Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Non-Capturing group"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.",
          "syntax": "- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/non-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/non-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/28"
          },
          "name": "Non-Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Non-Capturing group"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "A <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.",
          "syntax": "- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/non-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/non-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/28"
          },
          "name": "Non-Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Non-Capturing group"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.12",
          "description": "A <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.",
          "syntax": "- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/non-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/non-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/28"
          },
          "name": "Non-Capturing Groups",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Non-Capturing group"
          ],
          "reference": "https://tc39.es/ecma262/#sec-atom",
          "description": "A <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.",
          "syntax": "- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/non-capturing-groups.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/non-capturing-groups.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
          ]
        }
      ],
      "content": "# Feature: Non-Capturing Groups\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-non-capturing-groups) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-non-capturing-groups) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-non-capturing-groups) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-non-capturing-groups) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-non-capturing-groups) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-non-capturing-groups) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-non-capturing-groups) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-non-capturing-groups) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-non-capturing-groups) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-capturing-groups.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "backreferences",
      "feature": "backreferences",
      "name": "Backreferences",
      "built": true,
      "outFile": "features/backreferences.md",
      "priority": 29,
      "aliases": [
        "Backreference"
      ],
      "description": "<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.",
      "syntax": "- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.",
      "see_also": [
        {
          "feature": "capturing-groups",
          "name": "Capturing Groups"
        },
        {
          "feature": "named-capturing-groups",
          "name": "Named Capturing Groups"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/29"
          },
          "name": "Backreferences",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Backreference"
          ],
          "reference": "https://perldoc.perl.org/perlre#Capture-groups",
          "description": "<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.",
          "syntax": "- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the [named capture group] with the name *name*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/backreferences.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/backreferences.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/backreferences.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/29"
          },
          "name": "Backreferences",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Backreference"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC19",
          "description": "<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.",
          "syntax": "- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n  - NOTE: If the *n* is > 8 it will instead be interpreted as an octal literal.\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g+<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{+<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>(?P=<em>name</em>)</code> &mdash; Matches the [named capture group] with the name *name*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n  - NOTE: If the *n* is > 8 it will instead be interpreted as an octal literal.\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g+<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{+<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>(?P=<em>name</em>)</code> &mdash; Matches the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/backreferences.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/backreferences.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/backreferences.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/29"
          },
          "name": "Backreferences",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Backreference"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.back_references",
          "description": "<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.",
          "syntax": "- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is in the range 1-9. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 0. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 0. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is in the range 1-9. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 0. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 0. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/backreferences.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/backreferences.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/backreferences.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/29"
          },
          "name": "Backreferences",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Backreference"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/backreference-constructs-in-regular-expressions",
          "description": "<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.",
          "syntax": "- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/backreferences.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/backreferences.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/29"
          },
          "name": "Backreferences",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Backreference"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L398",
          "description": "<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.",
          "syntax": "- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>n</em>&gt;</code> &mdash; Where *n* is an integer > 0. Matches the same string as the [capture group] *n*.\r\n- <code>\\k'<em>n</em>'</code> &mdash; Where *n* is an integer > 0. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;-<em>n</em>&gt;</code> &mdash; Where *n* is an integer > 0. Matches the *n*th previous [capture group].\r\n- <code>\\k'-<em>n</em>'</code> &mdash; Where *n* is an integer > 0. Matches the *n*th previous [capture group].\r\n- <code>\\k&lt;+<em>n</em>&gt;</code> &mdash; Where *n* is an integer > 0. Matches the *n*th next [capture group].\r\n- <code>\\k'+<em>n</em>'</code> &mdash; Where *n* is an integer > 0. Matches the *n*th next [capture group].\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the same string as the [named capture group] with the name *name*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>n</em>&gt;</code> &mdash; Where *n* is an integer > 0. Matches the same string as the [capture group] *n*.\r\n- <code>\\k'<em>n</em>'</code> &mdash; Where *n* is an integer > 0. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;-<em>n</em>&gt;</code> &mdash; Where *n* is an integer > 0. Matches the *n*th previous [capture group].\r\n- <code>\\k'-<em>n</em>'</code> &mdash; Where *n* is an integer > 0. Matches the *n*th previous [capture group].\r\n- <code>\\k&lt;+<em>n</em>&gt;</code> &mdash; Where *n* is an integer > 0. Matches the *n*th next [capture group].\r\n- <code>\\k'+<em>n</em>'</code> &mdash; Where *n* is an integer > 0. Matches the *n*th next [capture group].\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/backreferences.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/backreferences.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/backreferences.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/29"
          },
          "name": "Backreferences",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Backreference"
          ],
          "description": "<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.",
          "syntax": "- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/backreferences.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/backreferences.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/29"
          },
          "name": "Backreferences",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Backreference"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters",
          "description": "<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.",
          "syntax": "- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/backreferences.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/backreferences.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/29"
          },
          "name": "Backreferences",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Backreference"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.16",
          "description": "<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.",
          "syntax": "- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n  - NOTE: If the *n* is > 9 it may be interpreted as an octal literal if there are less than *n* [capture groups] in the pattern.\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g+<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{+<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>(?P=<em>name</em>)</code> &mdash; Matches the [named capture group] with the name *name*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n  - NOTE: If the *n* is > 9 it may be interpreted as an octal literal if there are less than *n* [capture groups] in the pattern.\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g+<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{+<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>(?P=<em>name</em>)</code> &mdash; Matches the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/backreferences.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/backreferences.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/backreferences.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/29"
          },
          "name": "Backreferences",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Backreference"
          ],
          "reference": "https://tc39.es/ecma262/#sec-atomescape",
          "description": "<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.",
          "syntax": "- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.",
          "see_also": [
            {
              "feature": "capturing-groups",
              "name": "Capturing Groups"
            },
            {
              "feature": "named-capturing-groups",
              "name": "Named Capturing Groups"
            }
          ],
          "content": "## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/backreferences.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/backreferences.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
          ]
        }
      ],
      "content": "# Feature: Backreferences\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-backreferences) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-backreferences) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-backreferences) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-backreferences) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-backreferences) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-backreferences) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-backreferences) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-backreferences) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-backreferences) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backreferences.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "comments",
      "feature": "comments",
      "name": "Comments",
      "built": true,
      "outFile": "features/comments.md",
      "priority": 30,
      "aliases": [
        "Comment"
      ],
      "description": "A <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.",
      "syntax": "- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.",
      "see_also": [
        {
          "feature": "line-comments",
          "name": "Line Comments"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/30"
          },
          "name": "Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Comment"
          ],
          "reference": "https://perldoc.perl.org/perlre#Extended-Patterns",
          "description": "A <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.",
          "see_also": [
            {
              "feature": "line-comments",
              "name": "Line Comments"
            }
          ],
          "content": "## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/30"
          },
          "name": "Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Comment"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC24",
          "description": "A <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.",
          "see_also": [
            {
              "feature": "line-comments",
              "name": "Line Comments"
            }
          ],
          "content": "## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/30"
          },
          "name": "Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Comment"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.comments",
          "description": "A <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.",
          "see_also": [
            {
              "feature": "line-comments",
              "name": "Line Comments"
            }
          ],
          "content": "## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/30"
          },
          "name": "Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Comment"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/miscellaneous-constructs-in-regular-expressions#inline-comment",
          "description": "A <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.",
          "see_also": [
            {
              "feature": "line-comments",
              "name": "Line Comments"
            }
          ],
          "content": "## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/30"
          },
          "name": "Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Comment"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L263",
          "description": "A <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.",
          "see_also": [
            {
              "feature": "line-comments",
              "name": "Line Comments"
            }
          ],
          "content": "## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/30"
          },
          "name": "Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Comment"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "A <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.",
          "see_also": [
            {
              "feature": "line-comments",
              "name": "Line Comments"
            }
          ],
          "content": "## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/30"
          },
          "name": "Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Comment"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "A <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.",
          "see_also": [
            {
              "feature": "line-comments",
              "name": "Line Comments"
            }
          ],
          "content": "## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/30"
          },
          "name": "Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Comment"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.19",
          "description": "A <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.",
          "see_also": [
            {
              "feature": "line-comments",
              "name": "Line Comments"
            }
          ],
          "content": "## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/30"
          },
          "name": "Comments",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Comment"
          ],
          "description": "A <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.",
          "see_also": [
            {
              "feature": "line-comments",
              "name": "Line Comments"
            }
          ],
          "content": "## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/comments.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
          ]
        }
      ],
      "content": "# Feature: Comments\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-comments) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-comments) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-comments) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-comments) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-comments) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-comments) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-comments) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-comments) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-comments) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/comments/comments.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "line-comments",
      "feature": "line-comments",
      "name": "Line Comments",
      "built": true,
      "outFile": "features/line-comments.md",
      "priority": 31,
      "aliases": [
        "Line Comment",
        "x-mode Comments",
        "x-mode Comment"
      ],
      "description": "A <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.",
      "syntax": "- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.",
      "see_also": [
        {
          "feature": "comments",
          "name": "Comments"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/31"
          },
          "name": "Line Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Line Comment",
            "x-mode Comments",
            "x-mode Comment"
          ],
          "reference": "https://perldoc.perl.org/perlre#Metacharacters",
          "description": "A <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.",
          "see_also": [
            {
              "feature": "comments",
              "name": "Comments"
            }
          ],
          "content": "## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/line-comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/line-comments.md)\r\n-->\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/line-comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/line-comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/31"
          },
          "name": "Line Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Line Comment",
            "x-mode Comments",
            "x-mode Comment"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC24",
          "description": "A <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line is removed from the pattern. Only supported when either the `x` (extended mode) or `xx` (extended more mode) [RegExp flags] are set.",
          "see_also": [
            {
              "feature": "comments",
              "name": "Comments"
            }
          ],
          "content": "## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/line-comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/line-comments.md)\r\n-->\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line is removed from the pattern. Only supported when either the `x` (extended mode) or `xx` (extended more mode) [RegExp flags] are set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/line-comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/line-comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/line-comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/31"
          },
          "name": "Line Comments",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Line Comment",
            "x-mode Comments",
            "x-mode Comment"
          ],
          "description": "A <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.",
          "see_also": [
            {
              "feature": "comments",
              "name": "Comments"
            }
          ],
          "content": "## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/line-comments.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/line-comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/31"
          },
          "name": "Line Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Line Comment",
            "x-mode Comments",
            "x-mode Comment"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/miscellaneous-constructs-in-regular-expressions#end-of-line-comment",
          "description": "A <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.",
          "see_also": [
            {
              "feature": "comments",
              "name": "Comments"
            }
          ],
          "content": "## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/line-comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/line-comments.md)\r\n-->\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/line-comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/line-comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/31"
          },
          "name": "Line Comments",
          "supported": false,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Line Comment",
            "x-mode Comments",
            "x-mode Comment"
          ],
          "description": "A <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.",
          "see_also": [
            {
              "feature": "comments",
              "name": "Comments"
            }
          ],
          "content": "## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/line-comments.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/line-comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/31"
          },
          "name": "Line Comments",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Line Comment",
            "x-mode Comments",
            "x-mode Comment"
          ],
          "description": "A <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.",
          "see_also": [
            {
              "feature": "comments",
              "name": "Comments"
            }
          ],
          "content": "## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/line-comments.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/line-comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/31"
          },
          "name": "Line Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Line Comment",
            "x-mode Comments",
            "x-mode Comment"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#flag-options",
          "description": "A <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.",
          "see_also": [
            {
              "feature": "comments",
              "name": "Comments"
            }
          ],
          "content": "## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/line-comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/line-comments.md)\r\n-->\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/line-comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/line-comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/31"
          },
          "name": "Line Comments",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Line Comment",
            "x-mode Comments",
            "x-mode Comment"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.19",
          "description": "A <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.",
          "see_also": [
            {
              "feature": "comments",
              "name": "Comments"
            }
          ],
          "content": "## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/line-comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/line-comments.md)\r\n-->\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/line-comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/line-comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/31"
          },
          "name": "Line Comments",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Line Comment",
            "x-mode Comments",
            "x-mode Comment"
          ],
          "description": "A <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.",
          "syntax": "- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.",
          "see_also": [
            {
              "feature": "comments",
              "name": "Comments"
            }
          ],
          "content": "## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/line-comments.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/line-comments.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
          ]
        }
      ],
      "content": "# Feature: Line Comments\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-line-comments) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-line-comments) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-line-comments) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-line-comments) |\r\n| [Oniguruma](../engines/oniguruma.md) | [❌](../engines/oniguruma.md#feature-line-comments) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-line-comments) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-line-comments) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-line-comments) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-line-comments) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/comments/line-comments.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "modifiers",
      "feature": "modifiers",
      "name": "Modifiers",
      "built": true,
      "outFile": "features/modifiers.md",
      "priority": 32,
      "aliases": [
        "Modifier"
      ],
      "description": "<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.",
      "syntax": "- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.",
      "see_also": [
        {
          "feature": "flags",
          "name": "Flags"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/32"
          },
          "name": "Modifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Modifier"
          ],
          "reference": "https://perldoc.perl.org/perlre#Modifiers",
          "description": "<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.",
          "syntax": "- `(?adlupimnsx-imnsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?adlupimnsx-imnsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n- `(?^alupimnsx)` - The `^` is a shorthand for `d-imnsx`. Flags other than `d` may follow the caret to override, but `-` is not permitted.\r\n- `(?^alupimnsx:…)` - The `^` is a shorthand for `d-imnsx`. Flags other than `d` may follow the caret to override, but `-` is not permitted.",
          "see_also": [
            {
              "feature": "flags",
              "name": "Flags"
            }
          ],
          "content": "## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?adlupimnsx-imnsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?adlupimnsx-imnsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n- `(?^alupimnsx)` - The `^` is a shorthand for `d-imnsx`. Flags other than `d` may follow the caret to override, but `-` is not permitted.\r\n- `(?^alupimnsx:…)` - The `^` is a shorthand for `d-imnsx`. Flags other than `d` may follow the caret to override, but `-` is not permitted.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/modifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/modifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/modifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/32"
          },
          "name": "Modifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Modifier"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC13",
          "description": "<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.",
          "syntax": "- `(?imnsxx-imnsxx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imnsxx-imnsxx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n- `(?^)` - Unsets all [RegExp flags].\r\n- `(?^imnsxx)` - Unsets all [RegExp flags] and sets the requested flags.",
          "see_also": [
            {
              "feature": "flags",
              "name": "Flags"
            }
          ],
          "content": "## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imnsxx-imnsxx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imnsxx-imnsxx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n- `(?^)` - Unsets all [RegExp flags].\r\n- `(?^imnsxx)` - Unsets all [RegExp flags] and sets the requested flags.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/modifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/modifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/modifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/32"
          },
          "name": "Modifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Modifier"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.modifiers",
          "description": "<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.",
          "syntax": "- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.",
          "see_also": [
            {
              "feature": "flags",
              "name": "Flags"
            }
          ],
          "content": "## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/modifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/modifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/32"
          },
          "name": "Modifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Modifier"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/miscellaneous-constructs-in-regular-expressions#inline-options",
          "description": "<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.",
          "syntax": "- `(?imnsx-imnsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imnsx-imnsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.",
          "see_also": [
            {
              "feature": "flags",
              "name": "Flags"
            }
          ],
          "content": "## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imnsx-imnsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imnsx-imnsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/modifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/modifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/modifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/32"
          },
          "name": "Modifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Modifier"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L265-L289",
          "description": "<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.",
          "syntax": "- `(?imxWDSPy-imxWDSPy)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n  - NOTE: When option `ONIG_SYNTAX_ONIGURUMA` is specified, the `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n  - NOTE: When option `ONIG_SYNTAX_PERL` or `ONIG_SYNTAX_JAVA` are specified, the `m` and `s` flags are equivalent to their Perl/Java counterparts. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n- `(?imxWDSPy-imxWDSPy:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n  - NOTE: When option `ONIG_SYNTAX_ONIGURUMA` is specified, the `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n  - NOTE: When option `ONIG_SYNTAX_PERL` or `ONIG_SYNTAX_JAVA` are specified, the `m` and `s` flags are equivalent to their Perl/Java counterparts. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>",
          "see_also": [
            {
              "feature": "flags",
              "name": "Flags"
            }
          ],
          "content": "## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imxWDSPy-imxWDSPy)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n  - NOTE: When option `ONIG_SYNTAX_ONIGURUMA` is specified, the `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n  - NOTE: When option `ONIG_SYNTAX_PERL` or `ONIG_SYNTAX_JAVA` are specified, the `m` and `s` flags are equivalent to their Perl/Java counterparts. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n- `(?imxWDSPy-imxWDSPy:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n  - NOTE: When option `ONIG_SYNTAX_ONIGURUMA` is specified, the `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n  - NOTE: When option `ONIG_SYNTAX_PERL` or `ONIG_SYNTAX_JAVA` are specified, the `m` and `s` flags are equivalent to their Perl/Java counterparts. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/modifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/modifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/modifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/32"
          },
          "name": "Modifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Modifier"
          ],
          "reference": "http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support",
          "description": "<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.",
          "syntax": "- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.",
          "see_also": [
            {
              "feature": "flags",
              "name": "Flags"
            }
          ],
          "content": "## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/modifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/modifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/32"
          },
          "name": "Modifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Modifier"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.",
          "syntax": "- `(?imswx-imswx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imswx-imswx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.",
          "see_also": [
            {
              "feature": "flags",
              "name": "Flags"
            }
          ],
          "content": "## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imswx-imswx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imswx-imswx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/modifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/modifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/modifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/32"
          },
          "name": "Modifiers",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Modifier"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.11",
          "description": "<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.",
          "syntax": "- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.",
          "see_also": [
            {
              "feature": "flags",
              "name": "Flags"
            }
          ],
          "content": "## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/modifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/modifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/32"
          },
          "name": "Modifiers",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Modifier"
          ],
          "description": "<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.",
          "syntax": "- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.",
          "see_also": [
            {
              "feature": "flags",
              "name": "Flags"
            }
          ],
          "content": "## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/modifiers.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/modifiers.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
          ]
        }
      ],
      "content": "# Feature: Modifiers\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\")</sup>\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-modifiers) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-modifiers) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-modifiers) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-modifiers) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-modifiers) |\r\n| [Hyperscan](../engines/hyperscan.md) | [✔](../engines/hyperscan.md#feature-modifiers) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-modifiers) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-modifiers) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-modifiers) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/flags-and-modifiers/modifiers.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "branch-reset",
      "feature": "branch-reset",
      "name": "Branch Reset",
      "built": true,
      "outFile": "features/branch-reset.md",
      "priority": 33,
      "description": "A <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.",
      "syntax": "- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/33"
          },
          "name": "Branch Reset",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "reference": "https://perldoc.perl.org/perlre#(?%7Cpattern)",
          "description": "A <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.",
          "syntax": "- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "content": "## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/branch-reset.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/branch-reset.md)\r\n-->\r\n\r\nA <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/branch-reset.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/branch-reset.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/33"
          },
          "name": "Branch Reset",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC15",
          "description": "A <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.",
          "syntax": "- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "content": "## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/branch-reset.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/branch-reset.md)\r\n-->\r\n\r\nA <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/branch-reset.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/branch-reset.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/33"
          },
          "name": "Branch Reset",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.branch_reset",
          "description": "A <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.",
          "syntax": "- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "content": "## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/branch-reset.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/branch-reset.md)\r\n-->\r\n\r\nA <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/branch-reset.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/branch-reset.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/33"
          },
          "name": "Branch Reset",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "description": "A <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.",
          "syntax": "- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "content": "## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/branch-reset.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/33"
          },
          "name": "Branch Reset",
          "supported": false,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "description": "A <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.",
          "syntax": "- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "content": "## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/branch-reset.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/33"
          },
          "name": "Branch Reset",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "description": "A <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.",
          "syntax": "- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "content": "## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/branch-reset.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/33"
          },
          "name": "Branch Reset",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "description": "A <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.",
          "syntax": "- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "content": "## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/branch-reset.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/33"
          },
          "name": "Branch Reset",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "description": "A <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.",
          "syntax": "- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "content": "## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/branch-reset.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/33"
          },
          "name": "Branch Reset",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "description": "A <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.",
          "syntax": "- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].",
          "content": "## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/branch-reset.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
          ]
        }
      ],
      "content": "# Feature: Branch Reset\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-branch-reset) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-branch-reset) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-branch-reset) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-branch-reset) |\r\n| [Oniguruma](../engines/oniguruma.md) | [❌](../engines/oniguruma.md#feature-branch-reset) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-branch-reset) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-branch-reset) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-branch-reset) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-branch-reset) |\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/branch-reset.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "lookahead",
      "feature": "lookahead",
      "name": "Lookahead",
      "built": true,
      "outFile": "features/lookahead.md",
      "priority": 34,
      "description": "A <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.",
      "syntax": "- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.",
      "see_also": [
        {
          "feature": "lookbehind",
          "name": "Lookbehind"
        }
      ],
      "links": [
        {
          "name": "Positive Lookahead",
          "href": "#positive-lookahead"
        },
        {
          "name": "Negative Lookahead",
          "href": "#negative-lookahead"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/34"
          },
          "name": "Lookahead",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "reference": "https://perldoc.perl.org/perlre#Lookaround-Assertions",
          "description": "A <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.",
          "syntax": "- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- `(*pla:…)` &mdash; Positive Lookahead. Has the same behavior as `(?=…)`.\r\n- `(*positive_lookahead:…)` &mdash; Positive Lookahead. Has the same behavior as `(?=…)`.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n- `(*nla:…)` &mdash; Negative Lookahead. Has the same behavior as `(?!…)`.\r\n- `(*negative_lookahead:…)` &mdash; Negative Lookahead. Has the same behavior as `(?!…)`.",
          "see_also": [
            {
              "feature": "lookbehind",
              "name": "Lookbehind"
            }
          ],
          "links": {
            "$ref": "#/features/34/links"
          },
          "content": "## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- `(*pla:…)` &mdash; Positive Lookahead. Has the same behavior as `(?=…)`.\r\n- `(*positive_lookahead:…)` &mdash; Positive Lookahead. Has the same behavior as `(?=…)`.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n- `(*nla:…)` &mdash; Negative Lookahead. Has the same behavior as `(?!…)`.\r\n- `(*negative_lookahead:…)` &mdash; Negative Lookahead. Has the same behavior as `(?!…)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/lookahead.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/lookahead.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/lookahead.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/34"
          },
          "name": "Lookahead",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC20",
          "description": "A <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.",
          "syntax": "- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.",
          "see_also": [
            {
              "feature": "lookbehind",
              "name": "Lookbehind"
            }
          ],
          "links": {
            "$ref": "#/features/34/links"
          },
          "content": "## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/lookahead.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/lookahead.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/34"
          },
          "name": "Lookahead",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.lookahead",
          "description": "A <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.",
          "syntax": "- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.",
          "see_also": [
            {
              "feature": "lookbehind",
              "name": "Lookbehind"
            }
          ],
          "links": {
            "$ref": "#/features/34/links"
          },
          "content": "## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/lookahead.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/lookahead.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/34"
          },
          "name": "Lookahead",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#zero-width-positive-lookahead-assertions",
          "description": "A <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.",
          "syntax": "- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.",
          "see_also": [
            {
              "feature": "lookbehind",
              "name": "Lookbehind"
            }
          ],
          "links": {
            "$ref": "#/features/34/links"
          },
          "content": "## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/lookahead.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/lookahead.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/34"
          },
          "name": "Lookahead",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L295-L296",
          "description": "A <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.",
          "syntax": "- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.",
          "see_also": [
            {
              "feature": "lookbehind",
              "name": "Lookbehind"
            }
          ],
          "links": {
            "$ref": "#/features/34/links"
          },
          "content": "## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/lookahead.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/lookahead.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/34"
          },
          "name": "Lookahead",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "description": "A <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.",
          "syntax": "- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.",
          "see_also": [
            {
              "feature": "lookbehind",
              "name": "Lookbehind"
            }
          ],
          "links": {
            "$ref": "#/features/34/links"
          },
          "content": "## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/lookahead.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/lookahead.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/34"
          },
          "name": "Lookahead",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "A <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.",
          "syntax": "- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.",
          "see_also": [
            {
              "feature": "lookbehind",
              "name": "Lookbehind"
            }
          ],
          "links": {
            "$ref": "#/features/34/links"
          },
          "content": "## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/lookahead.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/lookahead.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/34"
          },
          "name": "Lookahead",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.17.5",
          "description": "A <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.",
          "syntax": "- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.",
          "see_also": [
            {
              "feature": "lookbehind",
              "name": "Lookbehind"
            }
          ],
          "links": {
            "$ref": "#/features/34/links"
          },
          "content": "## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/lookahead.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/lookahead.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/34"
          },
          "name": "Lookahead",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "reference": "https://tc39.es/ecma262/#sec-assertion",
          "description": "A <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.",
          "syntax": "- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.",
          "see_also": [
            {
              "feature": "lookbehind",
              "name": "Lookbehind"
            }
          ],
          "links": {
            "$ref": "#/features/34/links"
          },
          "content": "## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/lookahead.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/lookahead.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
          ]
        }
      ],
      "content": "# Feature: Lookahead\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-lookahead) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-lookahead) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-lookahead) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-lookahead) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-lookahead) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-lookahead) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-lookahead) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-lookahead) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-lookahead) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n[Positive Lookahead]: #positive-lookahead\r\n[Negative Lookahead]: #negative-lookahead\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
      ],
      "linksSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookahead.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "lookbehind",
      "feature": "lookbehind",
      "name": "Lookbehind",
      "built": true,
      "outFile": "features/lookbehind.md",
      "priority": 35,
      "description": "A <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.",
      "syntax": "- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).",
      "see_also": [
        {
          "feature": "lookahead",
          "name": "Lookahead"
        }
      ],
      "links": [
        {
          "name": "Positive Lookbehind",
          "href": "#positive-lookbehind"
        },
        {
          "name": "Negative Lookbehind",
          "href": "#negative-lookbehind"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/35"
          },
          "name": "Lookbehind",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "reference": "https://perldoc.perl.org/perlre#Lookaround-Assertions",
          "description": "A <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.",
          "syntax": "- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- `(*plb:…)` &mdash; Positive Lookbehind. Has the same behavior as `(?<=…)`.\r\n- `(*positive_lookbehind:…)` &mdash; Positive Lookbehind. Has the same behavior as `(?<=…)`.\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- `(*nlb:…)` &mdash; Negative Lookbehind. Has the same behavior as `(?<!…)`.\r\n- `(*negative_lookbehind:…)` &mdash; Negative Lookbehind. Has the same behavior as `(?<!…)`.",
          "see_also": [
            {
              "feature": "lookahead",
              "name": "Lookahead"
            }
          ],
          "links": {
            "$ref": "#/features/35/links"
          },
          "content": "## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- `(*plb:…)` &mdash; Positive Lookbehind. Has the same behavior as `(?<=…)`.\r\n- `(*positive_lookbehind:…)` &mdash; Positive Lookbehind. Has the same behavior as `(?<=…)`.\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- `(*nlb:…)` &mdash; Negative Lookbehind. Has the same behavior as `(?<!…)`.\r\n- `(*negative_lookbehind:…)` &mdash; Negative Lookbehind. Has the same behavior as `(?<!…)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/lookbehind.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/lookbehind.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/lookbehind.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/35"
          },
          "name": "Lookbehind",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC20",
          "description": "A <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.",
          "syntax": "- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).",
          "see_also": [
            {
              "feature": "lookahead",
              "name": "Lookahead"
            }
          ],
          "links": {
            "$ref": "#/features/35/links"
          },
          "content": "## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/lookbehind.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/lookbehind.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/35"
          },
          "name": "Lookbehind",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.lookbehind",
          "description": "A <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.",
          "syntax": "- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).",
          "see_also": [
            {
              "feature": "lookahead",
              "name": "Lookahead"
            }
          ],
          "links": {
            "$ref": "#/features/35/links"
          },
          "content": "## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/lookbehind.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/lookbehind.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/35"
          },
          "name": "Lookbehind",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#zero-width-positive-lookbehind-assertions",
          "description": "A <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.",
          "syntax": "- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).",
          "see_also": [
            {
              "feature": "lookahead",
              "name": "Lookahead"
            }
          ],
          "links": {
            "$ref": "#/features/35/links"
          },
          "content": "## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/lookbehind.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/lookbehind.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/35"
          },
          "name": "Lookbehind",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L298-L299",
          "description": "A <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.",
          "syntax": "- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).",
          "see_also": [
            {
              "feature": "lookahead",
              "name": "Lookahead"
            }
          ],
          "links": {
            "$ref": "#/features/35/links"
          },
          "content": "## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/lookbehind.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/lookbehind.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/35"
          },
          "name": "Lookbehind",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "description": "A <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.",
          "syntax": "- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).",
          "see_also": [
            {
              "feature": "lookahead",
              "name": "Lookahead"
            }
          ],
          "links": {
            "$ref": "#/features/35/links"
          },
          "content": "## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/lookbehind.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/lookbehind.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/35"
          },
          "name": "Lookbehind",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "A <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.",
          "syntax": "- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).",
          "see_also": [
            {
              "feature": "lookahead",
              "name": "Lookahead"
            }
          ],
          "links": {
            "$ref": "#/features/35/links"
          },
          "content": "## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/lookbehind.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/lookbehind.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/35"
          },
          "name": "Lookbehind",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.17.6",
          "description": "A <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.",
          "syntax": "- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).",
          "see_also": [
            {
              "feature": "lookahead",
              "name": "Lookahead"
            }
          ],
          "links": {
            "$ref": "#/features/35/links"
          },
          "content": "## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/lookbehind.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/lookbehind.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/35"
          },
          "name": "Lookbehind",
          "supported": true,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "reference": "https://tc39.es/ecma262/#sec-assertion",
          "description": "A <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.",
          "syntax": "- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).",
          "see_also": [
            {
              "feature": "lookahead",
              "name": "Lookahead"
            }
          ],
          "links": {
            "$ref": "#/features/35/links"
          },
          "content": "## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/lookbehind.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/lookbehind.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "see_alsoSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
          ]
        }
      ],
      "content": "# Feature: Lookbehind\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-lookbehind) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-lookbehind) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-lookbehind) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-lookbehind) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-lookbehind) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-lookbehind) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-lookbehind) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-lookbehind) |\r\n| [ECMAScript](../engines/ecmascript.md) | [✔](../engines/ecmascript.md#feature-lookbehind) |\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n[Positive Lookbehind]: #positive-lookbehind\r\n[Negative Lookbehind]: #negative-lookbehind\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
      ],
      "see_alsoSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
      ],
      "linksSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/lookaround/lookbehind.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "non-backtracking-expressions",
      "feature": "non-backtracking-expressions",
      "name": "Non-Backtracking Expressions",
      "built": true,
      "outFile": "features/non-backtracking-expressions.md",
      "priority": 36,
      "aliases": [
        "Non-Backtracking Expression"
      ],
      "description": "A <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.",
      "syntax": "- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/36"
          },
          "name": "Non-Backtracking Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Non-Backtracking Expression"
          ],
          "reference": "https://perldoc.perl.org/perlre#(?%3Epattern)",
          "description": "A <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.",
          "syntax": "- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n- `(*atomic:…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "content": "## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/non-backtracking-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/non-backtracking-expressions.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n- `(*atomic:…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/non-backtracking-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/non-backtracking-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/non-backtracking-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/36"
          },
          "name": "Non-Backtracking Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Non-Backtracking Expression"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC18",
          "description": "A <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.",
          "syntax": "- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "content": "## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/non-backtracking-expression.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/non-backtracking-expression.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/non-backtracking-expression.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/non-backtracking-expression.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/36"
          },
          "name": "Non-Backtracking Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Non-Backtracking Expression"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.independent_sub_expressions",
          "description": "A <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.",
          "syntax": "- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "content": "## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/non-backtracking-expression.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/non-backtracking-expression.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/non-backtracking-expression.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/non-backtracking-expression.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/36"
          },
          "name": "Non-Backtracking Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Non-Backtracking Expression"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#atomic-groups",
          "description": "A <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.",
          "syntax": "- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "content": "## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/non-backtracking-expression.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/non-backtracking-expression.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/non-backtracking-expression.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/non-backtracking-expression.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/36"
          },
          "name": "Non-Backtracking Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Non-Backtracking Expression"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L309-L310",
          "description": "A <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.",
          "syntax": "- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "content": "## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/non-backtracking-expression.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/non-backtracking-expression.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/non-backtracking-expression.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/non-backtracking-expression.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/36"
          },
          "name": "Non-Backtracking Expressions",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Non-Backtracking Expression"
          ],
          "description": "A <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.",
          "syntax": "- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "content": "## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/non-backtracking-expressions.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/non-backtracking-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/36"
          },
          "name": "Non-Backtracking Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Non-Backtracking Expression"
          ],
          "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators",
          "description": "A <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.",
          "syntax": "- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "content": "## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/non-backtracking-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/non-backtracking-expressions.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/non-backtracking-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/non-backtracking-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/36"
          },
          "name": "Non-Backtracking Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Non-Backtracking Expression"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.15",
          "description": "A <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.",
          "syntax": "- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "content": "## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/non-backtracking-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/non-backtracking-expressions.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/non-backtracking-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/non-backtracking-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/36"
          },
          "name": "Non-Backtracking Expressions",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Non-Backtracking Expression"
          ],
          "description": "A <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.",
          "syntax": "- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.",
          "content": "## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/non-backtracking-expressions.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/non-backtracking-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
          ]
        }
      ],
      "content": "# Feature: Non-Backtracking Expressions\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-non-backtracking-expressions) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-non-backtracking-expressions) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-non-backtracking-expressions) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-non-backtracking-expressions) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-non-backtracking-expressions) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-non-backtracking-expressions) |\r\n| [ICU](../engines/icu.md) | [✔](../engines/icu.md#feature-non-backtracking-expressions) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-non-backtracking-expressions) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-non-backtracking-expressions) |\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/non-backtracking-expressions.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "recursion",
      "feature": "recursion",
      "name": "Recursion",
      "built": true,
      "outFile": "features/recursion.md",
      "priority": 37,
      "aliases": [
        "Recursive Expression"
      ],
      "description": "A <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.",
      "syntax": "- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.",
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/37"
          },
          "name": "Recursion",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Recursive Expression"
          ],
          "reference": "https://perldoc.perl.org/perlre#(?PARNO)-(?-PARNO)-(?+PARNO)-(?R)-(?0)",
          "description": "A <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.",
          "syntax": "- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.\r\n- <code>(?P><em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.",
          "content": "## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/recursion.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/recursion.md)\r\n-->\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.\r\n- <code>(?P><em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/recursion.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/recursion.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/recursion.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/37"
          },
          "name": "Recursion",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Recursive Expression"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC25",
          "description": "A <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.",
          "syntax": "- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.\r\n- <code>(?P><em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.",
          "content": "## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/recursion.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/recursion.md)\r\n-->\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.\r\n- <code>(?P><em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/recursion.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/recursion.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/recursion.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/37"
          },
          "name": "Recursion",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Recursive Expression"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.recursive_expressions",
          "description": "A <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.",
          "syntax": "- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.",
          "content": "## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/recursion.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/recursion.md)\r\n-->\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/recursion.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/recursion.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/recursion.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/37"
          },
          "name": "Recursion",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Recursive Expression"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#balancing-group-definitions",
          "description": ".NET's `Regex` class supports limited recursion through balancing groups. A <dfn>Balancing Group</dfn> uses the name of a previously defined [named capture group] as a stack, storing the interval between the current position and the last instance of the [named capture group] in the current name. You can then use a [conditional expression] to fail the matching algorithm if the previously defined [named capture group]'s stack is not empty when the match completes.",
          "syntax": "- <code>(?&lt;<em>name1</em>-<em>name1</em>&gt;…)</code> &mdash; Where *name1* as the current group name and *name2* is a previously defined group. Stores\r\n  the interval between *name2* and the current position in *name1* and deletes *name2*. Deleting *name2* reveals the previous definition of \r\n  *name2* allowing it to be used as a stack for captures.\r\n- <code>(?&lt;-<em>name2</em>&gt;…)</code> &mdash; Where *name2* is a previously defined group. Stores the interval between *name2* and the \r\n  current position as the current capture and deletes *name2*. Deleting *name2* reveals the previous definition of  *name2* allowing \r\n  it to be used as a stack for captures.\r\n- <code>(?'<em>name1</em>-<em>name1</em>'…)</code> &mdash; Where *name1* as the current group name and *name2* is a previously defined group. Stores\r\n  the interval between *name2* and the current position in *name1* and deletes *name2*. Deleting *name2* reveals the previous definition of \r\n  *name2* allowing it to be used as a stack for captures.\r\n- <code>(?'-<em>name2</em>'…)</code> &mdash; Where *name2* is a previously defined group. Stores the interval between *name2* and the \r\n  current position as the current capture and deletes *name2*. Deleting *name2* reveals the previous definition of  *name2* allowing \r\n  it to be used as a stack for captures.",
          "example": "The following shows an example of matching balanced `<` and `>` brackets (assuming `x` mode for a multiline regular expression):\r\n```re\r\n^                               # matches the beginning of the input\r\n\r\n[^<>]*                          # matches any number of non <> characters\r\n(\r\n    ((?'Open'<)[^<>]*)+         # matches an opening < followed by any number of non <> characters\r\n\r\n    ((?'Close-Open'>)[^<>]*)+   # matches a closing > followed by any number of non <> characters,\r\n                                # deleting the last match for 'Open'\r\n\r\n)*                              # matches the preceding expression zero or more times.\r\n\r\n(?(Open)(?!))                   # condition that fails the match if there are any remaining 'Open' matches\r\n\r\n$                               # matches the end of the input\r\n```\r\n\r\nOn a single line, the expression looks like this:\r\n```re\r\n^[^<>]*(((?'Open'<)[^<>]*)+((?'Close-Open'>)[^<>]*)+)*(?(Open)(?!))$\r\n```",
          "content": "## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/recursion.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/recursion.md)\r\n-->\r\n\r\n.NET's `Regex` class supports limited recursion through balancing groups. A <dfn>Balancing Group</dfn> uses the name of a previously defined [named capture group] as a stack, storing the interval between the current position and the last instance of the [named capture group] in the current name. You can then use a [conditional expression] to fail the matching algorithm if the previously defined [named capture group]'s stack is not empty when the match completes.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name1</em>-<em>name1</em>&gt;…)</code> &mdash; Where *name1* as the current group name and *name2* is a previously defined group. Stores\r\n  the interval between *name2* and the current position in *name1* and deletes *name2*. Deleting *name2* reveals the previous definition of \r\n  *name2* allowing it to be used as a stack for captures.\r\n- <code>(?&lt;-<em>name2</em>&gt;…)</code> &mdash; Where *name2* is a previously defined group. Stores the interval between *name2* and the \r\n  current position as the current capture and deletes *name2*. Deleting *name2* reveals the previous definition of  *name2* allowing \r\n  it to be used as a stack for captures.\r\n- <code>(?'<em>name1</em>-<em>name1</em>'…)</code> &mdash; Where *name1* as the current group name and *name2* is a previously defined group. Stores\r\n  the interval between *name2* and the current position in *name1* and deletes *name2*. Deleting *name2* reveals the previous definition of \r\n  *name2* allowing it to be used as a stack for captures.\r\n- <code>(?'-<em>name2</em>'…)</code> &mdash; Where *name2* is a previously defined group. Stores the interval between *name2* and the \r\n  current position as the current capture and deletes *name2*. Deleting *name2* reveals the previous definition of  *name2* allowing \r\n  it to be used as a stack for captures.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/recursion.md \"source for: example\")</sup>\r\n\r\n\r\nThe following shows an example of matching balanced `<` and `>` brackets (assuming `x` mode for a multiline regular expression):\r\n```re\r\n^                               # matches the beginning of the input\r\n\r\n[^<>]*                          # matches any number of non <> characters\r\n(\r\n    ((?'Open'<)[^<>]*)+         # matches an opening < followed by any number of non <> characters\r\n\r\n    ((?'Close-Open'>)[^<>]*)+   # matches a closing > followed by any number of non <> characters,\r\n                                # deleting the last match for 'Open'\r\n\r\n)*                              # matches the preceding expression zero or more times.\r\n\r\n(?(Open)(?!))                   # condition that fails the match if there are any remaining 'Open' matches\r\n\r\n$                               # matches the end of the input\r\n```\r\n\r\nOn a single line, the expression looks like this:\r\n```re\r\n^[^<>]*(((?'Open'<)[^<>]*)+((?'Close-Open'>)[^<>]*)+)*(?(Open)(?!))$\r\n```",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/recursion.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/recursion.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/recursion.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/recursion.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/recursion.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/37"
          },
          "name": "Recursion",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Recursive Expression"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L418",
          "description": "A <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.",
          "syntax": "- <code>\\k&lt;<em>n</em>+<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k'<em>n</em>+<em>n</em>'</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k&lt;<em>n</em>-<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k'<em>n</em>-<em>n</em>'</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Where *level* is an integer >= 0. Matches the same string as the [named capture group] with the name *name* at the recursion level relative to the referenced [named capture group].\r\n- <code>\\k'<em>name</em>'</code> &mdash; Where *level* is an integer >= 0. Matches the same string as the [named capture group] with the name *name* at the recursion level relative to the referenced [named capture group].\r\n- <code>\\g&lt;<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>\\g'<em>n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- `\\g<0>` &mdash; Evaluates the entire pattern at the current position.\r\n- `\\g'0'` &mdash; Evaluates the entire pattern at the current position.\r\n- <code>\\g&lt;<em>-n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g'<em>-n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g&lt;<em>+n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g'<em>+n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g&lt;<em>name</em>&gt;</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>\\g'<em>name</em>'</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n> NOTE: Left-most recursive calls are forbidden:\r\n> - `(?<name>a|\\g<name>b)` - error\r\n> - `(?<name>a|b\\g<name>c)` - ok\r\n>\r\n> Source for this example comes from Oniguruma: [source](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L464-L467)",
          "content": "## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/recursion.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/recursion.md)\r\n-->\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\k&lt;<em>n</em>+<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k'<em>n</em>+<em>n</em>'</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k&lt;<em>n</em>-<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k'<em>n</em>-<em>n</em>'</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Where *level* is an integer >= 0. Matches the same string as the [named capture group] with the name *name* at the recursion level relative to the referenced [named capture group].\r\n- <code>\\k'<em>name</em>'</code> &mdash; Where *level* is an integer >= 0. Matches the same string as the [named capture group] with the name *name* at the recursion level relative to the referenced [named capture group].\r\n- <code>\\g&lt;<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>\\g'<em>n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- `\\g<0>` &mdash; Evaluates the entire pattern at the current position.\r\n- `\\g'0'` &mdash; Evaluates the entire pattern at the current position.\r\n- <code>\\g&lt;<em>-n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g'<em>-n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g&lt;<em>+n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g'<em>+n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g&lt;<em>name</em>&gt;</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>\\g'<em>name</em>'</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n> NOTE: Left-most recursive calls are forbidden:\r\n> - `(?<name>a|\\g<name>b)` - error\r\n> - `(?<name>a|b\\g<name>c)` - ok\r\n>\r\n> Source for this example comes from Oniguruma: [source](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L464-L467)",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/recursion.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/recursion.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/recursion.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/37"
          },
          "name": "Recursion",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Recursive Expression"
          ],
          "description": "A <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.",
          "syntax": "- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.",
          "content": "## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/recursion.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/recursion.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/37"
          },
          "name": "Recursion",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Recursive Expression"
          ],
          "description": "A <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.",
          "syntax": "- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.",
          "content": "## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/recursion.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/recursion.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/37"
          },
          "name": "Recursion",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Recursive Expression"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.20",
          "description": "A <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.",
          "syntax": "- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.",
          "content": "## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/recursion.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/recursion.md)\r\n-->\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/recursion.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/recursion.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/37"
          },
          "name": "Recursion",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Recursive Expression"
          ],
          "description": "A <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.",
          "syntax": "- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.",
          "content": "## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/recursion.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/recursion.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
          ]
        }
      ],
      "content": "# Feature: Recursion\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-recursion) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-recursion) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-recursion) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-recursion) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-recursion) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-recursion) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-recursion) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-recursion) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-recursion) |\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/recursion.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "conditional-expressions",
      "feature": "conditional-expressions",
      "name": "Conditional Expressions",
      "built": true,
      "outFile": "features/conditional-expressions.md",
      "priority": 38,
      "aliases": [
        "Conditional Expression"
      ],
      "description": "A <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.",
      "syntax": "- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].",
      "links": [
        {
          "name": "Conditions",
          "href": "#conditions"
        },
        {
          "name": "Condition",
          "href": "#conditions"
        },
        {
          "name": "DEFINE Condition",
          "href": "#define-condition"
        }
      ],
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/38"
          },
          "name": "Conditional Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Conditional Expression"
          ],
          "reference": "https://perldoc.perl.org/perlre#(?(condition)yes-pattern%7Cno-pattern)",
          "description": "A <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.",
          "syntax": "- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?{<em>code</em>}…)</code> &mdash; Evaluates embedded Perl code whose result is either **true** or **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].",
          "links": {
            "$ref": "#/features/38/links"
          },
          "content": "## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?{<em>code</em>}…)</code> &mdash; Evaluates embedded Perl code whose result is either **true** or **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/conditional-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/conditional-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/conditional-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/38"
          },
          "name": "Conditional Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Conditional Expression"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC23",
          "description": "A <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.",
          "syntax": "- <code>(?(<em>condition</em>)<em>condition</em>|<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].\r\n- <code>(?(VERSION=<em>version</em>)…)</code> &mdash; Evaluates to **true** if the PCRE version is equal to supplied version; otherwise, evaluates to **false**.\r\n- <code>(?(VERSION&gt;=<em>version</em>)…)</code> &mdash; Evaluates to **true** if the PCRE version is greater than or equal to the supplied version; otherwise, evaluates to **false**.",
          "links": {
            "$ref": "#/features/38/links"
          },
          "content": "## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>condition</em>|<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].\r\n- <code>(?(VERSION=<em>version</em>)…)</code> &mdash; Evaluates to **true** if the PCRE version is equal to supplied version; otherwise, evaluates to **false**.\r\n- <code>(?(VERSION&gt;=<em>version</em>)…)</code> &mdash; Evaluates to **true** if the PCRE version is greater than or equal to the supplied version; otherwise, evaluates to **false**.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/conditional-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/conditional-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/conditional-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/38"
          },
          "name": "Conditional Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Conditional Expression"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.conditional_expressions",
          "description": "A <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.",
          "syntax": "- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].",
          "links": {
            "$ref": "#/features/38/links"
          },
          "content": "## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/conditional-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/conditional-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/38"
          },
          "name": "Conditional Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Conditional Expression"
          ],
          "reference": "https://docs.microsoft.com/en-us/dotnet/standard/base-types/alternation-constructs-in-regular-expressions#Conditional_Expr",
          "description": "A <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.",
          "syntax": "- <code>(?(<em>condition</em>)<em>condition</em>|<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**. If *n* does not correspond to a [capture group], an error is thrown.\r\n- <code>(?(<em>name</em>)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**. If *name* does not correspond to a [named capture group], *name* is interpeted as a [lookahead] pattern.\r\n- <code>(?(<em>test-pattern</em>)…)</code> &mdash; Evaluates to <em>test-pattern</em>true<em>test-pattern</em> if a [lookahead] for <em>test-pattern</em> matches; Otherwise, evaluates to <em>test-pattern</em>false<em>test-pattern</em>. Equivalent to: <code>(?(?=<em>test-pattern</em>)…)</code>.\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?<=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookbehind] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?<!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookbehind] for *test-pattern* matches; Otherwise, evaluates to **false**.",
          "links": {
            "$ref": "#/features/38/links"
          },
          "content": "## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>condition</em>|<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**. If *n* does not correspond to a [capture group], an error is thrown.\r\n- <code>(?(<em>name</em>)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**. If *name* does not correspond to a [named capture group], *name* is interpeted as a [lookahead] pattern.\r\n- <code>(?(<em>test-pattern</em>)…)</code> &mdash; Evaluates to <em>test-pattern</em>true<em>test-pattern</em> if a [lookahead] for <em>test-pattern</em> matches; Otherwise, evaluates to <em>test-pattern</em>false<em>test-pattern</em>. Equivalent to: <code>(?(?=<em>test-pattern</em>)…)</code>.\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?<=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookbehind] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?<!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookbehind] for *test-pattern* matches; Otherwise, evaluates to **false**.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/conditional-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/conditional-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/conditional-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/38"
          },
          "name": "Conditional Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Conditional Expression"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L379",
          "description": "A <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.",
          "syntax": "- <code>(?(<em>condition</em>)<em>condition</em>|<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(-<em>n</em>)…)</code> &mdash; Evaluates to **true** if the *n*th [capture group] declared to the left of the current *Atom* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(+<em>n</em>)…)</code> &mdash; Evaluates to **true** if the *n*th [capture group] declared to the right of the current *Atom* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>-<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>+<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>-<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>-<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>+<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>+<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.",
          "links": {
            "$ref": "#/features/38/links"
          },
          "content": "## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>condition</em>|<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(-<em>n</em>)…)</code> &mdash; Evaluates to **true** if the *n*th [capture group] declared to the left of the current *Atom* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(+<em>n</em>)…)</code> &mdash; Evaluates to **true** if the *n*th [capture group] declared to the right of the current *Atom* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>-<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>+<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>-<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>-<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>+<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>+<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/conditional-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/conditional-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/conditional-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/38"
          },
          "name": "Conditional Expressions",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Conditional Expression"
          ],
          "description": "A <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.",
          "syntax": "- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].",
          "links": {
            "$ref": "#/features/38/links"
          },
          "content": "## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/conditional-expressions.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/conditional-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/38"
          },
          "name": "Conditional Expressions",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Conditional Expression"
          ],
          "description": "A <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.",
          "syntax": "- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].",
          "links": {
            "$ref": "#/features/38/links"
          },
          "content": "## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/conditional-expressions.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/conditional-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/38"
          },
          "name": "Conditional Expressions",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Conditional Expression"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.18",
          "description": "A <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.",
          "syntax": "- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].",
          "links": {
            "$ref": "#/features/38/links"
          },
          "content": "## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/conditional-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/conditional-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/38"
          },
          "name": "Conditional Expressions",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Conditional Expression"
          ],
          "description": "A <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.",
          "syntax": "- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].",
          "links": {
            "$ref": "#/features/38/links"
          },
          "content": "## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/conditional-expressions.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/conditional-expressions.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ],
          "linksSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
          ]
        }
      ],
      "content": "# Feature: Conditional Expressions\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-conditional-expressions) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-conditional-expressions) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-conditional-expressions) |\r\n| [.NET](../engines/dotnet.md) | [✔](../engines/dotnet.md#feature-conditional-expressions) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-conditional-expressions) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-conditional-expressions) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-conditional-expressions) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-conditional-expressions) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-conditional-expressions) |\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n[Conditions]: #conditions\r\n[Condition]: #conditions\r\n[DEFINE Condition]: #define-condition\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
      ],
      "linksSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/alternatives/conditional-expressions.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "subroutines",
      "feature": "subroutines",
      "name": "Subroutines",
      "built": true,
      "outFile": "features/subroutines.md",
      "priority": 39,
      "aliases": [
        "Subroutine"
      ],
      "description": "A <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.",
      "syntax": "- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.",
      "example": "```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/39"
          },
          "name": "Subroutines",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Subroutine"
          ],
          "reference": "https://perldoc.perl.org/perlre#(?&amp;NAME)",
          "description": "A <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.",
          "syntax": "- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.",
          "example": "```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "content": "## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/subroutines.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/subroutines.md)\r\n-->\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/subroutines.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/subroutines.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/39"
          },
          "name": "Subroutines",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Subroutine"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC26",
          "description": "A <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern. These [capture groups] can optionally be placed in a\r\n[DEFINE condition].",
          "syntax": "- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>\\g&lt;<em>name</em>&gt;</code> &mdash; Evaluates the [named capture group] with the provided *name*.",
          "example": "```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "content": "## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/subroutines.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/subroutines.md)\r\n-->\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern. These [capture groups] can optionally be placed in a\r\n[DEFINE condition].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>\\g&lt;<em>name</em>&gt;</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/subroutines.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/subroutines.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/subroutines.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/subroutines.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/39"
          },
          "name": "Subroutines",
          "supported": true,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Subroutine"
          ],
          "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.recursive_expressions",
          "description": "A <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.",
          "syntax": "- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.",
          "example": "```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "content": "## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/subroutines.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/subroutines.md)\r\n-->\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/subroutines.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/subroutines.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/39"
          },
          "name": "Subroutines",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Subroutine"
          ],
          "description": "A <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.",
          "syntax": "- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.",
          "example": "```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "content": "## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/subroutines.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/subroutines.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/39"
          },
          "name": "Subroutines",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Subroutine"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L451",
          "description": "A <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.",
          "syntax": "- <code>\\g&lt;<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>\\g'<em>n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- `\\g<0>` &mdash; Evaluates the entire pattern at the current position.\r\n- `\\g'0'` &mdash; Evaluates the entire pattern at the current position.\r\n- <code>\\g&lt;<em>-n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g'<em>-n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g&lt;<em>+n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g'<em>+n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g&lt;<em>name</em>&gt;</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>\\g'<em>name</em>'</code> &mdash; Evaluates the [named capture group] with the provided *name*.",
          "example": "```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "content": "## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/subroutines.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/subroutines.md)\r\n-->\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\g&lt;<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>\\g'<em>n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- `\\g<0>` &mdash; Evaluates the entire pattern at the current position.\r\n- `\\g'0'` &mdash; Evaluates the entire pattern at the current position.\r\n- <code>\\g&lt;<em>-n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g'<em>-n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g&lt;<em>+n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g'<em>+n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g&lt;<em>name</em>&gt;</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>\\g'<em>name</em>'</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/subroutines.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/subroutines.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/subroutines.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/39"
          },
          "name": "Subroutines",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Subroutine"
          ],
          "description": "A <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.",
          "syntax": "- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.",
          "example": "```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "content": "## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/subroutines.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/subroutines.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/39"
          },
          "name": "Subroutines",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Subroutine"
          ],
          "description": "A <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.",
          "syntax": "- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.",
          "example": "```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "content": "## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/subroutines.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/subroutines.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/39"
          },
          "name": "Subroutines",
          "supported": true,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Subroutine"
          ],
          "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.18.9",
          "description": "A <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.",
          "syntax": "- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>(?P&gt;<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.",
          "example": "```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "content": "## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/subroutines.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/subroutines.md)\r\n-->\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>(?P&gt;<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/subroutines.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/subroutines.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/subroutines.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/39"
          },
          "name": "Subroutines",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Subroutine"
          ],
          "description": "A <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.",
          "syntax": "- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.",
          "example": "```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```",
          "content": "## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/subroutines.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/subroutines.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "exampleSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
          ]
        }
      ],
      "content": "# Feature: Subroutines\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-subroutines) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-subroutines) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [✔](../engines/boost.regex.md#feature-subroutines) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-subroutines) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-subroutines) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-subroutines) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-subroutines) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [✔](../engines/glib-gregex.md#feature-subroutines) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-subroutines) |\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
      ],
      "exampleSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/subroutines.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "callouts",
      "feature": "callouts",
      "name": "Callouts",
      "built": true,
      "outFile": "features/callouts.md",
      "priority": 40,
      "aliases": [
        "Callout"
      ],
      "description": "A <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.",
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/40"
          },
          "name": "Callouts",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Callout"
          ],
          "reference": "https://perldoc.perl.org/perlre#(?%7B-code-%7D)",
          "description": "A <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.",
          "syntax": "- <code>(?{<em>code</em>})</code> &mdash; - Zero-width assertion that executes embedded Perl code.\r\n- <code>(??{<em>code</em>})</code> &mdash; - Zero-width assertion that executes embedded Perl code. The return value of the embedded code is interpreted as a pattern to be matched at this position.",
          "content": "## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/callouts.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/callouts.md)\r\n-->\r\n\r\nA <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/callouts.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?{<em>code</em>})</code> &mdash; - Zero-width assertion that executes embedded Perl code.\r\n- <code>(??{<em>code</em>})</code> &mdash; - Zero-width assertion that executes embedded Perl code. The return value of the embedded code is interpreted as a pattern to be matched at this position.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/callouts.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/callouts.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/callouts.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/40"
          },
          "name": "Callouts",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Callout"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC28",
          "description": "A <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.",
          "syntax": "- <code>(?C)</code> &mdash; Invokes the user defined function with the argument `0`.\r\n- <code>(?C<em>n</em>)</code> &mdash; Where *n* is an integer. Invokes the user defined function with the argument *n*.\r\n- <code>(?C\\`<em>arg</em>\\`)</code> &mdash; Where *arg* is any character except `` ` ``. If an `` ` `` must be included it should be escaped by doubling it (i.e., ``` `` ```). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C'<em>arg</em>')</code> &mdash; Where *arg* is any character except `'`. If an `'` must be included it should be escaped by doubling it (i.e., `''`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C\"<em>arg</em>\")</code> &mdash; Where *arg* is any character except `\"`. If an `\"` must be included it should be escaped by doubling it (i.e., `\"\"`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C^<em>arg</em>^)</code> &mdash; Where *arg* is any character except `^`. If an `^` must be included it should be escaped by doubling it (i.e., `^^`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C%<em>arg</em>%)</code> &mdash; Where *arg* is any character except `%`. If an `%` must be included it should be escaped by doubling it (i.e., `%%`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C#<em>arg</em>#)</code> &mdash; Where *arg* is any character except `#`. If an `#` must be included it should be escaped by doubling it (i.e., `##`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C$<em>arg</em>$)</code> &mdash; Where *arg* is any character except `$`. If an `$` must be included it should be escaped by doubling it (i.e., `$$`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C{<em>arg</em>})</code> &mdash; Where *arg* is any character except `}`. If an `}` must be included it should be escaped by doubling it (i.e., `}}`). Invokes the user defined function with the argument *arg*.",
          "content": "## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/callouts.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/callouts.md)\r\n-->\r\n\r\nA <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/callouts.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?C)</code> &mdash; Invokes the user defined function with the argument `0`.\r\n- <code>(?C<em>n</em>)</code> &mdash; Where *n* is an integer. Invokes the user defined function with the argument *n*.\r\n- <code>(?C\\`<em>arg</em>\\`)</code> &mdash; Where *arg* is any character except `` ` ``. If an `` ` `` must be included it should be escaped by doubling it (i.e., ``` `` ```). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C'<em>arg</em>')</code> &mdash; Where *arg* is any character except `'`. If an `'` must be included it should be escaped by doubling it (i.e., `''`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C\"<em>arg</em>\")</code> &mdash; Where *arg* is any character except `\"`. If an `\"` must be included it should be escaped by doubling it (i.e., `\"\"`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C^<em>arg</em>^)</code> &mdash; Where *arg* is any character except `^`. If an `^` must be included it should be escaped by doubling it (i.e., `^^`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C%<em>arg</em>%)</code> &mdash; Where *arg* is any character except `%`. If an `%` must be included it should be escaped by doubling it (i.e., `%%`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C#<em>arg</em>#)</code> &mdash; Where *arg* is any character except `#`. If an `#` must be included it should be escaped by doubling it (i.e., `##`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C$<em>arg</em>$)</code> &mdash; Where *arg* is any character except `$`. If an `$` must be included it should be escaped by doubling it (i.e., `$$`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C{<em>arg</em>})</code> &mdash; Where *arg* is any character except `}`. If an `}` must be included it should be escaped by doubling it (i.e., `}}`). Invokes the user defined function with the argument *arg*.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/callouts.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/callouts.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/callouts.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/40"
          },
          "name": "Callouts",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Callout"
          ],
          "description": "A <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.",
          "content": "## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/callouts.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/40"
          },
          "name": "Callouts",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Callout"
          ],
          "description": "A <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.",
          "content": "## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/callouts.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/40"
          },
          "name": "Callouts",
          "supported": true,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Callout"
          ],
          "reference": "https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L322",
          "description": "A <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.",
          "syntax": "- Callouts of contents:\r\n  - <code>(?{…<em>contents</em>…})</code> &mdash; Invokes the callout with the provided *contents*.\r\n  - <code>(?{…<em>contents</em>…}<em>D</em>)</code> &mdash; Invokes the callout with the provided *contents* and direction flag character *D*. The direction flag must be one of:\r\n    - `X` &mdash; Invoked while progressing and retracting.\r\n    - `<` &mdash; Invoked while retracting.\r\n    - `>` &mdash; Invoked while progressing.\r\n  - <code>(?{…<em>contents</em>…}[<em>tag</em>])</code> &mdash; Invokes the callout with the provided *contents* and *tag*.\r\n  - <code>(?{…<em>contents</em>…}[<em>tag</em>]<em>D</em>)</code> &mdash; Invokes the callout with the provided *contents*, *tag*, and direction flag character *D*. The direction flag must be one of:\r\n    - `X` &mdash; Invoked while progressing and retracting.\r\n    - `<` &mdash; Invoked while retracting.\r\n    - `>` &mdash; Invoked while progressing.\r\n- Callouts of *name*:\r\n - <code>(*<em>name</em>)</code> &mdash; Invokes the callout with the provided *name*.\r\n - <code>(*<em>name</em>{<em>args</em>…})</code> &mdash; Invokes the callout with the provided *name* and *args*.\r\n - <code>(*<em>name</em>[<em>tag</em>])</code> &mdash; Invokes the callout with the provided *name* and *tag*.\r\n - <code>(*<em>name</em>[<em>tag</em>]{<em>args</em>…})</code> &mdash; Invokes the callout with the provided *name*, *tag*, and *args*.",
          "content": "## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/callouts.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/callouts.md)\r\n-->\r\n\r\nA <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/callouts.md \"source for: syntax\")</sup>\r\n\r\n\r\n- Callouts of contents:\r\n  - <code>(?{…<em>contents</em>…})</code> &mdash; Invokes the callout with the provided *contents*.\r\n  - <code>(?{…<em>contents</em>…}<em>D</em>)</code> &mdash; Invokes the callout with the provided *contents* and direction flag character *D*. The direction flag must be one of:\r\n    - `X` &mdash; Invoked while progressing and retracting.\r\n    - `<` &mdash; Invoked while retracting.\r\n    - `>` &mdash; Invoked while progressing.\r\n  - <code>(?{…<em>contents</em>…}[<em>tag</em>])</code> &mdash; Invokes the callout with the provided *contents* and *tag*.\r\n  - <code>(?{…<em>contents</em>…}[<em>tag</em>]<em>D</em>)</code> &mdash; Invokes the callout with the provided *contents*, *tag*, and direction flag character *D*. The direction flag must be one of:\r\n    - `X` &mdash; Invoked while progressing and retracting.\r\n    - `<` &mdash; Invoked while retracting.\r\n    - `>` &mdash; Invoked while progressing.\r\n- Callouts of *name*:\r\n - <code>(*<em>name</em>)</code> &mdash; Invokes the callout with the provided *name*.\r\n - <code>(*<em>name</em>{<em>args</em>…})</code> &mdash; Invokes the callout with the provided *name* and *args*.\r\n - <code>(*<em>name</em>[<em>tag</em>])</code> &mdash; Invokes the callout with the provided *name* and *tag*.\r\n - <code>(*<em>name</em>[<em>tag</em>]{<em>args</em>…})</code> &mdash; Invokes the callout with the provided *name*, *tag*, and *args*.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/callouts.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/callouts.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/callouts.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/40"
          },
          "name": "Callouts",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Callout"
          ],
          "description": "A <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.",
          "content": "## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/callouts.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/40"
          },
          "name": "Callouts",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Callout"
          ],
          "description": "A <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.",
          "content": "## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/callouts.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/40"
          },
          "name": "Callouts",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Callout"
          ],
          "description": "A <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.",
          "content": "## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/callouts.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/40"
          },
          "name": "Callouts",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Callout"
          ],
          "description": "A <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.",
          "content": "## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/callouts.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
          ]
        }
      ],
      "content": "# Feature: Callouts\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-callouts) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-callouts) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-callouts) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-callouts) |\r\n| [Oniguruma](../engines/oniguruma.md) | [✔](../engines/oniguruma.md#feature-callouts) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-callouts) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-callouts) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-callouts) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-callouts) |\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/feature-toc.yml"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/callouts.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Feature",
      "id": "backtracking-control-verbs",
      "feature": "backtracking-control-verbs",
      "name": "Backtracking Control Verbs",
      "built": true,
      "outFile": "features/backtracking-control-verbs.md",
      "aliases": [
        "Backtracking Control Verb"
      ],
      "description": "A <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.",
      "syntax": "- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
      "engineFeatures": [
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/0"
          },
          "feature": {
            "$ref": "#/features/41"
          },
          "name": "Backtracking Control Verbs",
          "supported": true,
          "built": true,
          "outFile": "engines/perl.md",
          "aliases": [
            "Backtracking Control Verb"
          ],
          "reference": "https://perldoc.perl.org/perlre#Special-Backtracking-Control-Verbs",
          "description": "A <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.",
          "syntax": "- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\r\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\r\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\r\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\r\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\r\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\r\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "content": "## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/backtracking-control-verbs.md)\r\n-->\r\n\r\nA <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/backtracking-control-verbs.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\r\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\r\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\r\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\r\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\r\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\r\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/backtracking-control-verbs.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/backtracking-control-verbs.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/perl/features/backtracking-control-verbs.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/1"
          },
          "feature": {
            "$ref": "#/features/41"
          },
          "name": "Backtracking Control Verbs",
          "supported": true,
          "built": true,
          "outFile": "engines/pcre.md",
          "aliases": [
            "Backtracking Control Verb"
          ],
          "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC29",
          "description": "A <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.",
          "syntax": "- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "content": "## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/backtracking-control-verbs.md)\r\n-->\r\n\r\nA <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/backtracking-control-verbs.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/features/backtracking-control-verbs.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/2"
          },
          "feature": {
            "$ref": "#/features/41"
          },
          "name": "Backtracking Control Verbs",
          "supported": false,
          "built": true,
          "outFile": "engines/boost.regex.md",
          "aliases": [
            "Backtracking Control Verb"
          ],
          "reference": "#not-supported-features",
          "description": "A <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.",
          "syntax": "- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "content": "## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/backtracking-control-verbs.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/features/backtracking-control-verbs.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/3"
          },
          "feature": {
            "$ref": "#/features/41"
          },
          "name": "Backtracking Control Verbs",
          "supported": false,
          "built": true,
          "outFile": "engines/dotnet.md",
          "aliases": [
            "Backtracking Control Verb"
          ],
          "reference": "#not-supported-features",
          "description": "A <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.",
          "syntax": "- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "content": "## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/backtracking-control-verbs.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/features/backtracking-control-verbs.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/4"
          },
          "feature": {
            "$ref": "#/features/41"
          },
          "name": "Backtracking Control Verbs",
          "supported": false,
          "built": true,
          "outFile": "engines/oniguruma.md",
          "aliases": [
            "Backtracking Control Verb"
          ],
          "reference": "#not-supported-features",
          "description": "A <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.",
          "syntax": "- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "content": "## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/backtracking-control-verbs.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/features/backtracking-control-verbs.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/5"
          },
          "feature": {
            "$ref": "#/features/41"
          },
          "name": "Backtracking Control Verbs",
          "supported": false,
          "built": true,
          "outFile": "engines/hyperscan.md",
          "aliases": [
            "Backtracking Control Verb"
          ],
          "reference": "#not-supported-features",
          "description": "A <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.",
          "syntax": "- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "content": "## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/backtracking-control-verbs.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/features/backtracking-control-verbs.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/6"
          },
          "feature": {
            "$ref": "#/features/41"
          },
          "name": "Backtracking Control Verbs",
          "supported": false,
          "built": true,
          "outFile": "engines/icu.md",
          "aliases": [
            "Backtracking Control Verb"
          ],
          "reference": "#not-supported-features",
          "description": "A <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.",
          "syntax": "- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "content": "## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/backtracking-control-verbs.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/icu/features/backtracking-control-verbs.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/7"
          },
          "feature": {
            "$ref": "#/features/41"
          },
          "name": "Backtracking Control Verbs",
          "supported": false,
          "built": true,
          "outFile": "engines/glib-gregex.md",
          "aliases": [
            "Backtracking Control Verb"
          ],
          "reference": "#not-supported-features",
          "description": "A <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.",
          "syntax": "- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "content": "## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/backtracking-control-verbs.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/features/backtracking-control-verbs.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ]
        },
        {
          "docs": {
            "$ref": "#"
          },
          "type": "EngineFeature",
          "engine": {
            "$ref": "#/engines/8"
          },
          "feature": {
            "$ref": "#/features/41"
          },
          "name": "Backtracking Control Verbs",
          "supported": false,
          "built": true,
          "outFile": "engines/ecmascript.md",
          "aliases": [
            "Backtracking Control Verb"
          ],
          "reference": "#not-supported-features",
          "description": "A <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.",
          "syntax": "- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.",
          "content": "## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.",
          "nameSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "aliasesSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "supportedSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/backtracking-control-verbs.md"
          ],
          "syntaxSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ],
          "referenceSources": [
            "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/features/backtracking-control-verbs.md"
          ],
          "descriptionSources": [
            "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
          ]
        }
      ],
      "content": "# Feature: Backtracking Control Verbs\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Features](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\")</sup>\r\n\r\nA <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: syntax\")</sup>\r\n\r\n\r\n> NOTE: The following syntax is an example based on some of the supported engines. For specific engine support, see [Engines](#engines).\r\n\r\n- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.\r\n\r\n## Engines\r\n\r\n| Engine | Supported |\r\n|:-------|:---------:|\r\n| [Perl](../engines/perl.md) | [✔](../engines/perl.md#feature-backtracking-control-verbs) |\r\n| [PCRE](../engines/pcre.md) | [✔](../engines/pcre.md#feature-backtracking-control-verbs) |\r\n| [Boost.Regex](../engines/boost.regex.md) | [❌](../engines/boost.regex.md#feature-backtracking-control-verbs) |\r\n| [.NET](../engines/dotnet.md) | [❌](../engines/dotnet.md#feature-backtracking-control-verbs) |\r\n| [Oniguruma](../engines/oniguruma.md) | [❌](../engines/oniguruma.md#feature-backtracking-control-verbs) |\r\n| [Hyperscan](../engines/hyperscan.md) | [❌](../engines/hyperscan.md#feature-backtracking-control-verbs) |\r\n| [ICU](../engines/icu.md) | [❌](../engines/icu.md#feature-backtracking-control-verbs) |\r\n| [Glib/GRegex](../engines/glib-gregex.md) | [❌](../engines/glib-gregex.md#feature-backtracking-control-verbs) |\r\n| [ECMAScript](../engines/ecmascript.md) | [❌](../engines/ecmascript.md#feature-backtracking-control-verbs) |\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: flags.md\r\n[Flag]: flags.md\r\n[RegExp Flags]: flags.md\r\n[RegExp Flag]: flags.md\r\n[Anchors]: anchors.md\r\n[Anchor]: anchors.md\r\n[Buffer Boundaries]: buffer-boundaries.md\r\n[Buffer Boundary]: buffer-boundaries.md\r\n[Word Boundaries]: word-boundaries.md\r\n[Word Boundary]: word-boundaries.md\r\n[Text Segment Boundaries]: text-segment-boundaries.md\r\n[Text Segment Boundary]: text-segment-boundaries.md\r\n[Continuation Escape]: continuation-escape.md\r\n[Alternatives]: alternatives.md\r\n[Alternative]: alternatives.md\r\n[Wildcard]: wildcard.md\r\n[Wildcards]: wildcard.md\r\n[Character Classes]: character-classes.md\r\n[Character Class]: character-classes.md\r\n[Posix Character Classes]: posix-character-classes.md\r\n[Posix Character Class]: posix-character-classes.md\r\n[Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[Negated Posix Character Class]: negated-posix-character-classes.md\r\n[Collating Elements]: collating-elements.md\r\n[Collating Element]: collating-elements.md\r\n[Equivalence Classes]: equivalence-classes.md\r\n[Equivalence Class]: equivalence-classes.md\r\n[Character Class Escapes]: character-class-escapes.md\r\n[Character Class Escape]: character-class-escapes.md\r\n[Line Endings Escape]: line-endings-escape.md\r\n[Character Property Escapes]: character-property-escapes.md\r\n[Character Property Escape]: character-property-escapes.md\r\n[Character Class Nested Set]: character-class-nested-set.md\r\n[Character Class Nested Sets]: character-class-nested-set.md\r\n[Character Class Intersection]: character-class-intersection.md\r\n[Character Class Intersections]: character-class-intersection.md\r\n[Character Class Union]: character-class-union.md\r\n[Character Class Unions]: character-class-union.md\r\n[Character Class Subtraction]: character-class-subtraction.md\r\n[Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[Character Class Symmetric Differences]: character-class-symmetric-difference.md\r\n[Character Class Complement]: character-class-complement.md\r\n[Character Class Complements]: character-class-complement.md\r\n[Quoted Characters]: quoted-characters.md\r\n[Quantifiers]: quantifiers.md\r\n[Quantifier]: quantifiers.md\r\n[Lazy Quantifiers]: lazy-quantifiers.md\r\n[Lazy Quantifier]: lazy-quantifiers.md\r\n[Possessive Quantifiers]: possessive-quantifiers.md\r\n[Possessive Quantifier]: possessive-quantifiers.md\r\n[Capturing Groups]: capturing-groups.md\r\n[Capturing Group]: capturing-groups.md\r\n[Capture Groups]: capturing-groups.md\r\n[Capture Group]: capturing-groups.md\r\n[Named Capturing Groups]: named-capturing-groups.md\r\n[Named Capturing Group]: named-capturing-groups.md\r\n[Named Capture Groups]: named-capturing-groups.md\r\n[Named Capture Group]: named-capturing-groups.md\r\n[Non-Capturing Groups]: non-capturing-groups.md\r\n[Non-Capturing group]: non-capturing-groups.md\r\n[Backreferences]: backreferences.md\r\n[Backreference]: backreferences.md\r\n[Comments]: comments.md\r\n[Comment]: comments.md\r\n[Line Comments]: line-comments.md\r\n[Line Comment]: line-comments.md\r\n[x-mode Comments]: line-comments.md\r\n[x-mode Comment]: line-comments.md\r\n[Modifiers]: modifiers.md\r\n[Modifier]: modifiers.md\r\n[Branch Reset]: branch-reset.md\r\n[Lookahead]: lookahead.md\r\n[Lookbehind]: lookbehind.md\r\n[Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[Non-Backtracking Expression]: non-backtracking-expressions.md\r\n[Recursion]: recursion.md\r\n[Recursive Expression]: recursion.md\r\n[Conditional Expressions]: conditional-expressions.md\r\n[Conditional Expression]: conditional-expressions.md\r\n[Subroutines]: subroutines.md\r\n[Subroutine]: subroutines.md\r\n[Callouts]: callouts.md\r\n[Callout]: callouts.md\r\n[Backtracking Control Verbs]: backtracking-control-verbs.md\r\n[Backtracking Control Verb]: backtracking-control-verbs.md\r\n\r\n\r\n[article:Flags]: flags.md\r\n[article:Anchors]: anchors.md\r\n[article:Buffer Boundaries]: buffer-boundaries.md\r\n[article:Word Boundaries]: word-boundaries.md\r\n[article:Text Segment Boundaries]: text-segment-boundaries.md\r\n[article:Continuation Escape]: continuation-escape.md\r\n[article:Alternatives]: alternatives.md\r\n[article:Wildcard]: wildcard.md\r\n[article:Character Classes]: character-classes.md\r\n[article:Posix Character Classes]: posix-character-classes.md\r\n[article:Negated Posix Character Classes]: negated-posix-character-classes.md\r\n[article:Collating Elements]: collating-elements.md\r\n[article:Equivalence Classes]: equivalence-classes.md\r\n[article:Character Class Escapes]: character-class-escapes.md\r\n[article:Line Endings Escape]: line-endings-escape.md\r\n[article:Character Property Escapes]: character-property-escapes.md\r\n[article:Character Class Nested Set]: character-class-nested-set.md\r\n[article:Character Class Intersection]: character-class-intersection.md\r\n[article:Character Class Union]: character-class-union.md\r\n[article:Character Class Subtraction]: character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: character-class-symmetric-difference.md\r\n[article:Character Class Complement]: character-class-complement.md\r\n[article:Quoted Characters]: quoted-characters.md\r\n[article:Quantifiers]: quantifiers.md\r\n[article:Lazy Quantifiers]: lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: possessive-quantifiers.md\r\n[article:Capturing Groups]: capturing-groups.md\r\n[article:Named Capturing Groups]: named-capturing-groups.md\r\n[article:Non-Capturing Groups]: non-capturing-groups.md\r\n[article:Backreferences]: backreferences.md\r\n[article:Comments]: comments.md\r\n[article:Line Comments]: line-comments.md\r\n[article:Modifiers]: modifiers.md\r\n[article:Branch Reset]: branch-reset.md\r\n[article:Lookahead]: lookahead.md\r\n[article:Lookbehind]: lookbehind.md\r\n[article:Non-Backtracking Expressions]: non-backtracking-expressions.md\r\n[article:Recursion]: recursion.md\r\n[article:Conditional Expressions]: conditional-expressions.md\r\n[article:Subroutines]: subroutines.md\r\n[article:Callouts]: callouts.md\r\n[article:Backtracking Control Verbs]: backtracking-control-verbs.md\r\n\r\n[Reference]: #\r\n\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
      ],
      "aliasesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
      ],
      "syntaxSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
      ],
      "descriptionSources": [
        "/home/runner/work/regexp-features/regexp-features/src/features/groups-and-backtracking/backtracking-control-verbs.md"
      ]
    }
  ],
  "engines": [
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Engine",
      "id": "perl",
      "engine": "perl",
      "name": "Perl",
      "built": true,
      "outFile": "engines/perl.md",
      "priority": 0,
      "reference": "https://perldoc.perl.org/perlre",
      "supported_features": [
        {
          "$ref": "#/features/0/engineFeatures/0"
        },
        {
          "$ref": "#/features/1/engineFeatures/0"
        },
        {
          "$ref": "#/features/2/engineFeatures/0"
        },
        {
          "$ref": "#/features/3/engineFeatures/0"
        },
        {
          "$ref": "#/features/5/engineFeatures/0"
        },
        {
          "$ref": "#/features/6/engineFeatures/0"
        },
        {
          "$ref": "#/features/7/engineFeatures/0"
        },
        {
          "$ref": "#/features/8/engineFeatures/0"
        },
        {
          "$ref": "#/features/9/engineFeatures/0"
        },
        {
          "$ref": "#/features/10/engineFeatures/0"
        },
        {
          "$ref": "#/features/13/engineFeatures/0"
        },
        {
          "$ref": "#/features/14/engineFeatures/0"
        },
        {
          "$ref": "#/features/15/engineFeatures/0"
        },
        {
          "$ref": "#/features/16/engineFeatures/0"
        },
        {
          "$ref": "#/features/17/engineFeatures/0"
        },
        {
          "$ref": "#/features/18/engineFeatures/0"
        },
        {
          "$ref": "#/features/19/engineFeatures/0"
        },
        {
          "$ref": "#/features/20/engineFeatures/0"
        },
        {
          "$ref": "#/features/21/engineFeatures/0"
        },
        {
          "$ref": "#/features/22/engineFeatures/0"
        },
        {
          "$ref": "#/features/23/engineFeatures/0"
        },
        {
          "$ref": "#/features/24/engineFeatures/0"
        },
        {
          "$ref": "#/features/25/engineFeatures/0"
        },
        {
          "$ref": "#/features/26/engineFeatures/0"
        },
        {
          "$ref": "#/features/27/engineFeatures/0"
        },
        {
          "$ref": "#/features/28/engineFeatures/0"
        },
        {
          "$ref": "#/features/29/engineFeatures/0"
        },
        {
          "$ref": "#/features/30/engineFeatures/0"
        },
        {
          "$ref": "#/features/31/engineFeatures/0"
        },
        {
          "$ref": "#/features/32/engineFeatures/0"
        },
        {
          "$ref": "#/features/33/engineFeatures/0"
        },
        {
          "$ref": "#/features/34/engineFeatures/0"
        },
        {
          "$ref": "#/features/35/engineFeatures/0"
        },
        {
          "$ref": "#/features/36/engineFeatures/0"
        },
        {
          "$ref": "#/features/37/engineFeatures/0"
        },
        {
          "$ref": "#/features/38/engineFeatures/0"
        },
        {
          "$ref": "#/features/39/engineFeatures/0"
        },
        {
          "$ref": "#/features/40/engineFeatures/0"
        },
        {
          "$ref": "#/features/41/engineFeatures/0"
        }
      ],
      "unsupported_features": [
        {
          "$ref": "#/features/4/engineFeatures/0"
        },
        {
          "$ref": "#/features/11/engineFeatures/0"
        },
        {
          "$ref": "#/features/12/engineFeatures/0"
        }
      ],
      "features": [
        {
          "$ref": "#/features/0/engineFeatures/0"
        },
        {
          "$ref": "#/features/1/engineFeatures/0"
        },
        {
          "$ref": "#/features/2/engineFeatures/0"
        },
        {
          "$ref": "#/features/3/engineFeatures/0"
        },
        {
          "$ref": "#/features/4/engineFeatures/0"
        },
        {
          "$ref": "#/features/5/engineFeatures/0"
        },
        {
          "$ref": "#/features/6/engineFeatures/0"
        },
        {
          "$ref": "#/features/7/engineFeatures/0"
        },
        {
          "$ref": "#/features/8/engineFeatures/0"
        },
        {
          "$ref": "#/features/9/engineFeatures/0"
        },
        {
          "$ref": "#/features/10/engineFeatures/0"
        },
        {
          "$ref": "#/features/11/engineFeatures/0"
        },
        {
          "$ref": "#/features/12/engineFeatures/0"
        },
        {
          "$ref": "#/features/13/engineFeatures/0"
        },
        {
          "$ref": "#/features/14/engineFeatures/0"
        },
        {
          "$ref": "#/features/15/engineFeatures/0"
        },
        {
          "$ref": "#/features/16/engineFeatures/0"
        },
        {
          "$ref": "#/features/17/engineFeatures/0"
        },
        {
          "$ref": "#/features/18/engineFeatures/0"
        },
        {
          "$ref": "#/features/19/engineFeatures/0"
        },
        {
          "$ref": "#/features/20/engineFeatures/0"
        },
        {
          "$ref": "#/features/21/engineFeatures/0"
        },
        {
          "$ref": "#/features/22/engineFeatures/0"
        },
        {
          "$ref": "#/features/23/engineFeatures/0"
        },
        {
          "$ref": "#/features/24/engineFeatures/0"
        },
        {
          "$ref": "#/features/25/engineFeatures/0"
        },
        {
          "$ref": "#/features/26/engineFeatures/0"
        },
        {
          "$ref": "#/features/27/engineFeatures/0"
        },
        {
          "$ref": "#/features/28/engineFeatures/0"
        },
        {
          "$ref": "#/features/29/engineFeatures/0"
        },
        {
          "$ref": "#/features/30/engineFeatures/0"
        },
        {
          "$ref": "#/features/31/engineFeatures/0"
        },
        {
          "$ref": "#/features/32/engineFeatures/0"
        },
        {
          "$ref": "#/features/33/engineFeatures/0"
        },
        {
          "$ref": "#/features/34/engineFeatures/0"
        },
        {
          "$ref": "#/features/35/engineFeatures/0"
        },
        {
          "$ref": "#/features/36/engineFeatures/0"
        },
        {
          "$ref": "#/features/37/engineFeatures/0"
        },
        {
          "$ref": "#/features/38/engineFeatures/0"
        },
        {
          "$ref": "#/features/39/engineFeatures/0"
        },
        {
          "$ref": "#/features/40/engineFeatures/0"
        },
        {
          "$ref": "#/features/41/engineFeatures/0"
        }
      ],
      "languages": [
        {
          "$ref": "#/languages/11"
        }
      ],
      "content": "# Engine: Perl <a id=\"top\"></a>\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Engines](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Reference]</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/engine.md \"source for: name, reference\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/engines/perl/engine.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/engine.md)\r\n-->\r\n\r\n\r\n\r\n## Languages\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/engine.md \"source for: languages\")</sup>\r\n\r\n- [Perl]\r\n\r\n## Features\r\n\r\n<a id=\"supported-features\"></a>The following features are supported:\r\n\r\n- ✔ [Flags]\r\n- ✔ [Anchors]\r\n- ✔ [Buffer Boundaries]\r\n- ✔ [Word Boundaries]\r\n- ✔ [Continuation Escape]\r\n- ✔ [Alternatives]\r\n- ✔ [Wildcard]\r\n- ✔ [Character Classes]\r\n- ✔ [Posix Character Classes]\r\n- ✔ [Negated Posix Character Classes]\r\n- ✔ [Character Class Escapes]\r\n- ✔ [Line Endings Escape]\r\n- ✔ [Character Property Escapes]\r\n- ✔ [Character Class Nested Set]\r\n- ✔ [Character Class Intersection]\r\n- ✔ [Character Class Union]\r\n- ✔ [Character Class Subtraction]\r\n- ✔ [Character Class Symmetric Difference]\r\n- ✔ [Character Class Complement]\r\n- ✔ [Quoted Characters]\r\n- ✔ [Quantifiers]\r\n- ✔ [Lazy Quantifiers]\r\n- ✔ [Possessive Quantifiers]\r\n- ✔ [Capturing Groups]\r\n- ✔ [Named Capturing Groups]\r\n- ✔ [Non-Capturing Groups]\r\n- ✔ [Backreferences]\r\n- ✔ [Comments]\r\n- ✔ [Line Comments]\r\n- ✔ [Modifiers]\r\n- ✔ [Branch Reset]\r\n- ✔ [Lookahead]\r\n- ✔ [Lookbehind]\r\n- ✔ [Non-Backtracking Expressions]\r\n- ✔ [Recursion]\r\n- ✔ [Conditional Expressions]\r\n- ✔ [Subroutines]\r\n- ✔ [Callouts]\r\n- ✔ [Backtracking Control Verbs]\r\n\r\n<a id=\"not-supported-features\"></a>The following features are *not* supported:\r\n\r\n- ❌ [Text Segment Boundaries]\r\n- ❌ [Collating Elements]\r\n- ❌ [Equivalence Classes]\r\n\r\n## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x`, `xx` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n- `a`, `aa`, `d`, `l`, `u` &mdash; Character Set Modifiers. Affect which character-set rules are used.\r\n- `n` &mdash; Explicit Capture. Prevents non-named capture groups from capturing.\r\n- `c` &mdash; Keep the current position during repeated matching.\r\n- `g` &mdash; Global. Globally match the pattern repeatedly in the string.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]\r\n\r\n## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n- <code>\\b{<em>name</em>}</code> &mdash; Matches the start or the end of a unicode boundary specified by *name*.\r\n- <code>\\B{<em>name</em>}</code> &mdash; Matches when *not* at the start or the end of a unicode boundary specified by *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n\r\n## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.\r\n\r\n## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n- `(?[…])` &mdash; Extended Bracketed Character Class, permit the following features:\r\n  - [Character Class Intersection]\r\n  - [Character Class Subtraction]\r\n  - [Character Class Nested Set]\r\n  - [Character Class Union]\r\n  - [Character Class Symmetric Difference]\r\n  - [Character Class Complement]\r\n\r\n#### Extended Bracketed Character Class\r\n\r\nInside of `(?[…])`, only meta characters are permitted and whitespace is ignored. Individual characters (like `a`, `1`, etc.) must be enclosed in a [Character Class Nested Set].\r\n\r\nIn addition, expressions within the bracketed character class may be grouped using `(` and `)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n- <code>(?[[:<em>name</em>:]])</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/negated-posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/negated-posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n- <code>(?[[:^<em>name</em>:]])</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-nested-set.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-nested-set.md)\r\n-->\r\n\r\nA <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-nested-set.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?[ […] ])` &mdash; Where `…` includes any contents allowed in a normal [character class].\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-nested-set.md \"source for: example\")</sup>\r\n\r\n\r\n```\r\n(?[[a-z]&[^d-q]])\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-intersection.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-intersection.md)\r\n-->\r\n\r\n<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-intersection.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?[ <em>a</em> & <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-union.md)\r\n-->\r\n\r\n<dfn>Character Class Union</dfn> allows you include multiple classes of characters within a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-union.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?[ <em>a</em> + <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n- <code>(?[ <em>a</em> | <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-subtraction.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-subtraction.md)\r\n-->\r\n\r\n<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-subtraction.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?[ <em>a</em> - <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n<dfn>Character Class Symmetric Difference</dfn> allows you include characters that match either, but not both, of two [character classes].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-symmetric-difference.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?[ <em>a</em> ^ <em>b</em> ])</code> &mdash; Where *a* and *b* are metacharacters or other *Class Atoms*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/character-class-complement.md)\r\n-->\r\n\r\n<dfn>Character Class Complement</dfn> allows you to negate a [character class] inside of another [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/character-class-complement.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?[ !<em>a</em> ])</code> &mdash; Where *a* is a metacharacter or other *Class Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n\r\n## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/quoted-characters.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/quoted-characters.md)\r\n-->\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.\r\n\r\n## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{,<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-most *n* times. Example: `a{,2}` matches ``, `a`, `aa`, but not `aaa`, `aaaa`, etc.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{,<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-most *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times without backtracking (redundant).\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{,<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-most *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]\r\n\r\n## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]\r\n\r\n## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/line-comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/line-comments.md)\r\n-->\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]\r\n\r\n## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?adlupimnsx-imnsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?adlupimnsx-imnsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n- `(?^alupimnsx)` - The `^` is a shorthand for `d-imnsx`. Flags other than `d` may follow the caret to override, but `-` is not permitted.\r\n- `(?^alupimnsx:…)` - The `^` is a shorthand for `d-imnsx`. Flags other than `d` may follow the caret to override, but `-` is not permitted.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]\r\n\r\n## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/branch-reset.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/branch-reset.md)\r\n-->\r\n\r\nA <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].\r\n\r\n## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- `(*pla:…)` &mdash; Positive Lookahead. Has the same behavior as `(?=…)`.\r\n- `(*positive_lookahead:…)` &mdash; Positive Lookahead. Has the same behavior as `(?=…)`.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n- `(*nla:…)` &mdash; Negative Lookahead. Has the same behavior as `(?!…)`.\r\n- `(*negative_lookahead:…)` &mdash; Negative Lookahead. Has the same behavior as `(?!…)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]\r\n\r\n## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- `(*plb:…)` &mdash; Positive Lookbehind. Has the same behavior as `(?<=…)`.\r\n- `(*positive_lookbehind:…)` &mdash; Positive Lookbehind. Has the same behavior as `(?<=…)`.\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- `(*nlb:…)` &mdash; Negative Lookbehind. Has the same behavior as `(?<!…)`.\r\n- `(*negative_lookbehind:…)` &mdash; Negative Lookbehind. Has the same behavior as `(?<!…)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]\r\n\r\n## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/non-backtracking-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/non-backtracking-expressions.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n- `(*atomic:…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n\r\n## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/recursion.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/recursion.md)\r\n-->\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.\r\n- <code>(?P><em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.\r\n\r\n## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?{<em>code</em>}…)</code> &mdash; Evaluates embedded Perl code whose result is either **true** or **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].\r\n\r\n## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/subroutines.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/subroutines.md)\r\n-->\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```\r\n\r\n## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/callouts.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/callouts.md)\r\n-->\r\n\r\nA <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/callouts.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?{<em>code</em>})</code> &mdash; - Zero-width assertion that executes embedded Perl code.\r\n- <code>(??{<em>code</em>})</code> &mdash; - Zero-width assertion that executes embedded Perl code. The return value of the embedded code is interpreted as a pattern to be matched at this position.\r\n\r\n## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/perl/features/backtracking-control-verbs.md)\r\n-->\r\n\r\nA <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/perl/features/backtracking-control-verbs.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\r\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\r\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\r\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\r\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\r\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\r\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: #feature-flags\r\n[Flag]: #feature-flags\r\n[RegExp Flags]: #feature-flags\r\n[RegExp Flag]: #feature-flags\r\n[Anchors]: #feature-anchors\r\n[Anchor]: #feature-anchors\r\n[Buffer Boundaries]: #feature-buffer-boundaries\r\n[Buffer Boundary]: #feature-buffer-boundaries\r\n[Word Boundaries]: #feature-word-boundaries\r\n[Word Boundary]: #feature-word-boundaries\r\n[Text Segment Boundaries]: #feature-text-segment-boundaries\r\n[Text Segment Boundary]: #feature-text-segment-boundaries\r\n[Continuation Escape]: #feature-continuation-escape\r\n[Alternatives]: #feature-alternatives\r\n[Alternative]: #feature-alternatives\r\n[Wildcard]: #feature-wildcard\r\n[Wildcards]: #feature-wildcard\r\n[Character Classes]: #feature-character-classes\r\n[Character Class]: #feature-character-classes\r\n[Posix Character Classes]: #feature-posix-character-classes\r\n[Posix Character Class]: #feature-posix-character-classes\r\n[Negated Posix Character Classes]: #feature-negated-posix-character-classes\r\n[Negated Posix Character Class]: #feature-negated-posix-character-classes\r\n[Collating Elements]: #feature-collating-elements\r\n[Collating Element]: #feature-collating-elements\r\n[Equivalence Classes]: #feature-equivalence-classes\r\n[Equivalence Class]: #feature-equivalence-classes\r\n[Character Class Escapes]: #feature-character-class-escapes\r\n[Character Class Escape]: #feature-character-class-escapes\r\n[Line Endings Escape]: #feature-line-endings-escape\r\n[Character Property Escapes]: #feature-character-property-escapes\r\n[Character Property Escape]: #feature-character-property-escapes\r\n[Character Class Nested Set]: #feature-character-class-nested-set\r\n[Character Class Nested Sets]: #feature-character-class-nested-set\r\n[Character Class Intersection]: #feature-character-class-intersection\r\n[Character Class Intersections]: #feature-character-class-intersection\r\n[Character Class Union]: #feature-character-class-union\r\n[Character Class Unions]: #feature-character-class-union\r\n[Character Class Subtraction]: #feature-character-class-subtraction\r\n[Character Class Symmetric Difference]: #feature-character-class-symmetric-difference\r\n[Character Class Symmetric Differences]: #feature-character-class-symmetric-difference\r\n[Character Class Complement]: #feature-character-class-complement\r\n[Character Class Complements]: #feature-character-class-complement\r\n[Quoted Characters]: #feature-quoted-characters\r\n[Quantifiers]: #feature-quantifiers\r\n[Quantifier]: #feature-quantifiers\r\n[Lazy Quantifiers]: #feature-lazy-quantifiers\r\n[Lazy Quantifier]: #feature-lazy-quantifiers\r\n[Possessive Quantifiers]: #feature-possessive-quantifiers\r\n[Possessive Quantifier]: #feature-possessive-quantifiers\r\n[Capturing Groups]: #feature-capturing-groups\r\n[Capturing Group]: #feature-capturing-groups\r\n[Capture Groups]: #feature-capturing-groups\r\n[Capture Group]: #feature-capturing-groups\r\n[Named Capturing Groups]: #feature-named-capturing-groups\r\n[Named Capturing Group]: #feature-named-capturing-groups\r\n[Named Capture Groups]: #feature-named-capturing-groups\r\n[Named Capture Group]: #feature-named-capturing-groups\r\n[Non-Capturing Groups]: #feature-non-capturing-groups\r\n[Non-Capturing group]: #feature-non-capturing-groups\r\n[Backreferences]: #feature-backreferences\r\n[Backreference]: #feature-backreferences\r\n[Comments]: #feature-comments\r\n[Comment]: #feature-comments\r\n[Line Comments]: #feature-line-comments\r\n[Line Comment]: #feature-line-comments\r\n[x-mode Comments]: #feature-line-comments\r\n[x-mode Comment]: #feature-line-comments\r\n[Modifiers]: #feature-modifiers\r\n[Modifier]: #feature-modifiers\r\n[Branch Reset]: #feature-branch-reset\r\n[Lookahead]: #feature-lookahead\r\n[Lookbehind]: #feature-lookbehind\r\n[Non-Backtracking Expressions]: #feature-non-backtracking-expressions\r\n[Non-Backtracking Expression]: #feature-non-backtracking-expressions\r\n[Recursion]: #feature-recursion\r\n[Recursive Expression]: #feature-recursion\r\n[Conditional Expressions]: #feature-conditional-expressions\r\n[Conditional Expression]: #feature-conditional-expressions\r\n[Subroutines]: #feature-subroutines\r\n[Subroutine]: #feature-subroutines\r\n[Callouts]: #feature-callouts\r\n[Callout]: #feature-callouts\r\n[Backtracking Control Verbs]: #feature-backtracking-control-verbs\r\n[Backtracking Control Verb]: #feature-backtracking-control-verbs\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: https://perldoc.perl.org/perlre\r\n\r\n[reference:Flags]: https://perldoc.perl.org/perlre#Modifiers\r\n[reference:Anchors]: https://perldoc.perl.org/perlre#Metacharacters\r\n[reference:Buffer Boundaries]: https://perldoc.perl.org/perlre#Assertions\r\n[reference:Word Boundaries]: https://perldoc.perl.org/perlre#Assertions\r\n[reference:Text Segment Boundaries]: #not-supported-features\r\n[reference:Continuation Escape]: https://perldoc.perl.org/perlre#Assertions\r\n[reference:Alternatives]: https://perldoc.perl.org/perlre#Metacharacters\r\n[reference:Wildcard]: https://perldoc.perl.org/perlre#Metacharacters\r\n[reference:Character Classes]: https://perldoc.perl.org/perlre#Character-Classes-and-other-Special-Escapes\r\n[reference:Posix Character Classes]: https://perldoc.perl.org/perlrecharclass#POSIX-Character-Classes\r\n[reference:Negated Posix Character Classes]: https://perldoc.perl.org/perlrecharclass#POSIX-Character-Classes\r\n[reference:Collating Elements]: #not-supported-features\r\n[reference:Equivalence Classes]: #not-supported-features\r\n[reference:Character Class Escapes]: https://perldoc.perl.org/perlre#Character-Classes-and-other-Special-Escapes\r\n[reference:Line Endings Escape]: https://perldoc.perl.org/perlre#Character-Classes-and-other-Special-Escapes\r\n[reference:Character Property Escapes]: https://perldoc.perl.org/perlre#Character-Classes-and-other-Special-Escapes\r\n[reference:Character Class Nested Set]: https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes\r\n[reference:Character Class Intersection]: https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes\r\n[reference:Character Class Union]: https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes\r\n[reference:Character Class Subtraction]: https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes\r\n[reference:Character Class Symmetric Difference]: https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes\r\n[reference:Character Class Complement]: https://perldoc.perl.org/perlrecharclass#Extended-Bracketed-Character-Classes\r\n[reference:Quoted Characters]: https://perldoc.perl.org/perlre#Escape-sequences\r\n[reference:Quantifiers]: https://perldoc.perl.org/perlre#Quantifiers\r\n[reference:Lazy Quantifiers]: https://perldoc.perl.org/perlre#Quantifiers\r\n[reference:Possessive Quantifiers]: https://perldoc.perl.org/perlre#Quantifiers\r\n[reference:Capturing Groups]: https://perldoc.perl.org/perlre#Capture-groups\r\n[reference:Named Capturing Groups]: https://perldoc.perl.org/perlre#Capture-groups\r\n[reference:Non-Capturing Groups]: https://perldoc.perl.org/perlre#Capture-groups\r\n[reference:Backreferences]: https://perldoc.perl.org/perlre#Capture-groups\r\n[reference:Comments]: https://perldoc.perl.org/perlre#Extended-Patterns\r\n[reference:Line Comments]: https://perldoc.perl.org/perlre#Metacharacters\r\n[reference:Modifiers]: https://perldoc.perl.org/perlre#Modifiers\r\n[reference:Branch Reset]: https://perldoc.perl.org/perlre#(?%7Cpattern)\r\n[reference:Lookahead]: https://perldoc.perl.org/perlre#Lookaround-Assertions\r\n[reference:Lookbehind]: https://perldoc.perl.org/perlre#Lookaround-Assertions\r\n[reference:Non-Backtracking Expressions]: https://perldoc.perl.org/perlre#(?%3Epattern)\r\n[reference:Recursion]: https://perldoc.perl.org/perlre#(?PARNO)-(?-PARNO)-(?+PARNO)-(?R)-(?0)\r\n[reference:Conditional Expressions]: https://perldoc.perl.org/perlre#(?(condition)yes-pattern%7Cno-pattern)\r\n[reference:Subroutines]: https://perldoc.perl.org/perlre#(?&amp;amp;NAME)\r\n[reference:Callouts]: https://perldoc.perl.org/perlre#(?%7B-code-%7D)\r\n[reference:Backtracking Control Verbs]: https://perldoc.perl.org/perlre#Special-Backtracking-Control-Verbs\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/perl/engine.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/engine-toc.yml"
      ],
      "referenceSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/perl/engine.md"
      ],
      "languagesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/perl/engine.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Engine",
      "id": "pcre",
      "engine": "pcre",
      "name": "PCRE",
      "built": true,
      "outFile": "engines/pcre.md",
      "priority": 1,
      "reference": "http://www.pcre.org/current/doc/html/pcre2pattern.html",
      "supported_features": [
        {
          "$ref": "#/features/0/engineFeatures/1"
        },
        {
          "$ref": "#/features/1/engineFeatures/1"
        },
        {
          "$ref": "#/features/2/engineFeatures/1"
        },
        {
          "$ref": "#/features/3/engineFeatures/1"
        },
        {
          "$ref": "#/features/5/engineFeatures/1"
        },
        {
          "$ref": "#/features/6/engineFeatures/1"
        },
        {
          "$ref": "#/features/7/engineFeatures/1"
        },
        {
          "$ref": "#/features/8/engineFeatures/1"
        },
        {
          "$ref": "#/features/9/engineFeatures/1"
        },
        {
          "$ref": "#/features/10/engineFeatures/1"
        },
        {
          "$ref": "#/features/13/engineFeatures/1"
        },
        {
          "$ref": "#/features/14/engineFeatures/1"
        },
        {
          "$ref": "#/features/15/engineFeatures/1"
        },
        {
          "$ref": "#/features/22/engineFeatures/1"
        },
        {
          "$ref": "#/features/23/engineFeatures/1"
        },
        {
          "$ref": "#/features/24/engineFeatures/1"
        },
        {
          "$ref": "#/features/25/engineFeatures/1"
        },
        {
          "$ref": "#/features/26/engineFeatures/1"
        },
        {
          "$ref": "#/features/27/engineFeatures/1"
        },
        {
          "$ref": "#/features/28/engineFeatures/1"
        },
        {
          "$ref": "#/features/29/engineFeatures/1"
        },
        {
          "$ref": "#/features/30/engineFeatures/1"
        },
        {
          "$ref": "#/features/31/engineFeatures/1"
        },
        {
          "$ref": "#/features/32/engineFeatures/1"
        },
        {
          "$ref": "#/features/33/engineFeatures/1"
        },
        {
          "$ref": "#/features/34/engineFeatures/1"
        },
        {
          "$ref": "#/features/35/engineFeatures/1"
        },
        {
          "$ref": "#/features/36/engineFeatures/1"
        },
        {
          "$ref": "#/features/37/engineFeatures/1"
        },
        {
          "$ref": "#/features/38/engineFeatures/1"
        },
        {
          "$ref": "#/features/39/engineFeatures/1"
        },
        {
          "$ref": "#/features/40/engineFeatures/1"
        },
        {
          "$ref": "#/features/41/engineFeatures/1"
        }
      ],
      "unsupported_features": [
        {
          "$ref": "#/features/4/engineFeatures/1"
        },
        {
          "$ref": "#/features/11/engineFeatures/1"
        },
        {
          "$ref": "#/features/12/engineFeatures/1"
        },
        {
          "$ref": "#/features/16/engineFeatures/1"
        },
        {
          "$ref": "#/features/17/engineFeatures/1"
        },
        {
          "$ref": "#/features/18/engineFeatures/1"
        },
        {
          "$ref": "#/features/19/engineFeatures/1"
        },
        {
          "$ref": "#/features/20/engineFeatures/1"
        },
        {
          "$ref": "#/features/21/engineFeatures/1"
        }
      ],
      "features": [
        {
          "$ref": "#/features/0/engineFeatures/1"
        },
        {
          "$ref": "#/features/1/engineFeatures/1"
        },
        {
          "$ref": "#/features/2/engineFeatures/1"
        },
        {
          "$ref": "#/features/3/engineFeatures/1"
        },
        {
          "$ref": "#/features/4/engineFeatures/1"
        },
        {
          "$ref": "#/features/5/engineFeatures/1"
        },
        {
          "$ref": "#/features/6/engineFeatures/1"
        },
        {
          "$ref": "#/features/7/engineFeatures/1"
        },
        {
          "$ref": "#/features/8/engineFeatures/1"
        },
        {
          "$ref": "#/features/9/engineFeatures/1"
        },
        {
          "$ref": "#/features/10/engineFeatures/1"
        },
        {
          "$ref": "#/features/11/engineFeatures/1"
        },
        {
          "$ref": "#/features/12/engineFeatures/1"
        },
        {
          "$ref": "#/features/13/engineFeatures/1"
        },
        {
          "$ref": "#/features/14/engineFeatures/1"
        },
        {
          "$ref": "#/features/15/engineFeatures/1"
        },
        {
          "$ref": "#/features/16/engineFeatures/1"
        },
        {
          "$ref": "#/features/17/engineFeatures/1"
        },
        {
          "$ref": "#/features/18/engineFeatures/1"
        },
        {
          "$ref": "#/features/19/engineFeatures/1"
        },
        {
          "$ref": "#/features/20/engineFeatures/1"
        },
        {
          "$ref": "#/features/21/engineFeatures/1"
        },
        {
          "$ref": "#/features/22/engineFeatures/1"
        },
        {
          "$ref": "#/features/23/engineFeatures/1"
        },
        {
          "$ref": "#/features/24/engineFeatures/1"
        },
        {
          "$ref": "#/features/25/engineFeatures/1"
        },
        {
          "$ref": "#/features/26/engineFeatures/1"
        },
        {
          "$ref": "#/features/27/engineFeatures/1"
        },
        {
          "$ref": "#/features/28/engineFeatures/1"
        },
        {
          "$ref": "#/features/29/engineFeatures/1"
        },
        {
          "$ref": "#/features/30/engineFeatures/1"
        },
        {
          "$ref": "#/features/31/engineFeatures/1"
        },
        {
          "$ref": "#/features/32/engineFeatures/1"
        },
        {
          "$ref": "#/features/33/engineFeatures/1"
        },
        {
          "$ref": "#/features/34/engineFeatures/1"
        },
        {
          "$ref": "#/features/35/engineFeatures/1"
        },
        {
          "$ref": "#/features/36/engineFeatures/1"
        },
        {
          "$ref": "#/features/37/engineFeatures/1"
        },
        {
          "$ref": "#/features/38/engineFeatures/1"
        },
        {
          "$ref": "#/features/39/engineFeatures/1"
        },
        {
          "$ref": "#/features/40/engineFeatures/1"
        },
        {
          "$ref": "#/features/41/engineFeatures/1"
        }
      ],
      "languages": [
        {
          "$ref": "#/languages/0"
        },
        {
          "$ref": "#/languages/1"
        }
      ],
      "content": "# Engine: PCRE <a id=\"top\"></a>\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Engines](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Reference]</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/engine.md \"source for: name, reference\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/engines/pcre/engine.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/engine.md)\r\n-->\r\n\r\n\r\n\r\n## Languages\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/engine.md \"source for: languages\")</sup>\r\n\r\n- [C]\r\n- [C++]\r\n\r\n## Features\r\n\r\n<a id=\"supported-features\"></a>The following features are supported:\r\n\r\n- ✔ [Flags]\r\n- ✔ [Anchors]\r\n- ✔ [Buffer Boundaries]\r\n- ✔ [Word Boundaries]\r\n- ✔ [Continuation Escape]\r\n- ✔ [Alternatives]\r\n- ✔ [Wildcard]\r\n- ✔ [Character Classes]\r\n- ✔ [Posix Character Classes]\r\n- ✔ [Negated Posix Character Classes]\r\n- ✔ [Character Class Escapes]\r\n- ✔ [Line Endings Escape]\r\n- ✔ [Character Property Escapes]\r\n- ✔ [Quoted Characters]\r\n- ✔ [Quantifiers]\r\n- ✔ [Lazy Quantifiers]\r\n- ✔ [Possessive Quantifiers]\r\n- ✔ [Capturing Groups]\r\n- ✔ [Named Capturing Groups]\r\n- ✔ [Non-Capturing Groups]\r\n- ✔ [Backreferences]\r\n- ✔ [Comments]\r\n- ✔ [Line Comments]\r\n- ✔ [Modifiers]\r\n- ✔ [Branch Reset]\r\n- ✔ [Lookahead]\r\n- ✔ [Lookbehind]\r\n- ✔ [Non-Backtracking Expressions]\r\n- ✔ [Recursion]\r\n- ✔ [Conditional Expressions]\r\n- ✔ [Subroutines]\r\n- ✔ [Callouts]\r\n- ✔ [Backtracking Control Verbs]\r\n\r\n<a id=\"not-supported-features\"></a>The following features are *not* supported:\r\n\r\n- ❌ [Text Segment Boundaries]\r\n- ❌ [Collating Elements]\r\n- ❌ [Equivalence Classes]\r\n- ❌ [Character Class Nested Set]\r\n- ❌ [Character Class Intersection]\r\n- ❌ [Character Class Union]\r\n- ❌ [Character Class Subtraction]\r\n- ❌ [Character Class Symmetric Difference]\r\n- ❌ [Character Class Complement]\r\n\r\n## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `n` &mdash; Explicit captures. Regular [Capturing Groups] are not captured, only [Named Capturing Groups] are captured.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n- `xx` &mdash; \"Extended More\" Mode. Same as `x` but unescaped spaces and horizontal tab characters are also ignored inside [character classes].\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]\r\n\r\n## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n- `[[:<:]]` &mdash; Matches the start of a word. Equivalent to: `\\b(?=\\w)`\r\n- `[[:>:]]` &mdash; Matches the end of a word. Equivalent to: `\\b(?<=\\w)`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n\r\n## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.\r\n\r\n## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/negated-posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/negated-posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\h` &mdash; Any horizontal whitespace character.\r\n- `\\H` &mdash; Any non-horizontal whitespace character.\r\n- `\\v` &mdash; Any vertical whitespace character.\r\n- `\\V` &mdash; Any non-vertical whitespace character.\r\n- `\\N` &mdash; Any character that is not a newline. Similar to `.`, but is not affected by the `s` [RegExp flag].\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-nested-set.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-intersection.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-subtraction.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n\r\n## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/quoted-characters.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/quoted-characters.md)\r\n-->\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.\r\n\r\n## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]\r\n\r\n## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?P&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n  - NOTE: If the *n* is > 8 it will instead be interpreted as an octal literal.\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g+<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{+<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>(?P=<em>name</em>)</code> &mdash; Matches the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]\r\n\r\n## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/line-comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/line-comments.md)\r\n-->\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line is removed from the pattern. Only supported when either the `x` (extended mode) or `xx` (extended more mode) [RegExp flags] are set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]\r\n\r\n## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imnsxx-imnsxx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imnsxx-imnsxx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n- `(?^)` - Unsets all [RegExp flags].\r\n- `(?^imnsxx)` - Unsets all [RegExp flags] and sets the requested flags.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]\r\n\r\n## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/branch-reset.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/branch-reset.md)\r\n-->\r\n\r\nA <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].\r\n\r\n## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]\r\n\r\n## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]\r\n\r\n## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/non-backtracking-expression.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/non-backtracking-expression.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n\r\n## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/recursion.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/recursion.md)\r\n-->\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.\r\n- <code>(?P><em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.\r\n\r\n## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>condition</em>|<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].\r\n- <code>(?(VERSION=<em>version</em>)…)</code> &mdash; Evaluates to **true** if the PCRE version is equal to supplied version; otherwise, evaluates to **false**.\r\n- <code>(?(VERSION&gt;=<em>version</em>)…)</code> &mdash; Evaluates to **true** if the PCRE version is greater than or equal to the supplied version; otherwise, evaluates to **false**.\r\n\r\n## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/subroutines.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/subroutines.md)\r\n-->\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern. These [capture groups] can optionally be placed in a\r\n[DEFINE condition].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>\\g&lt;<em>name</em>&gt;</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```\r\n\r\n## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/callouts.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/callouts.md)\r\n-->\r\n\r\nA <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/callouts.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?C)</code> &mdash; Invokes the user defined function with the argument `0`.\r\n- <code>(?C<em>n</em>)</code> &mdash; Where *n* is an integer. Invokes the user defined function with the argument *n*.\r\n- <code>(?C\\`<em>arg</em>\\`)</code> &mdash; Where *arg* is any character except `` ` ``. If an `` ` `` must be included it should be escaped by doubling it (i.e., ``` `` ```). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C'<em>arg</em>')</code> &mdash; Where *arg* is any character except `'`. If an `'` must be included it should be escaped by doubling it (i.e., `''`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C\"<em>arg</em>\")</code> &mdash; Where *arg* is any character except `\"`. If an `\"` must be included it should be escaped by doubling it (i.e., `\"\"`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C^<em>arg</em>^)</code> &mdash; Where *arg* is any character except `^`. If an `^` must be included it should be escaped by doubling it (i.e., `^^`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C%<em>arg</em>%)</code> &mdash; Where *arg* is any character except `%`. If an `%` must be included it should be escaped by doubling it (i.e., `%%`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C#<em>arg</em>#)</code> &mdash; Where *arg* is any character except `#`. If an `#` must be included it should be escaped by doubling it (i.e., `##`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C$<em>arg</em>$)</code> &mdash; Where *arg* is any character except `$`. If an `$` must be included it should be escaped by doubling it (i.e., `$$`). Invokes the user defined function with the argument *arg*.\r\n- <code>(?C{<em>arg</em>})</code> &mdash; Where *arg* is any character except `}`. If an `}` must be included it should be escaped by doubling it (i.e., `}}`). Invokes the user defined function with the argument *arg*.\r\n\r\n## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/pcre/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/pcre/features/backtracking-control-verbs.md)\r\n-->\r\n\r\nA <dfn>Backtracking Control Verb</dfn> is a special pattern usually in the form of <code>(*<em>VERB</em>)</code> or <code>(*<em>VERB</em>:<em>arg</em>)</code> that performs some special behavior with respect to backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(*PRUNE)`, <code>(*PRUNE:<em>name</em>)</code> &mdash; Prunes the backtracking tree.\n- `(*SKIP)`, <code>(*SKIP:<em>name</em>)</code> &mdash; Prunes the backtracking tree and preceding text cannot be part of any match of the pattern.\n- <code>(*MARK:<em>name</em>)</code>, <code>(*:<em>name</em>)</code> &mdash; Marks a point in the string where a certain part of the pattern has been matched.\n- `(*THEN)`, <code>(*THEN:<em>name</em>)</code> &mdash; When backtracked into on failure causes the engine to attempt the next alternative in the innermost enclosing group with alternatives.\n- `(*COMMIT)`, <code>(*COMMIT:<em>arg</em>)</code> &mdash; When backtracked into on failure causes the match to fail outright.\n- `(*FAIL)`, `(*F)`, <code>(*FAIL:<em>arg</em>)</code> &mdash; Matches nothing and always fails. Equivalent to `(?!)`.\n- `(*ACCEPT)`, <code>(*ACCEPT:<em>arg</em>)</code> &mdash; Causes the end of successful matching at the point where the verb was encountered.\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: #feature-flags\r\n[Flag]: #feature-flags\r\n[RegExp Flags]: #feature-flags\r\n[RegExp Flag]: #feature-flags\r\n[Anchors]: #feature-anchors\r\n[Anchor]: #feature-anchors\r\n[Buffer Boundaries]: #feature-buffer-boundaries\r\n[Buffer Boundary]: #feature-buffer-boundaries\r\n[Word Boundaries]: #feature-word-boundaries\r\n[Word Boundary]: #feature-word-boundaries\r\n[Text Segment Boundaries]: #feature-text-segment-boundaries\r\n[Text Segment Boundary]: #feature-text-segment-boundaries\r\n[Continuation Escape]: #feature-continuation-escape\r\n[Alternatives]: #feature-alternatives\r\n[Alternative]: #feature-alternatives\r\n[Wildcard]: #feature-wildcard\r\n[Wildcards]: #feature-wildcard\r\n[Character Classes]: #feature-character-classes\r\n[Character Class]: #feature-character-classes\r\n[Posix Character Classes]: #feature-posix-character-classes\r\n[Posix Character Class]: #feature-posix-character-classes\r\n[Negated Posix Character Classes]: #feature-negated-posix-character-classes\r\n[Negated Posix Character Class]: #feature-negated-posix-character-classes\r\n[Collating Elements]: #feature-collating-elements\r\n[Collating Element]: #feature-collating-elements\r\n[Equivalence Classes]: #feature-equivalence-classes\r\n[Equivalence Class]: #feature-equivalence-classes\r\n[Character Class Escapes]: #feature-character-class-escapes\r\n[Character Class Escape]: #feature-character-class-escapes\r\n[Line Endings Escape]: #feature-line-endings-escape\r\n[Character Property Escapes]: #feature-character-property-escapes\r\n[Character Property Escape]: #feature-character-property-escapes\r\n[Character Class Nested Set]: #feature-character-class-nested-set\r\n[Character Class Nested Sets]: #feature-character-class-nested-set\r\n[Character Class Intersection]: #feature-character-class-intersection\r\n[Character Class Intersections]: #feature-character-class-intersection\r\n[Character Class Union]: #feature-character-class-union\r\n[Character Class Unions]: #feature-character-class-union\r\n[Character Class Subtraction]: #feature-character-class-subtraction\r\n[Character Class Symmetric Difference]: #feature-character-class-symmetric-difference\r\n[Character Class Symmetric Differences]: #feature-character-class-symmetric-difference\r\n[Character Class Complement]: #feature-character-class-complement\r\n[Character Class Complements]: #feature-character-class-complement\r\n[Quoted Characters]: #feature-quoted-characters\r\n[Quantifiers]: #feature-quantifiers\r\n[Quantifier]: #feature-quantifiers\r\n[Lazy Quantifiers]: #feature-lazy-quantifiers\r\n[Lazy Quantifier]: #feature-lazy-quantifiers\r\n[Possessive Quantifiers]: #feature-possessive-quantifiers\r\n[Possessive Quantifier]: #feature-possessive-quantifiers\r\n[Capturing Groups]: #feature-capturing-groups\r\n[Capturing Group]: #feature-capturing-groups\r\n[Capture Groups]: #feature-capturing-groups\r\n[Capture Group]: #feature-capturing-groups\r\n[Named Capturing Groups]: #feature-named-capturing-groups\r\n[Named Capturing Group]: #feature-named-capturing-groups\r\n[Named Capture Groups]: #feature-named-capturing-groups\r\n[Named Capture Group]: #feature-named-capturing-groups\r\n[Non-Capturing Groups]: #feature-non-capturing-groups\r\n[Non-Capturing group]: #feature-non-capturing-groups\r\n[Backreferences]: #feature-backreferences\r\n[Backreference]: #feature-backreferences\r\n[Comments]: #feature-comments\r\n[Comment]: #feature-comments\r\n[Line Comments]: #feature-line-comments\r\n[Line Comment]: #feature-line-comments\r\n[x-mode Comments]: #feature-line-comments\r\n[x-mode Comment]: #feature-line-comments\r\n[Modifiers]: #feature-modifiers\r\n[Modifier]: #feature-modifiers\r\n[Branch Reset]: #feature-branch-reset\r\n[Lookahead]: #feature-lookahead\r\n[Lookbehind]: #feature-lookbehind\r\n[Non-Backtracking Expressions]: #feature-non-backtracking-expressions\r\n[Non-Backtracking Expression]: #feature-non-backtracking-expressions\r\n[Recursion]: #feature-recursion\r\n[Recursive Expression]: #feature-recursion\r\n[Conditional Expressions]: #feature-conditional-expressions\r\n[Conditional Expression]: #feature-conditional-expressions\r\n[Subroutines]: #feature-subroutines\r\n[Subroutine]: #feature-subroutines\r\n[Callouts]: #feature-callouts\r\n[Callout]: #feature-callouts\r\n[Backtracking Control Verbs]: #feature-backtracking-control-verbs\r\n[Backtracking Control Verb]: #feature-backtracking-control-verbs\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: http://www.pcre.org/current/doc/html/pcre2pattern.html\r\n\r\n[reference:Flags]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC13\r\n[reference:Anchors]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC6\r\n[reference:Buffer Boundaries]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC5\r\n[reference:Word Boundaries]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC5\r\n[reference:Text Segment Boundaries]: #not-supported-features\r\n[reference:Continuation Escape]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC5\r\n[reference:Alternatives]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC12\r\n[reference:Wildcard]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC7\r\n[reference:Character Classes]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC9\r\n[reference:Posix Character Classes]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC10\r\n[reference:Negated Posix Character Classes]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC10\r\n[reference:Collating Elements]: #not-supported-features\r\n[reference:Equivalence Classes]: #not-supported-features\r\n[reference:Character Class Escapes]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC9\r\n[reference:Line Endings Escape]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC2\r\n[reference:Character Property Escapes]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC9\r\n[reference:Character Class Nested Set]: #not-supported-features\r\n[reference:Character Class Intersection]: #not-supported-features\r\n[reference:Character Class Union]: #not-supported-features\r\n[reference:Character Class Subtraction]: #not-supported-features\r\n[reference:Character Class Symmetric Difference]: #not-supported-features\r\n[reference:Character Class Complement]: #not-supported-features\r\n[reference:Quoted Characters]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC5\r\n[reference:Quantifiers]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC17\r\n[reference:Lazy Quantifiers]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC17\r\n[reference:Possessive Quantifiers]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC18\r\n[reference:Capturing Groups]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC14\r\n[reference:Named Capturing Groups]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC16\r\n[reference:Non-Capturing Groups]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC14\r\n[reference:Backreferences]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC19\r\n[reference:Comments]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC24\r\n[reference:Line Comments]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC24\r\n[reference:Modifiers]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC13\r\n[reference:Branch Reset]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC15\r\n[reference:Lookahead]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC20\r\n[reference:Lookbehind]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC20\r\n[reference:Non-Backtracking Expressions]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC18\r\n[reference:Recursion]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC25\r\n[reference:Conditional Expressions]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC23\r\n[reference:Subroutines]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC26\r\n[reference:Callouts]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC28\r\n[reference:Backtracking Control Verbs]: http://www.pcre.org/current/doc/html/pcre2pattern.html#SEC29\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/engine.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/engine-toc.yml"
      ],
      "referenceSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/engine.md"
      ],
      "languagesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/pcre/engine.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Engine",
      "id": "boost.regex",
      "engine": "boost.regex",
      "name": "Boost.Regex",
      "built": true,
      "outFile": "engines/boost.regex.md",
      "priority": 2,
      "reference": "https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/index.html",
      "supported_features": [
        {
          "$ref": "#/features/0/engineFeatures/2"
        },
        {
          "$ref": "#/features/1/engineFeatures/2"
        },
        {
          "$ref": "#/features/2/engineFeatures/2"
        },
        {
          "$ref": "#/features/3/engineFeatures/2"
        },
        {
          "$ref": "#/features/5/engineFeatures/2"
        },
        {
          "$ref": "#/features/6/engineFeatures/2"
        },
        {
          "$ref": "#/features/7/engineFeatures/2"
        },
        {
          "$ref": "#/features/8/engineFeatures/2"
        },
        {
          "$ref": "#/features/9/engineFeatures/2"
        },
        {
          "$ref": "#/features/11/engineFeatures/2"
        },
        {
          "$ref": "#/features/12/engineFeatures/2"
        },
        {
          "$ref": "#/features/13/engineFeatures/2"
        },
        {
          "$ref": "#/features/14/engineFeatures/2"
        },
        {
          "$ref": "#/features/15/engineFeatures/2"
        },
        {
          "$ref": "#/features/22/engineFeatures/2"
        },
        {
          "$ref": "#/features/23/engineFeatures/2"
        },
        {
          "$ref": "#/features/24/engineFeatures/2"
        },
        {
          "$ref": "#/features/25/engineFeatures/2"
        },
        {
          "$ref": "#/features/26/engineFeatures/2"
        },
        {
          "$ref": "#/features/27/engineFeatures/2"
        },
        {
          "$ref": "#/features/28/engineFeatures/2"
        },
        {
          "$ref": "#/features/29/engineFeatures/2"
        },
        {
          "$ref": "#/features/30/engineFeatures/2"
        },
        {
          "$ref": "#/features/32/engineFeatures/2"
        },
        {
          "$ref": "#/features/33/engineFeatures/2"
        },
        {
          "$ref": "#/features/34/engineFeatures/2"
        },
        {
          "$ref": "#/features/35/engineFeatures/2"
        },
        {
          "$ref": "#/features/36/engineFeatures/2"
        },
        {
          "$ref": "#/features/37/engineFeatures/2"
        },
        {
          "$ref": "#/features/38/engineFeatures/2"
        },
        {
          "$ref": "#/features/39/engineFeatures/2"
        }
      ],
      "unsupported_features": [
        {
          "$ref": "#/features/4/engineFeatures/2"
        },
        {
          "$ref": "#/features/10/engineFeatures/2"
        },
        {
          "$ref": "#/features/16/engineFeatures/2"
        },
        {
          "$ref": "#/features/17/engineFeatures/2"
        },
        {
          "$ref": "#/features/18/engineFeatures/2"
        },
        {
          "$ref": "#/features/19/engineFeatures/2"
        },
        {
          "$ref": "#/features/20/engineFeatures/2"
        },
        {
          "$ref": "#/features/21/engineFeatures/2"
        },
        {
          "$ref": "#/features/31/engineFeatures/2"
        },
        {
          "$ref": "#/features/40/engineFeatures/2"
        },
        {
          "$ref": "#/features/41/engineFeatures/2"
        }
      ],
      "features": [
        {
          "$ref": "#/features/0/engineFeatures/2"
        },
        {
          "$ref": "#/features/1/engineFeatures/2"
        },
        {
          "$ref": "#/features/2/engineFeatures/2"
        },
        {
          "$ref": "#/features/3/engineFeatures/2"
        },
        {
          "$ref": "#/features/4/engineFeatures/2"
        },
        {
          "$ref": "#/features/5/engineFeatures/2"
        },
        {
          "$ref": "#/features/6/engineFeatures/2"
        },
        {
          "$ref": "#/features/7/engineFeatures/2"
        },
        {
          "$ref": "#/features/8/engineFeatures/2"
        },
        {
          "$ref": "#/features/9/engineFeatures/2"
        },
        {
          "$ref": "#/features/10/engineFeatures/2"
        },
        {
          "$ref": "#/features/11/engineFeatures/2"
        },
        {
          "$ref": "#/features/12/engineFeatures/2"
        },
        {
          "$ref": "#/features/13/engineFeatures/2"
        },
        {
          "$ref": "#/features/14/engineFeatures/2"
        },
        {
          "$ref": "#/features/15/engineFeatures/2"
        },
        {
          "$ref": "#/features/16/engineFeatures/2"
        },
        {
          "$ref": "#/features/17/engineFeatures/2"
        },
        {
          "$ref": "#/features/18/engineFeatures/2"
        },
        {
          "$ref": "#/features/19/engineFeatures/2"
        },
        {
          "$ref": "#/features/20/engineFeatures/2"
        },
        {
          "$ref": "#/features/21/engineFeatures/2"
        },
        {
          "$ref": "#/features/22/engineFeatures/2"
        },
        {
          "$ref": "#/features/23/engineFeatures/2"
        },
        {
          "$ref": "#/features/24/engineFeatures/2"
        },
        {
          "$ref": "#/features/25/engineFeatures/2"
        },
        {
          "$ref": "#/features/26/engineFeatures/2"
        },
        {
          "$ref": "#/features/27/engineFeatures/2"
        },
        {
          "$ref": "#/features/28/engineFeatures/2"
        },
        {
          "$ref": "#/features/29/engineFeatures/2"
        },
        {
          "$ref": "#/features/30/engineFeatures/2"
        },
        {
          "$ref": "#/features/31/engineFeatures/2"
        },
        {
          "$ref": "#/features/32/engineFeatures/2"
        },
        {
          "$ref": "#/features/33/engineFeatures/2"
        },
        {
          "$ref": "#/features/34/engineFeatures/2"
        },
        {
          "$ref": "#/features/35/engineFeatures/2"
        },
        {
          "$ref": "#/features/36/engineFeatures/2"
        },
        {
          "$ref": "#/features/37/engineFeatures/2"
        },
        {
          "$ref": "#/features/38/engineFeatures/2"
        },
        {
          "$ref": "#/features/39/engineFeatures/2"
        },
        {
          "$ref": "#/features/40/engineFeatures/2"
        },
        {
          "$ref": "#/features/41/engineFeatures/2"
        }
      ],
      "languages": [
        {
          "$ref": "#/languages/1"
        }
      ],
      "content": "# Engine: Boost.Regex <a id=\"top\"></a>\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Engines](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Reference]</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/engine.md \"source for: name, reference\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/engines/boost.regex/engine.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/engine.md)\r\n-->\r\n\r\n\r\n\r\n## Languages\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/engine.md \"source for: languages\")</sup>\r\n\r\n- [C++]\r\n\r\n## Features\r\n\r\n<a id=\"supported-features\"></a>The following features are supported:\r\n\r\n- ✔ [Flags]\r\n- ✔ [Anchors]\r\n- ✔ [Buffer Boundaries]\r\n- ✔ [Word Boundaries]\r\n- ✔ [Continuation Escape]\r\n- ✔ [Alternatives]\r\n- ✔ [Wildcard]\r\n- ✔ [Character Classes]\r\n- ✔ [Posix Character Classes]\r\n- ✔ [Collating Elements]\r\n- ✔ [Equivalence Classes]\r\n- ✔ [Character Class Escapes]\r\n- ✔ [Line Endings Escape]\r\n- ✔ [Character Property Escapes]\r\n- ✔ [Quoted Characters]\r\n- ✔ [Quantifiers]\r\n- ✔ [Lazy Quantifiers]\r\n- ✔ [Possessive Quantifiers]\r\n- ✔ [Capturing Groups]\r\n- ✔ [Named Capturing Groups]\r\n- ✔ [Non-Capturing Groups]\r\n- ✔ [Backreferences]\r\n- ✔ [Comments]\r\n- ✔ [Modifiers]\r\n- ✔ [Branch Reset]\r\n- ✔ [Lookahead]\r\n- ✔ [Lookbehind]\r\n- ✔ [Non-Backtracking Expressions]\r\n- ✔ [Recursion]\r\n- ✔ [Conditional Expressions]\r\n- ✔ [Subroutines]\r\n\r\n<a id=\"not-supported-features\"></a>The following features are *not* supported:\r\n\r\n- ❌ [Text Segment Boundaries]\r\n- ❌ [Negated Posix Character Classes]\r\n- ❌ [Character Class Nested Set]\r\n- ❌ [Character Class Intersection]\r\n- ❌ [Character Class Union]\r\n- ❌ [Character Class Subtraction]\r\n- ❌ [Character Class Symmetric Difference]\r\n- ❌ [Character Class Complement]\r\n- ❌ [Line Comments]\r\n- ❌ [Callouts]\r\n- ❌ [Backtracking Control Verbs]\r\n\r\n## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]\r\n\r\n## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `` \\` `` &mdash; Matches the start of the input.\r\n- `\\'` &mdash; Matches the end of the input.\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional sequence of newlines at the end of the buffer. Equivalent to `(?=\\n*\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `` \\` `` &mdash; Matches the start of the input.\r\n- `\\'` &mdash; Matches the end of the input.\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional sequence of newlines at the end of the buffer. Equivalent to `(?=\\n*\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n\r\n## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `|` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n> NOTE: In `Boost.Regex`, empty alternatives are not allowed, so `|abc` is invalid. You can specify an explicit empty alternative by using `(?:)`, for example: `(?:)|abc`.\r\n\r\n## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.\r\n\r\n## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/negated-posix-character-classes.md \"source for: supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/collating-elements.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/collating-elements.md)\r\n-->\r\n\r\nA <dfn>Collating Element</dfn> is one or more characters that collate as a single unit.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[.<em>col</em>.]]</code> &mdash; Matches the collating element *col* if *col* is treated as a single collating unit in the current locale. Example: `[[.ae.]-c]` matches a single character in the range \"ae\"-\"c\". *col* may also be specified by a symbolic name.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/equivalence-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/equivalence-classes.md)\r\n-->\r\n\r\nAn <dfn>Equivalence Class</dfn> matches any character or collating element with the same primary sort key as the provided collating element.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[=<em>col</em>=]]</code> &mdash; Matches any character with the same primary sort key as *col*. Example: `[[=a=]]` matches `a`, `À`, `Á`, `Â`, `Ã`, `Ä`, `Å`, `A`, `à`, `á`, `â`, etc.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\l` &mdash; Any lower-case character.\r\n- `\\L` &mdash; Any non-lower-case character.\r\n- `\\u` &mdash; Any upper-case character.\r\n- `\\U` &mdash; Any non-upper-case character.\r\n- `\\h` &mdash; Any horizontal whitespace character.\r\n- `\\H` &mdash; Any non-horizontal whitespace character.\r\n- `\\v` &mdash; Any vertical whitespace character.\r\n- `\\V` &mdash; Any non-vertical whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-nested-set.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-intersection.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-subtraction.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n\r\n## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/quoted-characters.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/quoted-characters.md)\r\n-->\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.\r\n\r\n## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]\r\n\r\n## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is in the range 1-9. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 0. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 0. Matches the *n*th previous [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]\r\n\r\n## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/line-comments.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]\r\n\r\n## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]\r\n\r\n## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/branch-reset.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/branch-reset.md)\r\n-->\r\n\r\nA <dfn>Branch Reset</dfn> resets the subexpression count at the start of each [Alternative] (`|`), which affects numbering for [Backreferences] and captured results returned from the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?|…)` &mdash; Resets the subexpression count at the start of each [Alternative].\r\n\r\n## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]\r\n\r\n## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]\r\n\r\n## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/non-backtracking-expression.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/non-backtracking-expression.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n\r\n## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/recursion.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/recursion.md)\r\n-->\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Re-evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Re-evaluates the [named capture group] with the provided *name*.\r\n\r\n## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].\r\n\r\n## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/subroutines.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/subroutines.md)\r\n-->\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```\r\n\r\n## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/boost.regex/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/boost.regex/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: #feature-flags\r\n[Flag]: #feature-flags\r\n[RegExp Flags]: #feature-flags\r\n[RegExp Flag]: #feature-flags\r\n[Anchors]: #feature-anchors\r\n[Anchor]: #feature-anchors\r\n[Buffer Boundaries]: #feature-buffer-boundaries\r\n[Buffer Boundary]: #feature-buffer-boundaries\r\n[Word Boundaries]: #feature-word-boundaries\r\n[Word Boundary]: #feature-word-boundaries\r\n[Text Segment Boundaries]: #feature-text-segment-boundaries\r\n[Text Segment Boundary]: #feature-text-segment-boundaries\r\n[Continuation Escape]: #feature-continuation-escape\r\n[Alternatives]: #feature-alternatives\r\n[Alternative]: #feature-alternatives\r\n[Wildcard]: #feature-wildcard\r\n[Wildcards]: #feature-wildcard\r\n[Character Classes]: #feature-character-classes\r\n[Character Class]: #feature-character-classes\r\n[Posix Character Classes]: #feature-posix-character-classes\r\n[Posix Character Class]: #feature-posix-character-classes\r\n[Negated Posix Character Classes]: #feature-negated-posix-character-classes\r\n[Negated Posix Character Class]: #feature-negated-posix-character-classes\r\n[Collating Elements]: #feature-collating-elements\r\n[Collating Element]: #feature-collating-elements\r\n[Equivalence Classes]: #feature-equivalence-classes\r\n[Equivalence Class]: #feature-equivalence-classes\r\n[Character Class Escapes]: #feature-character-class-escapes\r\n[Character Class Escape]: #feature-character-class-escapes\r\n[Line Endings Escape]: #feature-line-endings-escape\r\n[Character Property Escapes]: #feature-character-property-escapes\r\n[Character Property Escape]: #feature-character-property-escapes\r\n[Character Class Nested Set]: #feature-character-class-nested-set\r\n[Character Class Nested Sets]: #feature-character-class-nested-set\r\n[Character Class Intersection]: #feature-character-class-intersection\r\n[Character Class Intersections]: #feature-character-class-intersection\r\n[Character Class Union]: #feature-character-class-union\r\n[Character Class Unions]: #feature-character-class-union\r\n[Character Class Subtraction]: #feature-character-class-subtraction\r\n[Character Class Symmetric Difference]: #feature-character-class-symmetric-difference\r\n[Character Class Symmetric Differences]: #feature-character-class-symmetric-difference\r\n[Character Class Complement]: #feature-character-class-complement\r\n[Character Class Complements]: #feature-character-class-complement\r\n[Quoted Characters]: #feature-quoted-characters\r\n[Quantifiers]: #feature-quantifiers\r\n[Quantifier]: #feature-quantifiers\r\n[Lazy Quantifiers]: #feature-lazy-quantifiers\r\n[Lazy Quantifier]: #feature-lazy-quantifiers\r\n[Possessive Quantifiers]: #feature-possessive-quantifiers\r\n[Possessive Quantifier]: #feature-possessive-quantifiers\r\n[Capturing Groups]: #feature-capturing-groups\r\n[Capturing Group]: #feature-capturing-groups\r\n[Capture Groups]: #feature-capturing-groups\r\n[Capture Group]: #feature-capturing-groups\r\n[Named Capturing Groups]: #feature-named-capturing-groups\r\n[Named Capturing Group]: #feature-named-capturing-groups\r\n[Named Capture Groups]: #feature-named-capturing-groups\r\n[Named Capture Group]: #feature-named-capturing-groups\r\n[Non-Capturing Groups]: #feature-non-capturing-groups\r\n[Non-Capturing group]: #feature-non-capturing-groups\r\n[Backreferences]: #feature-backreferences\r\n[Backreference]: #feature-backreferences\r\n[Comments]: #feature-comments\r\n[Comment]: #feature-comments\r\n[Line Comments]: #feature-line-comments\r\n[Line Comment]: #feature-line-comments\r\n[x-mode Comments]: #feature-line-comments\r\n[x-mode Comment]: #feature-line-comments\r\n[Modifiers]: #feature-modifiers\r\n[Modifier]: #feature-modifiers\r\n[Branch Reset]: #feature-branch-reset\r\n[Lookahead]: #feature-lookahead\r\n[Lookbehind]: #feature-lookbehind\r\n[Non-Backtracking Expressions]: #feature-non-backtracking-expressions\r\n[Non-Backtracking Expression]: #feature-non-backtracking-expressions\r\n[Recursion]: #feature-recursion\r\n[Recursive Expression]: #feature-recursion\r\n[Conditional Expressions]: #feature-conditional-expressions\r\n[Conditional Expression]: #feature-conditional-expressions\r\n[Subroutines]: #feature-subroutines\r\n[Subroutine]: #feature-subroutines\r\n[Callouts]: #feature-callouts\r\n[Callout]: #feature-callouts\r\n[Backtracking Control Verbs]: #feature-backtracking-control-verbs\r\n[Backtracking Control Verb]: #feature-backtracking-control-verbs\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/index.html\r\n\r\n[reference:Flags]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.modifiers\r\n[reference:Anchors]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.anchors\r\n[reference:Buffer Boundaries]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.buffer_boundaries\r\n[reference:Word Boundaries]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.word_boundaries\r\n[reference:Text Segment Boundaries]: #not-supported-features\r\n[reference:Continuation Escape]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.continuation_escape\r\n[reference:Alternatives]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.alternation\r\n[reference:Wildcard]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.wildcard\r\n[reference:Character Classes]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.character_sets\r\n[reference:Posix Character Classes]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.character_classes\r\n[reference:Negated Posix Character Classes]: #not-supported-features\r\n[reference:Collating Elements]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.collating_elements\r\n[reference:Equivalence Classes]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.equivalence_classes\r\n[reference:Character Class Escapes]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.single_character_character_class\r\n[reference:Line Endings Escape]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.matching_line_endings\r\n[reference:Character Property Escapes]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.character_properties\r\n[reference:Character Class Nested Set]: #not-supported-features\r\n[reference:Character Class Intersection]: #not-supported-features\r\n[reference:Character Class Union]: #not-supported-features\r\n[reference:Character Class Subtraction]: #not-supported-features\r\n[reference:Character Class Symmetric Difference]: #not-supported-features\r\n[reference:Character Class Complement]: #not-supported-features\r\n[reference:Quoted Characters]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.quoting_escape\r\n[reference:Quantifiers]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.repeats\r\n[reference:Lazy Quantifiers]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.non_greedy_repeats\r\n[reference:Possessive Quantifiers]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.possessive_repeats\r\n[reference:Capturing Groups]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.marked_sub_expressions\r\n[reference:Named Capturing Groups]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.named_subexpressions\r\n[reference:Non-Capturing Groups]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.non_marking_grouping\r\n[reference:Backreferences]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.back_references\r\n[reference:Comments]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.comments\r\n[reference:Line Comments]: #not-supported-features\r\n[reference:Modifiers]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.modifiers\r\n[reference:Branch Reset]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.branch_reset\r\n[reference:Lookahead]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.lookahead\r\n[reference:Lookbehind]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.lookbehind\r\n[reference:Non-Backtracking Expressions]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.independent_sub_expressions\r\n[reference:Recursion]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.recursive_expressions\r\n[reference:Conditional Expressions]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.conditional_expressions\r\n[reference:Subroutines]: https://www.boost.org/doc/libs/1_76_0/libs/regex/doc/html/boost_regex/syntax/perl_syntax.html#boost_regex.syntax.perl_syntax.recursive_expressions\r\n[reference:Callouts]: #not-supported-features\r\n[reference:Backtracking Control Verbs]: #not-supported-features\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/engine.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/engine-toc.yml"
      ],
      "referenceSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/engine.md"
      ],
      "languagesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/boost.regex/engine.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Engine",
      "id": "dotnet",
      "engine": "dotnet",
      "name": ".NET",
      "built": true,
      "outFile": "engines/dotnet.md",
      "priority": 3,
      "reference": "http://msdn2.microsoft.com/en-us/library/system.text.regularexpressions.aspx",
      "supported_features": [
        {
          "$ref": "#/features/0/engineFeatures/3"
        },
        {
          "$ref": "#/features/1/engineFeatures/3"
        },
        {
          "$ref": "#/features/2/engineFeatures/3"
        },
        {
          "$ref": "#/features/3/engineFeatures/3"
        },
        {
          "$ref": "#/features/5/engineFeatures/3"
        },
        {
          "$ref": "#/features/6/engineFeatures/3"
        },
        {
          "$ref": "#/features/7/engineFeatures/3"
        },
        {
          "$ref": "#/features/8/engineFeatures/3"
        },
        {
          "$ref": "#/features/13/engineFeatures/3"
        },
        {
          "$ref": "#/features/15/engineFeatures/3"
        },
        {
          "$ref": "#/features/19/engineFeatures/3"
        },
        {
          "$ref": "#/features/23/engineFeatures/3"
        },
        {
          "$ref": "#/features/24/engineFeatures/3"
        },
        {
          "$ref": "#/features/26/engineFeatures/3"
        },
        {
          "$ref": "#/features/27/engineFeatures/3"
        },
        {
          "$ref": "#/features/28/engineFeatures/3"
        },
        {
          "$ref": "#/features/29/engineFeatures/3"
        },
        {
          "$ref": "#/features/30/engineFeatures/3"
        },
        {
          "$ref": "#/features/31/engineFeatures/3"
        },
        {
          "$ref": "#/features/32/engineFeatures/3"
        },
        {
          "$ref": "#/features/34/engineFeatures/3"
        },
        {
          "$ref": "#/features/35/engineFeatures/3"
        },
        {
          "$ref": "#/features/36/engineFeatures/3"
        },
        {
          "$ref": "#/features/37/engineFeatures/3"
        },
        {
          "$ref": "#/features/38/engineFeatures/3"
        }
      ],
      "unsupported_features": [
        {
          "$ref": "#/features/4/engineFeatures/3"
        },
        {
          "$ref": "#/features/9/engineFeatures/3"
        },
        {
          "$ref": "#/features/10/engineFeatures/3"
        },
        {
          "$ref": "#/features/11/engineFeatures/3"
        },
        {
          "$ref": "#/features/12/engineFeatures/3"
        },
        {
          "$ref": "#/features/14/engineFeatures/3"
        },
        {
          "$ref": "#/features/16/engineFeatures/3"
        },
        {
          "$ref": "#/features/17/engineFeatures/3"
        },
        {
          "$ref": "#/features/18/engineFeatures/3"
        },
        {
          "$ref": "#/features/20/engineFeatures/3"
        },
        {
          "$ref": "#/features/21/engineFeatures/3"
        },
        {
          "$ref": "#/features/22/engineFeatures/3"
        },
        {
          "$ref": "#/features/25/engineFeatures/3"
        },
        {
          "$ref": "#/features/33/engineFeatures/3"
        },
        {
          "$ref": "#/features/39/engineFeatures/3"
        },
        {
          "$ref": "#/features/40/engineFeatures/3"
        },
        {
          "$ref": "#/features/41/engineFeatures/3"
        }
      ],
      "features": [
        {
          "$ref": "#/features/0/engineFeatures/3"
        },
        {
          "$ref": "#/features/1/engineFeatures/3"
        },
        {
          "$ref": "#/features/2/engineFeatures/3"
        },
        {
          "$ref": "#/features/3/engineFeatures/3"
        },
        {
          "$ref": "#/features/4/engineFeatures/3"
        },
        {
          "$ref": "#/features/5/engineFeatures/3"
        },
        {
          "$ref": "#/features/6/engineFeatures/3"
        },
        {
          "$ref": "#/features/7/engineFeatures/3"
        },
        {
          "$ref": "#/features/8/engineFeatures/3"
        },
        {
          "$ref": "#/features/9/engineFeatures/3"
        },
        {
          "$ref": "#/features/10/engineFeatures/3"
        },
        {
          "$ref": "#/features/11/engineFeatures/3"
        },
        {
          "$ref": "#/features/12/engineFeatures/3"
        },
        {
          "$ref": "#/features/13/engineFeatures/3"
        },
        {
          "$ref": "#/features/14/engineFeatures/3"
        },
        {
          "$ref": "#/features/15/engineFeatures/3"
        },
        {
          "$ref": "#/features/16/engineFeatures/3"
        },
        {
          "$ref": "#/features/17/engineFeatures/3"
        },
        {
          "$ref": "#/features/18/engineFeatures/3"
        },
        {
          "$ref": "#/features/19/engineFeatures/3"
        },
        {
          "$ref": "#/features/20/engineFeatures/3"
        },
        {
          "$ref": "#/features/21/engineFeatures/3"
        },
        {
          "$ref": "#/features/22/engineFeatures/3"
        },
        {
          "$ref": "#/features/23/engineFeatures/3"
        },
        {
          "$ref": "#/features/24/engineFeatures/3"
        },
        {
          "$ref": "#/features/25/engineFeatures/3"
        },
        {
          "$ref": "#/features/26/engineFeatures/3"
        },
        {
          "$ref": "#/features/27/engineFeatures/3"
        },
        {
          "$ref": "#/features/28/engineFeatures/3"
        },
        {
          "$ref": "#/features/29/engineFeatures/3"
        },
        {
          "$ref": "#/features/30/engineFeatures/3"
        },
        {
          "$ref": "#/features/31/engineFeatures/3"
        },
        {
          "$ref": "#/features/32/engineFeatures/3"
        },
        {
          "$ref": "#/features/33/engineFeatures/3"
        },
        {
          "$ref": "#/features/34/engineFeatures/3"
        },
        {
          "$ref": "#/features/35/engineFeatures/3"
        },
        {
          "$ref": "#/features/36/engineFeatures/3"
        },
        {
          "$ref": "#/features/37/engineFeatures/3"
        },
        {
          "$ref": "#/features/38/engineFeatures/3"
        },
        {
          "$ref": "#/features/39/engineFeatures/3"
        },
        {
          "$ref": "#/features/40/engineFeatures/3"
        },
        {
          "$ref": "#/features/41/engineFeatures/3"
        }
      ],
      "languages": [
        {
          "$ref": "#/languages/2"
        },
        {
          "$ref": "#/languages/5"
        },
        {
          "$ref": "#/languages/16"
        }
      ],
      "content": "# Engine: .NET <a id=\"top\"></a>\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Engines](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Reference]</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/engine.md \"source for: name, reference\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/engines/dotnet/engine.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/engine.md)\r\n-->\r\n\r\n\r\n\r\n## Languages\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/engine.md \"source for: languages\")</sup>\r\n\r\n- [C#]\r\n- [F#]\r\n- [VB.net]\r\n\r\n## Features\r\n\r\n<a id=\"supported-features\"></a>The following features are supported:\r\n\r\n- ✔ [Flags]\r\n- ✔ [Anchors]\r\n- ✔ [Buffer Boundaries]\r\n- ✔ [Word Boundaries]\r\n- ✔ [Continuation Escape]\r\n- ✔ [Alternatives]\r\n- ✔ [Wildcard]\r\n- ✔ [Character Classes]\r\n- ✔ [Character Class Escapes]\r\n- ✔ [Character Property Escapes]\r\n- ✔ [Character Class Subtraction]\r\n- ✔ [Quantifiers]\r\n- ✔ [Lazy Quantifiers]\r\n- ✔ [Capturing Groups]\r\n- ✔ [Named Capturing Groups]\r\n- ✔ [Non-Capturing Groups]\r\n- ✔ [Backreferences]\r\n- ✔ [Comments]\r\n- ✔ [Line Comments]\r\n- ✔ [Modifiers]\r\n- ✔ [Lookahead]\r\n- ✔ [Lookbehind]\r\n- ✔ [Non-Backtracking Expressions]\r\n- ✔ [Recursion]\r\n- ✔ [Conditional Expressions]\r\n\r\n<a id=\"not-supported-features\"></a>The following features are *not* supported:\r\n\r\n- ❌ [Text Segment Boundaries]\r\n- ❌ [Posix Character Classes]\r\n- ❌ [Negated Posix Character Classes]\r\n- ❌ [Collating Elements]\r\n- ❌ [Equivalence Classes]\r\n- ❌ [Line Endings Escape]\r\n- ❌ [Character Class Nested Set]\r\n- ❌ [Character Class Intersection]\r\n- ❌ [Character Class Union]\r\n- ❌ [Character Class Symmetric Difference]\r\n- ❌ [Character Class Complement]\r\n- ❌ [Quoted Characters]\r\n- ❌ [Possessive Quantifiers]\r\n- ❌ [Branch Reset]\r\n- ❌ [Subroutines]\r\n- ❌ [Callouts]\r\n- ❌ [Backtracking Control Verbs]\r\n\r\n## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `n` &mdash; Explicit captures. Regular [Capturing Groups] are not captured, only [Named Capturing Groups] are captured.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space). Allows `x`-mode [comments].\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]\r\n\r\n## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n\r\n## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.\r\n\r\n## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/posix-character-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/negated-posix-character-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/line-endings-escape.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined unicode property name. Matches a character that has the unicode property *name*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined unicode property name. Matches a character that does not have the unicode property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-nested-set.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-intersection.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-subtraction.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-class-subtraction.md)\r\n-->\r\n\r\n<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n\r\n## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/quoted-characters.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/possessive-quantifiers.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]\r\n\r\n## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]\r\n\r\n## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/line-comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/line-comments.md)\r\n-->\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]\r\n\r\n## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imnsx-imnsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imnsx-imnsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]\r\n\r\n## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]\r\n\r\n## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]\r\n\r\n## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/non-backtracking-expression.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/non-backtracking-expression.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n\r\n## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/recursion.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/recursion.md)\r\n-->\r\n\r\n.NET's `Regex` class supports limited recursion through balancing groups. A <dfn>Balancing Group</dfn> uses the name of a previously defined [named capture group] as a stack, storing the interval between the current position and the last instance of the [named capture group] in the current name. You can then use a [conditional expression] to fail the matching algorithm if the previously defined [named capture group]'s stack is not empty when the match completes.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name1</em>-<em>name1</em>&gt;…)</code> &mdash; Where *name1* as the current group name and *name2* is a previously defined group. Stores\r\n  the interval between *name2* and the current position in *name1* and deletes *name2*. Deleting *name2* reveals the previous definition of \r\n  *name2* allowing it to be used as a stack for captures.\r\n- <code>(?&lt;-<em>name2</em>&gt;…)</code> &mdash; Where *name2* is a previously defined group. Stores the interval between *name2* and the \r\n  current position as the current capture and deletes *name2*. Deleting *name2* reveals the previous definition of  *name2* allowing \r\n  it to be used as a stack for captures.\r\n- <code>(?'<em>name1</em>-<em>name1</em>'…)</code> &mdash; Where *name1* as the current group name and *name2* is a previously defined group. Stores\r\n  the interval between *name2* and the current position in *name1* and deletes *name2*. Deleting *name2* reveals the previous definition of \r\n  *name2* allowing it to be used as a stack for captures.\r\n- <code>(?'-<em>name2</em>'…)</code> &mdash; Where *name2* is a previously defined group. Stores the interval between *name2* and the \r\n  current position as the current capture and deletes *name2*. Deleting *name2* reveals the previous definition of  *name2* allowing \r\n  it to be used as a stack for captures.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/recursion.md \"source for: example\")</sup>\r\n\r\n\r\nThe following shows an example of matching balanced `<` and `>` brackets (assuming `x` mode for a multiline regular expression):\r\n```re\r\n^                               # matches the beginning of the input\r\n\r\n[^<>]*                          # matches any number of non <> characters\r\n(\r\n    ((?'Open'<)[^<>]*)+         # matches an opening < followed by any number of non <> characters\r\n\r\n    ((?'Close-Open'>)[^<>]*)+   # matches a closing > followed by any number of non <> characters,\r\n                                # deleting the last match for 'Open'\r\n\r\n)*                              # matches the preceding expression zero or more times.\r\n\r\n(?(Open)(?!))                   # condition that fails the match if there are any remaining 'Open' matches\r\n\r\n$                               # matches the end of the input\r\n```\r\n\r\nOn a single line, the expression looks like this:\r\n```re\r\n^[^<>]*(((?'Open'<)[^<>]*)+((?'Close-Open'>)[^<>]*)+)*(?(Open)(?!))$\r\n```\r\n\r\n## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>condition</em>|<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**. If *n* does not correspond to a [capture group], an error is thrown.\r\n- <code>(?(<em>name</em>)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**. If *name* does not correspond to a [named capture group], *name* is interpeted as a [lookahead] pattern.\r\n- <code>(?(<em>test-pattern</em>)…)</code> &mdash; Evaluates to <em>test-pattern</em>true<em>test-pattern</em> if a [lookahead] for <em>test-pattern</em> matches; Otherwise, evaluates to <em>test-pattern</em>false<em>test-pattern</em>. Equivalent to: <code>(?(?=<em>test-pattern</em>)…)</code>.\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?<=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookbehind] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?<!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookbehind] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n\r\n## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/subroutines.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/dotnet/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/dotnet/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: #feature-flags\r\n[Flag]: #feature-flags\r\n[RegExp Flags]: #feature-flags\r\n[RegExp Flag]: #feature-flags\r\n[Anchors]: #feature-anchors\r\n[Anchor]: #feature-anchors\r\n[Buffer Boundaries]: #feature-buffer-boundaries\r\n[Buffer Boundary]: #feature-buffer-boundaries\r\n[Word Boundaries]: #feature-word-boundaries\r\n[Word Boundary]: #feature-word-boundaries\r\n[Text Segment Boundaries]: #feature-text-segment-boundaries\r\n[Text Segment Boundary]: #feature-text-segment-boundaries\r\n[Continuation Escape]: #feature-continuation-escape\r\n[Alternatives]: #feature-alternatives\r\n[Alternative]: #feature-alternatives\r\n[Wildcard]: #feature-wildcard\r\n[Wildcards]: #feature-wildcard\r\n[Character Classes]: #feature-character-classes\r\n[Character Class]: #feature-character-classes\r\n[Posix Character Classes]: #feature-posix-character-classes\r\n[Posix Character Class]: #feature-posix-character-classes\r\n[Negated Posix Character Classes]: #feature-negated-posix-character-classes\r\n[Negated Posix Character Class]: #feature-negated-posix-character-classes\r\n[Collating Elements]: #feature-collating-elements\r\n[Collating Element]: #feature-collating-elements\r\n[Equivalence Classes]: #feature-equivalence-classes\r\n[Equivalence Class]: #feature-equivalence-classes\r\n[Character Class Escapes]: #feature-character-class-escapes\r\n[Character Class Escape]: #feature-character-class-escapes\r\n[Line Endings Escape]: #feature-line-endings-escape\r\n[Character Property Escapes]: #feature-character-property-escapes\r\n[Character Property Escape]: #feature-character-property-escapes\r\n[Character Class Nested Set]: #feature-character-class-nested-set\r\n[Character Class Nested Sets]: #feature-character-class-nested-set\r\n[Character Class Intersection]: #feature-character-class-intersection\r\n[Character Class Intersections]: #feature-character-class-intersection\r\n[Character Class Union]: #feature-character-class-union\r\n[Character Class Unions]: #feature-character-class-union\r\n[Character Class Subtraction]: #feature-character-class-subtraction\r\n[Character Class Symmetric Difference]: #feature-character-class-symmetric-difference\r\n[Character Class Symmetric Differences]: #feature-character-class-symmetric-difference\r\n[Character Class Complement]: #feature-character-class-complement\r\n[Character Class Complements]: #feature-character-class-complement\r\n[Quoted Characters]: #feature-quoted-characters\r\n[Quantifiers]: #feature-quantifiers\r\n[Quantifier]: #feature-quantifiers\r\n[Lazy Quantifiers]: #feature-lazy-quantifiers\r\n[Lazy Quantifier]: #feature-lazy-quantifiers\r\n[Possessive Quantifiers]: #feature-possessive-quantifiers\r\n[Possessive Quantifier]: #feature-possessive-quantifiers\r\n[Capturing Groups]: #feature-capturing-groups\r\n[Capturing Group]: #feature-capturing-groups\r\n[Capture Groups]: #feature-capturing-groups\r\n[Capture Group]: #feature-capturing-groups\r\n[Named Capturing Groups]: #feature-named-capturing-groups\r\n[Named Capturing Group]: #feature-named-capturing-groups\r\n[Named Capture Groups]: #feature-named-capturing-groups\r\n[Named Capture Group]: #feature-named-capturing-groups\r\n[Non-Capturing Groups]: #feature-non-capturing-groups\r\n[Non-Capturing group]: #feature-non-capturing-groups\r\n[Backreferences]: #feature-backreferences\r\n[Backreference]: #feature-backreferences\r\n[Comments]: #feature-comments\r\n[Comment]: #feature-comments\r\n[Line Comments]: #feature-line-comments\r\n[Line Comment]: #feature-line-comments\r\n[x-mode Comments]: #feature-line-comments\r\n[x-mode Comment]: #feature-line-comments\r\n[Modifiers]: #feature-modifiers\r\n[Modifier]: #feature-modifiers\r\n[Branch Reset]: #feature-branch-reset\r\n[Lookahead]: #feature-lookahead\r\n[Lookbehind]: #feature-lookbehind\r\n[Non-Backtracking Expressions]: #feature-non-backtracking-expressions\r\n[Non-Backtracking Expression]: #feature-non-backtracking-expressions\r\n[Recursion]: #feature-recursion\r\n[Recursive Expression]: #feature-recursion\r\n[Conditional Expressions]: #feature-conditional-expressions\r\n[Conditional Expression]: #feature-conditional-expressions\r\n[Subroutines]: #feature-subroutines\r\n[Subroutine]: #feature-subroutines\r\n[Callouts]: #feature-callouts\r\n[Callout]: #feature-callouts\r\n[Backtracking Control Verbs]: #feature-backtracking-control-verbs\r\n[Backtracking Control Verb]: #feature-backtracking-control-verbs\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: http://msdn2.microsoft.com/en-us/library/system.text.regularexpressions.aspx\r\n\r\n[reference:Flags]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-options\r\n[reference:Anchors]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/anchors-in-regular-expressions\r\n[reference:Buffer Boundaries]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/anchors-in-regular-expressions\r\n[reference:Word Boundaries]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/anchors-in-regular-expressions\r\n[reference:Text Segment Boundaries]: #not-supported-features\r\n[reference:Continuation Escape]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/anchors-in-regular-expressions\r\n[reference:Alternatives]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/alternation-constructs-in-regular-expressions#Either_Or\r\n[reference:Wildcard]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions#any-character-\r\n[reference:Character Classes]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions\r\n[reference:Posix Character Classes]: #not-supported-features\r\n[reference:Negated Posix Character Classes]: #not-supported-features\r\n[reference:Collating Elements]: #not-supported-features\r\n[reference:Equivalence Classes]: #not-supported-features\r\n[reference:Character Class Escapes]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions#word-character-w\r\n[reference:Line Endings Escape]: #not-supported-features\r\n[reference:Character Property Escapes]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions#unicode-category-or-unicode-block-p\r\n[reference:Character Class Nested Set]: #not-supported-features\r\n[reference:Character Class Intersection]: #not-supported-features\r\n[reference:Character Class Union]: #not-supported-features\r\n[reference:Character Class Subtraction]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/character-classes-in-regular-expressions#character-class-subtraction-base_group---excluded_group\r\n[reference:Character Class Symmetric Difference]: #not-supported-features\r\n[reference:Character Class Complement]: #not-supported-features\r\n[reference:Quoted Characters]: #not-supported-features\r\n[reference:Quantifiers]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/quantifiers-in-regular-expressions\r\n[reference:Lazy Quantifiers]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/quantifiers-in-regular-expressions#greedy-and-lazy-quantifiers\r\n[reference:Possessive Quantifiers]: #not-supported-features\r\n[reference:Capturing Groups]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#matched_subexpression\r\n[reference:Named Capturing Groups]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#named-matched-subexpressions\r\n[reference:Non-Capturing Groups]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#noncapturing-groups\r\n[reference:Backreferences]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/backreference-constructs-in-regular-expressions\r\n[reference:Comments]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/miscellaneous-constructs-in-regular-expressions#inline-comment\r\n[reference:Line Comments]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/miscellaneous-constructs-in-regular-expressions#end-of-line-comment\r\n[reference:Modifiers]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/miscellaneous-constructs-in-regular-expressions#inline-options\r\n[reference:Branch Reset]: #not-supported-features\r\n[reference:Lookahead]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#zero-width-positive-lookahead-assertions\r\n[reference:Lookbehind]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#zero-width-positive-lookbehind-assertions\r\n[reference:Non-Backtracking Expressions]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#atomic-groups\r\n[reference:Recursion]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/grouping-constructs-in-regular-expressions#balancing-group-definitions\r\n[reference:Conditional Expressions]: https://docs.microsoft.com/en-us/dotnet/standard/base-types/alternation-constructs-in-regular-expressions#Conditional_Expr\r\n[reference:Subroutines]: #not-supported-features\r\n[reference:Callouts]: #not-supported-features\r\n[reference:Backtracking Control Verbs]: #not-supported-features\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/engine.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/engine-toc.yml"
      ],
      "referenceSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/engine.md"
      ],
      "languagesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/dotnet/engine.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Engine",
      "id": "oniguruma",
      "engine": "oniguruma",
      "name": "Oniguruma",
      "built": true,
      "outFile": "engines/oniguruma.md",
      "priority": 4,
      "reference": "https://github.com/kkos/oniguruma",
      "supported_features": [
        {
          "$ref": "#/features/0/engineFeatures/4"
        },
        {
          "$ref": "#/features/1/engineFeatures/4"
        },
        {
          "$ref": "#/features/2/engineFeatures/4"
        },
        {
          "$ref": "#/features/3/engineFeatures/4"
        },
        {
          "$ref": "#/features/4/engineFeatures/4"
        },
        {
          "$ref": "#/features/5/engineFeatures/4"
        },
        {
          "$ref": "#/features/6/engineFeatures/4"
        },
        {
          "$ref": "#/features/7/engineFeatures/4"
        },
        {
          "$ref": "#/features/8/engineFeatures/4"
        },
        {
          "$ref": "#/features/9/engineFeatures/4"
        },
        {
          "$ref": "#/features/10/engineFeatures/4"
        },
        {
          "$ref": "#/features/13/engineFeatures/4"
        },
        {
          "$ref": "#/features/14/engineFeatures/4"
        },
        {
          "$ref": "#/features/15/engineFeatures/4"
        },
        {
          "$ref": "#/features/16/engineFeatures/4"
        },
        {
          "$ref": "#/features/17/engineFeatures/4"
        },
        {
          "$ref": "#/features/19/engineFeatures/4"
        },
        {
          "$ref": "#/features/23/engineFeatures/4"
        },
        {
          "$ref": "#/features/24/engineFeatures/4"
        },
        {
          "$ref": "#/features/25/engineFeatures/4"
        },
        {
          "$ref": "#/features/26/engineFeatures/4"
        },
        {
          "$ref": "#/features/27/engineFeatures/4"
        },
        {
          "$ref": "#/features/28/engineFeatures/4"
        },
        {
          "$ref": "#/features/29/engineFeatures/4"
        },
        {
          "$ref": "#/features/30/engineFeatures/4"
        },
        {
          "$ref": "#/features/32/engineFeatures/4"
        },
        {
          "$ref": "#/features/34/engineFeatures/4"
        },
        {
          "$ref": "#/features/35/engineFeatures/4"
        },
        {
          "$ref": "#/features/36/engineFeatures/4"
        },
        {
          "$ref": "#/features/37/engineFeatures/4"
        },
        {
          "$ref": "#/features/38/engineFeatures/4"
        },
        {
          "$ref": "#/features/39/engineFeatures/4"
        },
        {
          "$ref": "#/features/40/engineFeatures/4"
        }
      ],
      "unsupported_features": [
        {
          "$ref": "#/features/11/engineFeatures/4"
        },
        {
          "$ref": "#/features/12/engineFeatures/4"
        },
        {
          "$ref": "#/features/18/engineFeatures/4"
        },
        {
          "$ref": "#/features/20/engineFeatures/4"
        },
        {
          "$ref": "#/features/21/engineFeatures/4"
        },
        {
          "$ref": "#/features/22/engineFeatures/4"
        },
        {
          "$ref": "#/features/31/engineFeatures/4"
        },
        {
          "$ref": "#/features/33/engineFeatures/4"
        },
        {
          "$ref": "#/features/41/engineFeatures/4"
        }
      ],
      "features": [
        {
          "$ref": "#/features/0/engineFeatures/4"
        },
        {
          "$ref": "#/features/1/engineFeatures/4"
        },
        {
          "$ref": "#/features/2/engineFeatures/4"
        },
        {
          "$ref": "#/features/3/engineFeatures/4"
        },
        {
          "$ref": "#/features/4/engineFeatures/4"
        },
        {
          "$ref": "#/features/5/engineFeatures/4"
        },
        {
          "$ref": "#/features/6/engineFeatures/4"
        },
        {
          "$ref": "#/features/7/engineFeatures/4"
        },
        {
          "$ref": "#/features/8/engineFeatures/4"
        },
        {
          "$ref": "#/features/9/engineFeatures/4"
        },
        {
          "$ref": "#/features/10/engineFeatures/4"
        },
        {
          "$ref": "#/features/11/engineFeatures/4"
        },
        {
          "$ref": "#/features/12/engineFeatures/4"
        },
        {
          "$ref": "#/features/13/engineFeatures/4"
        },
        {
          "$ref": "#/features/14/engineFeatures/4"
        },
        {
          "$ref": "#/features/15/engineFeatures/4"
        },
        {
          "$ref": "#/features/16/engineFeatures/4"
        },
        {
          "$ref": "#/features/17/engineFeatures/4"
        },
        {
          "$ref": "#/features/18/engineFeatures/4"
        },
        {
          "$ref": "#/features/19/engineFeatures/4"
        },
        {
          "$ref": "#/features/20/engineFeatures/4"
        },
        {
          "$ref": "#/features/21/engineFeatures/4"
        },
        {
          "$ref": "#/features/22/engineFeatures/4"
        },
        {
          "$ref": "#/features/23/engineFeatures/4"
        },
        {
          "$ref": "#/features/24/engineFeatures/4"
        },
        {
          "$ref": "#/features/25/engineFeatures/4"
        },
        {
          "$ref": "#/features/26/engineFeatures/4"
        },
        {
          "$ref": "#/features/27/engineFeatures/4"
        },
        {
          "$ref": "#/features/28/engineFeatures/4"
        },
        {
          "$ref": "#/features/29/engineFeatures/4"
        },
        {
          "$ref": "#/features/30/engineFeatures/4"
        },
        {
          "$ref": "#/features/31/engineFeatures/4"
        },
        {
          "$ref": "#/features/32/engineFeatures/4"
        },
        {
          "$ref": "#/features/33/engineFeatures/4"
        },
        {
          "$ref": "#/features/34/engineFeatures/4"
        },
        {
          "$ref": "#/features/35/engineFeatures/4"
        },
        {
          "$ref": "#/features/36/engineFeatures/4"
        },
        {
          "$ref": "#/features/37/engineFeatures/4"
        },
        {
          "$ref": "#/features/38/engineFeatures/4"
        },
        {
          "$ref": "#/features/39/engineFeatures/4"
        },
        {
          "$ref": "#/features/40/engineFeatures/4"
        },
        {
          "$ref": "#/features/41/engineFeatures/4"
        }
      ],
      "languages": [
        {
          "$ref": "#/languages/0"
        },
        {
          "$ref": "#/languages/1"
        }
      ],
      "content": "# Engine: Oniguruma <a id=\"top\"></a>\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Engines](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Reference]</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/engine.md \"source for: name, reference\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/engines/oniguruma/engine.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/engine.md)\r\n-->\r\n\r\n\r\n\r\n## Languages\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/engine.md \"source for: languages\")</sup>\r\n\r\n- [C]\r\n- [C++]\r\n\r\n## Features\r\n\r\n<a id=\"supported-features\"></a>The following features are supported:\r\n\r\n- ✔ [Flags]\r\n- ✔ [Anchors]\r\n- ✔ [Buffer Boundaries]\r\n- ✔ [Word Boundaries]\r\n- ✔ [Text Segment Boundaries]\r\n- ✔ [Continuation Escape]\r\n- ✔ [Alternatives]\r\n- ✔ [Wildcard]\r\n- ✔ [Character Classes]\r\n- ✔ [Posix Character Classes]\r\n- ✔ [Negated Posix Character Classes]\r\n- ✔ [Character Class Escapes]\r\n- ✔ [Line Endings Escape]\r\n- ✔ [Character Property Escapes]\r\n- ✔ [Character Class Nested Set]\r\n- ✔ [Character Class Intersection]\r\n- ✔ [Character Class Subtraction]\r\n- ✔ [Quantifiers]\r\n- ✔ [Lazy Quantifiers]\r\n- ✔ [Possessive Quantifiers]\r\n- ✔ [Capturing Groups]\r\n- ✔ [Named Capturing Groups]\r\n- ✔ [Non-Capturing Groups]\r\n- ✔ [Backreferences]\r\n- ✔ [Comments]\r\n- ✔ [Modifiers]\r\n- ✔ [Lookahead]\r\n- ✔ [Lookbehind]\r\n- ✔ [Non-Backtracking Expressions]\r\n- ✔ [Recursion]\r\n- ✔ [Conditional Expressions]\r\n- ✔ [Subroutines]\r\n- ✔ [Callouts]\r\n\r\n<a id=\"not-supported-features\"></a>The following features are *not* supported:\r\n\r\n- ❌ [Collating Elements]\r\n- ❌ [Equivalence Classes]\r\n- ❌ [Character Class Union]\r\n- ❌ [Character Class Symmetric Difference]\r\n- ❌ [Character Class Complement]\r\n- ❌ [Quoted Characters]\r\n- ❌ [Line Comments]\r\n- ❌ [Branch Reset]\r\n- ❌ [Backtracking Control Verbs]\r\n\r\n## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n- `W` &mdash; ASCII-only words (when using `\\w`, `\\p{Word}`, `[[:word:]]`, `\\b`, or `\\B`)\r\n- `D` &mdash; ASCII-only digits (when using `\\d`, `\\p{Digit}`, `[[:digit:]]`)\r\n- `S` &mdash; ASCII-only space (when using `\\s`, `\\p{Space}`, `[[:space:]]`)\r\n- `P` &mdash; ASCII-only POSIX properties (includes `W`, `D`, and `S` flags)\r\n- <code>y{<em>?</em>}</code> &mdash; Changes meaning of `\\X`, `\\y`, and `\\Y` in unicode mode:\r\n  - `y{g}` &mdash; Extended Grapheme Cluster mode\r\n  - `y{w}` &mdash; Word mode.\r\n\r\nSome flags depend on options provided to Oniguruma <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>:\r\n- `ONIG_SYNTAX_ONIGURUMA`:\r\n  - `m` &mdash; Multiline. Causes the [wildcard] `.` to match newline characters.\r\n- `ONIG_SYNTAX_PERL` and `ONIG_SYNTAX_JAVA`:\r\n  - `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n  - `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]\r\n\r\n## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/text-segment-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/text-segment-boundaries.md)\r\n-->\r\n\r\nA <dfn>Text Segment Boundary</dfn> is an *Atom* that matches the start or the end of a text segment.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\y` &mdash; Matches the start or the end of a text segment.\r\n- `\\Y` &mdash; Matches when *not* at the start or the end of a text segment.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n\r\n## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `m` [flag] is set then this matches any character.\r\n  - NOTE: The `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc.\r\n\r\n## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/negated-posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/negated-posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\h` &mdash; Any hexadecimal digit character. Equivalent to `[0-9a-fA-F]`.\r\n- `\\H` &mdash; Any non-hexadecimal character. Equivalent to `[^0-9a-fA-F]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]` in non-Unicode mode, `\\p{General_Category}` in Unicode mode.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]` in non-Unicode mode, `\\P{General_Category}` in Unicode mode.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\N` &mdash; Any non-newline character. Equivalent to `(?-m:.)`.\r\n  - NOTE: The `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc.\r\n- `\\O` &mdash; Any character. Equivalent to `(?m:.)`.\r\n  - NOTE: The `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc.\r\n- `\\X` &mdash; Text segment. Equivalent to `(?>\\O(?:\\Y\\O)*)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\p{^<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-nested-set.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-nested-set.md)\r\n-->\r\n\r\nA <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: example\")</sup>\r\n\r\n\r\n```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-intersection.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-intersection.md)\r\n-->\r\n\r\n<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-subtraction.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-subtraction.md)\r\n-->\r\n\r\n<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n> NOTE: Oniguruma does not support character class subtraction directly, instead you must use a combination of [character class intersections] and [character class nested sets]\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-subtraction.md \"source for: example\")</sup>\r\n\r\n\r\n```\r\n[a-w&&[^c-g]z]\r\n```\r\n\r\nIs equivalent to the following pseudo pattern:\r\n\r\n```\r\n([a-w] AND ([^c-g] OR z))\r\n```\r\n\r\nWhich reduces to:\r\n\r\n```re\r\n[abh-w]\r\n```\r\n\r\nSource for this example comes from Oniguruma: [source](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L212)\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n\r\n## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/quoted-characters.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]\r\n\r\n## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>n</em>&gt;</code> &mdash; Where *n* is an integer > 0. Matches the same string as the [capture group] *n*.\r\n- <code>\\k'<em>n</em>'</code> &mdash; Where *n* is an integer > 0. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;-<em>n</em>&gt;</code> &mdash; Where *n* is an integer > 0. Matches the *n*th previous [capture group].\r\n- <code>\\k'-<em>n</em>'</code> &mdash; Where *n* is an integer > 0. Matches the *n*th previous [capture group].\r\n- <code>\\k&lt;+<em>n</em>&gt;</code> &mdash; Where *n* is an integer > 0. Matches the *n*th next [capture group].\r\n- <code>\\k'+<em>n</em>'</code> &mdash; Where *n* is an integer > 0. Matches the *n*th next [capture group].\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]\r\n\r\n## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/line-comments.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]\r\n\r\n## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imxWDSPy-imxWDSPy)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n  - NOTE: When option `ONIG_SYNTAX_ONIGURUMA` is specified, the `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n  - NOTE: When option `ONIG_SYNTAX_PERL` or `ONIG_SYNTAX_JAVA` are specified, the `m` and `s` flags are equivalent to their Perl/Java counterparts. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n- `(?imxWDSPy-imxWDSPy:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n  - NOTE: When option `ONIG_SYNTAX_ONIGURUMA` is specified, the `m`-flag in Oniguruma is equivalent to the `s`-flag (i.e., dot all) in Perl, ECMAScript, .NET, etc. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n  - NOTE: When option `ONIG_SYNTAX_PERL` or `ONIG_SYNTAX_JAVA` are specified, the `m` and `s` flags are equivalent to their Perl/Java counterparts. <sup>[reference](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L512)</sup>\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]\r\n\r\n## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]\r\n\r\n## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]\r\n\r\n## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/non-backtracking-expression.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/non-backtracking-expression.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n\r\n## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/recursion.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/recursion.md)\r\n-->\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\k&lt;<em>n</em>+<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k'<em>n</em>+<em>n</em>'</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k&lt;<em>n</em>-<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k'<em>n</em>-<em>n</em>'</code> &mdash; Where *n* is an integer >= 1 and *level* is an integer >= 0. Matches the same string as the [capture group] *n* at the recursion level relative to the referenced [capture group].\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Where *level* is an integer >= 0. Matches the same string as the [named capture group] with the name *name* at the recursion level relative to the referenced [named capture group].\r\n- <code>\\k'<em>name</em>'</code> &mdash; Where *level* is an integer >= 0. Matches the same string as the [named capture group] with the name *name* at the recursion level relative to the referenced [named capture group].\r\n- <code>\\g&lt;<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>\\g'<em>n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- `\\g<0>` &mdash; Evaluates the entire pattern at the current position.\r\n- `\\g'0'` &mdash; Evaluates the entire pattern at the current position.\r\n- <code>\\g&lt;<em>-n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g'<em>-n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g&lt;<em>+n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g'<em>+n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g&lt;<em>name</em>&gt;</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>\\g'<em>name</em>'</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n> NOTE: Left-most recursive calls are forbidden:\r\n> - `(?<name>a|\\g<name>b)` - error\r\n> - `(?<name>a|b\\g<name>c)` - ok\r\n>\r\n> Source for this example comes from Oniguruma: [source](https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L464-L467)\r\n\r\n## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>condition</em>|<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>condition</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(-<em>n</em>)…)</code> &mdash; Evaluates to **true** if the *n*th [capture group] declared to the left of the current *Atom* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(+<em>n</em>)…)</code> &mdash; Evaluates to **true** if the *n*th [capture group] declared to the right of the current *Atom* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>-<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>+<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>-<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>-<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>+<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>+<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched at the recursion level relative to the referenced [capture group]; otherwise, evaluates to **false**.\r\n\r\n## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/subroutines.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/subroutines.md)\r\n-->\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\g&lt;<em>n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>\\g'<em>n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- `\\g<0>` &mdash; Evaluates the entire pattern at the current position.\r\n- `\\g'0'` &mdash; Evaluates the entire pattern at the current position.\r\n- <code>\\g&lt;<em>-n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g'<em>-n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*.\r\n- <code>\\g&lt;<em>+n</em>&gt;</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g'<em>+n</em>'</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*.\r\n- <code>\\g&lt;<em>name</em>&gt;</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>\\g'<em>name</em>'</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```\r\n\r\n## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/callouts.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/callouts.md)\r\n-->\r\n\r\nA <dfn>Callout</dfn> is a user-defined function that can be evaluated while matching.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/callouts.md \"source for: syntax\")</sup>\r\n\r\n\r\n- Callouts of contents:\r\n  - <code>(?{…<em>contents</em>…})</code> &mdash; Invokes the callout with the provided *contents*.\r\n  - <code>(?{…<em>contents</em>…}<em>D</em>)</code> &mdash; Invokes the callout with the provided *contents* and direction flag character *D*. The direction flag must be one of:\r\n    - `X` &mdash; Invoked while progressing and retracting.\r\n    - `<` &mdash; Invoked while retracting.\r\n    - `>` &mdash; Invoked while progressing.\r\n  - <code>(?{…<em>contents</em>…}[<em>tag</em>])</code> &mdash; Invokes the callout with the provided *contents* and *tag*.\r\n  - <code>(?{…<em>contents</em>…}[<em>tag</em>]<em>D</em>)</code> &mdash; Invokes the callout with the provided *contents*, *tag*, and direction flag character *D*. The direction flag must be one of:\r\n    - `X` &mdash; Invoked while progressing and retracting.\r\n    - `<` &mdash; Invoked while retracting.\r\n    - `>` &mdash; Invoked while progressing.\r\n- Callouts of *name*:\r\n - <code>(*<em>name</em>)</code> &mdash; Invokes the callout with the provided *name*.\r\n - <code>(*<em>name</em>{<em>args</em>…})</code> &mdash; Invokes the callout with the provided *name* and *args*.\r\n - <code>(*<em>name</em>[<em>tag</em>])</code> &mdash; Invokes the callout with the provided *name* and *tag*.\r\n - <code>(*<em>name</em>[<em>tag</em>]{<em>args</em>…})</code> &mdash; Invokes the callout with the provided *name*, *tag*, and *args*.\r\n\r\n## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/oniguruma/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/oniguruma/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: #feature-flags\r\n[Flag]: #feature-flags\r\n[RegExp Flags]: #feature-flags\r\n[RegExp Flag]: #feature-flags\r\n[Anchors]: #feature-anchors\r\n[Anchor]: #feature-anchors\r\n[Buffer Boundaries]: #feature-buffer-boundaries\r\n[Buffer Boundary]: #feature-buffer-boundaries\r\n[Word Boundaries]: #feature-word-boundaries\r\n[Word Boundary]: #feature-word-boundaries\r\n[Text Segment Boundaries]: #feature-text-segment-boundaries\r\n[Text Segment Boundary]: #feature-text-segment-boundaries\r\n[Continuation Escape]: #feature-continuation-escape\r\n[Alternatives]: #feature-alternatives\r\n[Alternative]: #feature-alternatives\r\n[Wildcard]: #feature-wildcard\r\n[Wildcards]: #feature-wildcard\r\n[Character Classes]: #feature-character-classes\r\n[Character Class]: #feature-character-classes\r\n[Posix Character Classes]: #feature-posix-character-classes\r\n[Posix Character Class]: #feature-posix-character-classes\r\n[Negated Posix Character Classes]: #feature-negated-posix-character-classes\r\n[Negated Posix Character Class]: #feature-negated-posix-character-classes\r\n[Collating Elements]: #feature-collating-elements\r\n[Collating Element]: #feature-collating-elements\r\n[Equivalence Classes]: #feature-equivalence-classes\r\n[Equivalence Class]: #feature-equivalence-classes\r\n[Character Class Escapes]: #feature-character-class-escapes\r\n[Character Class Escape]: #feature-character-class-escapes\r\n[Line Endings Escape]: #feature-line-endings-escape\r\n[Character Property Escapes]: #feature-character-property-escapes\r\n[Character Property Escape]: #feature-character-property-escapes\r\n[Character Class Nested Set]: #feature-character-class-nested-set\r\n[Character Class Nested Sets]: #feature-character-class-nested-set\r\n[Character Class Intersection]: #feature-character-class-intersection\r\n[Character Class Intersections]: #feature-character-class-intersection\r\n[Character Class Union]: #feature-character-class-union\r\n[Character Class Unions]: #feature-character-class-union\r\n[Character Class Subtraction]: #feature-character-class-subtraction\r\n[Character Class Symmetric Difference]: #feature-character-class-symmetric-difference\r\n[Character Class Symmetric Differences]: #feature-character-class-symmetric-difference\r\n[Character Class Complement]: #feature-character-class-complement\r\n[Character Class Complements]: #feature-character-class-complement\r\n[Quoted Characters]: #feature-quoted-characters\r\n[Quantifiers]: #feature-quantifiers\r\n[Quantifier]: #feature-quantifiers\r\n[Lazy Quantifiers]: #feature-lazy-quantifiers\r\n[Lazy Quantifier]: #feature-lazy-quantifiers\r\n[Possessive Quantifiers]: #feature-possessive-quantifiers\r\n[Possessive Quantifier]: #feature-possessive-quantifiers\r\n[Capturing Groups]: #feature-capturing-groups\r\n[Capturing Group]: #feature-capturing-groups\r\n[Capture Groups]: #feature-capturing-groups\r\n[Capture Group]: #feature-capturing-groups\r\n[Named Capturing Groups]: #feature-named-capturing-groups\r\n[Named Capturing Group]: #feature-named-capturing-groups\r\n[Named Capture Groups]: #feature-named-capturing-groups\r\n[Named Capture Group]: #feature-named-capturing-groups\r\n[Non-Capturing Groups]: #feature-non-capturing-groups\r\n[Non-Capturing group]: #feature-non-capturing-groups\r\n[Backreferences]: #feature-backreferences\r\n[Backreference]: #feature-backreferences\r\n[Comments]: #feature-comments\r\n[Comment]: #feature-comments\r\n[Line Comments]: #feature-line-comments\r\n[Line Comment]: #feature-line-comments\r\n[x-mode Comments]: #feature-line-comments\r\n[x-mode Comment]: #feature-line-comments\r\n[Modifiers]: #feature-modifiers\r\n[Modifier]: #feature-modifiers\r\n[Branch Reset]: #feature-branch-reset\r\n[Lookahead]: #feature-lookahead\r\n[Lookbehind]: #feature-lookbehind\r\n[Non-Backtracking Expressions]: #feature-non-backtracking-expressions\r\n[Non-Backtracking Expression]: #feature-non-backtracking-expressions\r\n[Recursion]: #feature-recursion\r\n[Recursive Expression]: #feature-recursion\r\n[Conditional Expressions]: #feature-conditional-expressions\r\n[Conditional Expression]: #feature-conditional-expressions\r\n[Subroutines]: #feature-subroutines\r\n[Subroutine]: #feature-subroutines\r\n[Callouts]: #feature-callouts\r\n[Callout]: #feature-callouts\r\n[Backtracking Control Verbs]: #feature-backtracking-control-verbs\r\n[Backtracking Control Verb]: #feature-backtracking-control-verbs\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: https://github.com/kkos/oniguruma\r\n\r\n[reference:Flags]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L265-L289\r\n[reference:Anchors]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L172\r\n[reference:Buffer Boundaries]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L179-L181\r\n[reference:Word Boundaries]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L176-L177\r\n[reference:Text Segment Boundaries]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L186-L201\r\n[reference:Continuation Escape]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L182\r\n[reference:Alternatives]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L9\r\n[reference:Wildcard]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L48\r\n[reference:Character Classes]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L205\r\n[reference:Posix Character Classes]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L218\r\n[reference:Negated Posix Character Classes]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L218\r\n[reference:Collating Elements]: #not-supported-features\r\n[reference:Equivalence Classes]: #not-supported-features\r\n[reference:Character Class Escapes]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L50-L91\r\n[reference:Line Endings Escape]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L83-L87\r\n[reference:Character Property Escapes]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L112\r\n[reference:Character Class Nested Set]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L210\r\n[reference:Character Class Intersection]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L210\r\n[reference:Character Class Union]: #not-supported-features\r\n[reference:Character Class Subtraction]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L210-L212\r\n[reference:Character Class Symmetric Difference]: #not-supported-features\r\n[reference:Character Class Complement]: #not-supported-features\r\n[reference:Quoted Characters]: #not-supported-features\r\n[reference:Quantifiers]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L132\r\n[reference:Lazy Quantifiers]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L145\r\n[reference:Possessive Quantifiers]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L159\r\n[reference:Capturing Groups]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L293\r\n[reference:Named Capturing Groups]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L312\r\n[reference:Non-Capturing Groups]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L292\r\n[reference:Backreferences]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L398\r\n[reference:Comments]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L263\r\n[reference:Line Comments]: #not-supported-features\r\n[reference:Modifiers]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L265-L289\r\n[reference:Branch Reset]: #not-supported-features\r\n[reference:Lookahead]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L295-L296\r\n[reference:Lookbehind]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L298-L299\r\n[reference:Non-Backtracking Expressions]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L309-L310\r\n[reference:Recursion]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L418\r\n[reference:Conditional Expressions]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L379\r\n[reference:Subroutines]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L451\r\n[reference:Callouts]: https://github.com/kkos/oniguruma/blob/0bbd64dbfb7cd23646cc798470daa5223964cf5b/doc/RE#L322\r\n[reference:Backtracking Control Verbs]: #not-supported-features\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/engine.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/engine-toc.yml"
      ],
      "referenceSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/engine.md"
      ],
      "languagesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/oniguruma/engine.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Engine",
      "id": "hyperscan",
      "engine": "hyperscan",
      "name": "Hyperscan",
      "built": true,
      "outFile": "engines/hyperscan.md",
      "priority": 5,
      "reference": "https://www.hyperscan.io/",
      "supported_features": [
        {
          "$ref": "#/features/0/engineFeatures/5"
        },
        {
          "$ref": "#/features/1/engineFeatures/5"
        },
        {
          "$ref": "#/features/2/engineFeatures/5"
        },
        {
          "$ref": "#/features/3/engineFeatures/5"
        },
        {
          "$ref": "#/features/6/engineFeatures/5"
        },
        {
          "$ref": "#/features/7/engineFeatures/5"
        },
        {
          "$ref": "#/features/8/engineFeatures/5"
        },
        {
          "$ref": "#/features/9/engineFeatures/5"
        },
        {
          "$ref": "#/features/10/engineFeatures/5"
        },
        {
          "$ref": "#/features/13/engineFeatures/5"
        },
        {
          "$ref": "#/features/15/engineFeatures/5"
        },
        {
          "$ref": "#/features/23/engineFeatures/5"
        },
        {
          "$ref": "#/features/24/engineFeatures/5"
        },
        {
          "$ref": "#/features/26/engineFeatures/5"
        },
        {
          "$ref": "#/features/27/engineFeatures/5"
        },
        {
          "$ref": "#/features/28/engineFeatures/5"
        },
        {
          "$ref": "#/features/30/engineFeatures/5"
        },
        {
          "$ref": "#/features/32/engineFeatures/5"
        }
      ],
      "unsupported_features": [
        {
          "$ref": "#/features/4/engineFeatures/5"
        },
        {
          "$ref": "#/features/5/engineFeatures/5"
        },
        {
          "$ref": "#/features/11/engineFeatures/5"
        },
        {
          "$ref": "#/features/12/engineFeatures/5"
        },
        {
          "$ref": "#/features/14/engineFeatures/5"
        },
        {
          "$ref": "#/features/16/engineFeatures/5"
        },
        {
          "$ref": "#/features/17/engineFeatures/5"
        },
        {
          "$ref": "#/features/18/engineFeatures/5"
        },
        {
          "$ref": "#/features/19/engineFeatures/5"
        },
        {
          "$ref": "#/features/20/engineFeatures/5"
        },
        {
          "$ref": "#/features/21/engineFeatures/5"
        },
        {
          "$ref": "#/features/22/engineFeatures/5"
        },
        {
          "$ref": "#/features/25/engineFeatures/5"
        },
        {
          "$ref": "#/features/29/engineFeatures/5"
        },
        {
          "$ref": "#/features/31/engineFeatures/5"
        },
        {
          "$ref": "#/features/33/engineFeatures/5"
        },
        {
          "$ref": "#/features/34/engineFeatures/5"
        },
        {
          "$ref": "#/features/35/engineFeatures/5"
        },
        {
          "$ref": "#/features/36/engineFeatures/5"
        },
        {
          "$ref": "#/features/37/engineFeatures/5"
        },
        {
          "$ref": "#/features/38/engineFeatures/5"
        },
        {
          "$ref": "#/features/39/engineFeatures/5"
        },
        {
          "$ref": "#/features/40/engineFeatures/5"
        },
        {
          "$ref": "#/features/41/engineFeatures/5"
        }
      ],
      "features": [
        {
          "$ref": "#/features/0/engineFeatures/5"
        },
        {
          "$ref": "#/features/1/engineFeatures/5"
        },
        {
          "$ref": "#/features/2/engineFeatures/5"
        },
        {
          "$ref": "#/features/3/engineFeatures/5"
        },
        {
          "$ref": "#/features/4/engineFeatures/5"
        },
        {
          "$ref": "#/features/5/engineFeatures/5"
        },
        {
          "$ref": "#/features/6/engineFeatures/5"
        },
        {
          "$ref": "#/features/7/engineFeatures/5"
        },
        {
          "$ref": "#/features/8/engineFeatures/5"
        },
        {
          "$ref": "#/features/9/engineFeatures/5"
        },
        {
          "$ref": "#/features/10/engineFeatures/5"
        },
        {
          "$ref": "#/features/11/engineFeatures/5"
        },
        {
          "$ref": "#/features/12/engineFeatures/5"
        },
        {
          "$ref": "#/features/13/engineFeatures/5"
        },
        {
          "$ref": "#/features/14/engineFeatures/5"
        },
        {
          "$ref": "#/features/15/engineFeatures/5"
        },
        {
          "$ref": "#/features/16/engineFeatures/5"
        },
        {
          "$ref": "#/features/17/engineFeatures/5"
        },
        {
          "$ref": "#/features/18/engineFeatures/5"
        },
        {
          "$ref": "#/features/19/engineFeatures/5"
        },
        {
          "$ref": "#/features/20/engineFeatures/5"
        },
        {
          "$ref": "#/features/21/engineFeatures/5"
        },
        {
          "$ref": "#/features/22/engineFeatures/5"
        },
        {
          "$ref": "#/features/23/engineFeatures/5"
        },
        {
          "$ref": "#/features/24/engineFeatures/5"
        },
        {
          "$ref": "#/features/25/engineFeatures/5"
        },
        {
          "$ref": "#/features/26/engineFeatures/5"
        },
        {
          "$ref": "#/features/27/engineFeatures/5"
        },
        {
          "$ref": "#/features/28/engineFeatures/5"
        },
        {
          "$ref": "#/features/29/engineFeatures/5"
        },
        {
          "$ref": "#/features/30/engineFeatures/5"
        },
        {
          "$ref": "#/features/31/engineFeatures/5"
        },
        {
          "$ref": "#/features/32/engineFeatures/5"
        },
        {
          "$ref": "#/features/33/engineFeatures/5"
        },
        {
          "$ref": "#/features/34/engineFeatures/5"
        },
        {
          "$ref": "#/features/35/engineFeatures/5"
        },
        {
          "$ref": "#/features/36/engineFeatures/5"
        },
        {
          "$ref": "#/features/37/engineFeatures/5"
        },
        {
          "$ref": "#/features/38/engineFeatures/5"
        },
        {
          "$ref": "#/features/39/engineFeatures/5"
        },
        {
          "$ref": "#/features/40/engineFeatures/5"
        },
        {
          "$ref": "#/features/41/engineFeatures/5"
        }
      ],
      "languages": [
        {
          "$ref": "#/languages/1"
        }
      ],
      "content": "# Engine: Hyperscan <a id=\"top\"></a>\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Engines](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Reference]</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/engine.md \"source for: name, reference\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/engines/hyperscan/engine.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/engine.md)\r\n-->\r\n\r\n\r\n\r\n## Languages\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/engine.md \"source for: languages\")</sup>\r\n\r\n- [C++]\r\n\r\n## Features\r\n\r\n<a id=\"supported-features\"></a>The following features are supported:\r\n\r\n- ✔ [Flags]\r\n- ✔ [Anchors]\r\n- ✔ [Buffer Boundaries]\r\n- ✔ [Word Boundaries]\r\n- ✔ [Alternatives]\r\n- ✔ [Wildcard]\r\n- ✔ [Character Classes]\r\n- ✔ [Posix Character Classes]\r\n- ✔ [Negated Posix Character Classes]\r\n- ✔ [Character Class Escapes]\r\n- ✔ [Character Property Escapes]\r\n- ✔ [Quantifiers]\r\n- ✔ [Lazy Quantifiers]\r\n- ✔ [Capturing Groups]\r\n- ✔ [Named Capturing Groups]\r\n- ✔ [Non-Capturing Groups]\r\n- ✔ [Comments]\r\n- ✔ [Modifiers]\r\n\r\n<a id=\"not-supported-features\"></a>The following features are *not* supported:\r\n\r\n- ❌ [Text Segment Boundaries]\r\n- ❌ [Continuation Escape]\r\n- ❌ [Collating Elements]\r\n- ❌ [Equivalence Classes]\r\n- ❌ [Line Endings Escape]\r\n- ❌ [Character Class Nested Set]\r\n- ❌ [Character Class Intersection]\r\n- ❌ [Character Class Union]\r\n- ❌ [Character Class Subtraction]\r\n- ❌ [Character Class Symmetric Difference]\r\n- ❌ [Character Class Complement]\r\n- ❌ [Quoted Characters]\r\n- ❌ [Possessive Quantifiers]\r\n- ❌ [Backreferences]\r\n- ❌ [Line Comments]\r\n- ❌ [Branch Reset]\r\n- ❌ [Lookahead]\r\n- ❌ [Lookbehind]\r\n- ❌ [Non-Backtracking Expressions]\r\n- ❌ [Recursion]\r\n- ❌ [Conditional Expressions]\r\n- ❌ [Subroutines]\r\n- ❌ [Callouts]\r\n- ❌ [Backtracking Control Verbs]\r\n\r\n## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]\r\n\r\n## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/continuation-escape.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n\r\n## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.\r\n\r\n## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/negated-posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/negated-posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/line-endings-escape.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-nested-set.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-intersection.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-subtraction.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n\r\n## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/quoted-characters.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/possessive-quantifiers.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]\r\n\r\n## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/backreferences.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]\r\n\r\n## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/line-comments.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]\r\n\r\n## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]\r\n\r\n## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/lookahead.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]\r\n\r\n## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/lookbehind.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]\r\n\r\n## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/non-backtracking-expressions.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/recursion.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/conditional-expressions.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/subroutines.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/hyperscan/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/hyperscan/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: #feature-flags\r\n[Flag]: #feature-flags\r\n[RegExp Flags]: #feature-flags\r\n[RegExp Flag]: #feature-flags\r\n[Anchors]: #feature-anchors\r\n[Anchor]: #feature-anchors\r\n[Buffer Boundaries]: #feature-buffer-boundaries\r\n[Buffer Boundary]: #feature-buffer-boundaries\r\n[Word Boundaries]: #feature-word-boundaries\r\n[Word Boundary]: #feature-word-boundaries\r\n[Text Segment Boundaries]: #feature-text-segment-boundaries\r\n[Text Segment Boundary]: #feature-text-segment-boundaries\r\n[Continuation Escape]: #feature-continuation-escape\r\n[Alternatives]: #feature-alternatives\r\n[Alternative]: #feature-alternatives\r\n[Wildcard]: #feature-wildcard\r\n[Wildcards]: #feature-wildcard\r\n[Character Classes]: #feature-character-classes\r\n[Character Class]: #feature-character-classes\r\n[Posix Character Classes]: #feature-posix-character-classes\r\n[Posix Character Class]: #feature-posix-character-classes\r\n[Negated Posix Character Classes]: #feature-negated-posix-character-classes\r\n[Negated Posix Character Class]: #feature-negated-posix-character-classes\r\n[Collating Elements]: #feature-collating-elements\r\n[Collating Element]: #feature-collating-elements\r\n[Equivalence Classes]: #feature-equivalence-classes\r\n[Equivalence Class]: #feature-equivalence-classes\r\n[Character Class Escapes]: #feature-character-class-escapes\r\n[Character Class Escape]: #feature-character-class-escapes\r\n[Line Endings Escape]: #feature-line-endings-escape\r\n[Character Property Escapes]: #feature-character-property-escapes\r\n[Character Property Escape]: #feature-character-property-escapes\r\n[Character Class Nested Set]: #feature-character-class-nested-set\r\n[Character Class Nested Sets]: #feature-character-class-nested-set\r\n[Character Class Intersection]: #feature-character-class-intersection\r\n[Character Class Intersections]: #feature-character-class-intersection\r\n[Character Class Union]: #feature-character-class-union\r\n[Character Class Unions]: #feature-character-class-union\r\n[Character Class Subtraction]: #feature-character-class-subtraction\r\n[Character Class Symmetric Difference]: #feature-character-class-symmetric-difference\r\n[Character Class Symmetric Differences]: #feature-character-class-symmetric-difference\r\n[Character Class Complement]: #feature-character-class-complement\r\n[Character Class Complements]: #feature-character-class-complement\r\n[Quoted Characters]: #feature-quoted-characters\r\n[Quantifiers]: #feature-quantifiers\r\n[Quantifier]: #feature-quantifiers\r\n[Lazy Quantifiers]: #feature-lazy-quantifiers\r\n[Lazy Quantifier]: #feature-lazy-quantifiers\r\n[Possessive Quantifiers]: #feature-possessive-quantifiers\r\n[Possessive Quantifier]: #feature-possessive-quantifiers\r\n[Capturing Groups]: #feature-capturing-groups\r\n[Capturing Group]: #feature-capturing-groups\r\n[Capture Groups]: #feature-capturing-groups\r\n[Capture Group]: #feature-capturing-groups\r\n[Named Capturing Groups]: #feature-named-capturing-groups\r\n[Named Capturing Group]: #feature-named-capturing-groups\r\n[Named Capture Groups]: #feature-named-capturing-groups\r\n[Named Capture Group]: #feature-named-capturing-groups\r\n[Non-Capturing Groups]: #feature-non-capturing-groups\r\n[Non-Capturing group]: #feature-non-capturing-groups\r\n[Backreferences]: #feature-backreferences\r\n[Backreference]: #feature-backreferences\r\n[Comments]: #feature-comments\r\n[Comment]: #feature-comments\r\n[Line Comments]: #feature-line-comments\r\n[Line Comment]: #feature-line-comments\r\n[x-mode Comments]: #feature-line-comments\r\n[x-mode Comment]: #feature-line-comments\r\n[Modifiers]: #feature-modifiers\r\n[Modifier]: #feature-modifiers\r\n[Branch Reset]: #feature-branch-reset\r\n[Lookahead]: #feature-lookahead\r\n[Lookbehind]: #feature-lookbehind\r\n[Non-Backtracking Expressions]: #feature-non-backtracking-expressions\r\n[Non-Backtracking Expression]: #feature-non-backtracking-expressions\r\n[Recursion]: #feature-recursion\r\n[Recursive Expression]: #feature-recursion\r\n[Conditional Expressions]: #feature-conditional-expressions\r\n[Conditional Expression]: #feature-conditional-expressions\r\n[Subroutines]: #feature-subroutines\r\n[Subroutine]: #feature-subroutines\r\n[Callouts]: #feature-callouts\r\n[Callout]: #feature-callouts\r\n[Backtracking Control Verbs]: #feature-backtracking-control-verbs\r\n[Backtracking Control Verb]: #feature-backtracking-control-verbs\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: https://www.hyperscan.io/\r\n\r\n[reference:Flags]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Anchors]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Buffer Boundaries]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Word Boundaries]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Text Segment Boundaries]: #not-supported-features\r\n[reference:Continuation Escape]: #not-supported-features\r\n[reference:Alternatives]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Wildcard]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Character Classes]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Posix Character Classes]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Negated Posix Character Classes]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Collating Elements]: #not-supported-features\r\n[reference:Equivalence Classes]: #not-supported-features\r\n[reference:Character Class Escapes]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Line Endings Escape]: #not-supported-features\r\n[reference:Character Property Escapes]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Character Class Nested Set]: #not-supported-features\r\n[reference:Character Class Intersection]: #not-supported-features\r\n[reference:Character Class Union]: #not-supported-features\r\n[reference:Character Class Subtraction]: #not-supported-features\r\n[reference:Character Class Symmetric Difference]: #not-supported-features\r\n[reference:Character Class Complement]: #not-supported-features\r\n[reference:Quoted Characters]: #not-supported-features\r\n[reference:Quantifiers]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Lazy Quantifiers]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Possessive Quantifiers]: #not-supported-features\r\n[reference:Capturing Groups]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Named Capturing Groups]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Non-Capturing Groups]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Backreferences]: #not-supported-features\r\n[reference:Comments]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Line Comments]: #not-supported-features\r\n[reference:Modifiers]: http://intel.github.io/hyperscan/dev-reference/compilation.html#pattern-support\r\n[reference:Branch Reset]: #not-supported-features\r\n[reference:Lookahead]: #not-supported-features\r\n[reference:Lookbehind]: #not-supported-features\r\n[reference:Non-Backtracking Expressions]: #not-supported-features\r\n[reference:Recursion]: #not-supported-features\r\n[reference:Conditional Expressions]: #not-supported-features\r\n[reference:Subroutines]: #not-supported-features\r\n[reference:Callouts]: #not-supported-features\r\n[reference:Backtracking Control Verbs]: #not-supported-features\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/engine.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/engine-toc.yml"
      ],
      "referenceSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/engine.md"
      ],
      "languagesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/hyperscan/engine.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Engine",
      "id": "icu",
      "engine": "icu",
      "name": "ICU",
      "built": true,
      "outFile": "engines/icu.md",
      "priority": 6,
      "reference": "https://unicode-org.github.io/icu/userguide/strings/regexp.html",
      "supported_features": [
        {
          "$ref": "#/features/0/engineFeatures/6"
        },
        {
          "$ref": "#/features/1/engineFeatures/6"
        },
        {
          "$ref": "#/features/2/engineFeatures/6"
        },
        {
          "$ref": "#/features/3/engineFeatures/6"
        },
        {
          "$ref": "#/features/5/engineFeatures/6"
        },
        {
          "$ref": "#/features/6/engineFeatures/6"
        },
        {
          "$ref": "#/features/7/engineFeatures/6"
        },
        {
          "$ref": "#/features/8/engineFeatures/6"
        },
        {
          "$ref": "#/features/9/engineFeatures/6"
        },
        {
          "$ref": "#/features/13/engineFeatures/6"
        },
        {
          "$ref": "#/features/14/engineFeatures/6"
        },
        {
          "$ref": "#/features/15/engineFeatures/6"
        },
        {
          "$ref": "#/features/16/engineFeatures/6"
        },
        {
          "$ref": "#/features/17/engineFeatures/6"
        },
        {
          "$ref": "#/features/19/engineFeatures/6"
        },
        {
          "$ref": "#/features/22/engineFeatures/6"
        },
        {
          "$ref": "#/features/23/engineFeatures/6"
        },
        {
          "$ref": "#/features/24/engineFeatures/6"
        },
        {
          "$ref": "#/features/25/engineFeatures/6"
        },
        {
          "$ref": "#/features/26/engineFeatures/6"
        },
        {
          "$ref": "#/features/27/engineFeatures/6"
        },
        {
          "$ref": "#/features/28/engineFeatures/6"
        },
        {
          "$ref": "#/features/29/engineFeatures/6"
        },
        {
          "$ref": "#/features/30/engineFeatures/6"
        },
        {
          "$ref": "#/features/31/engineFeatures/6"
        },
        {
          "$ref": "#/features/32/engineFeatures/6"
        },
        {
          "$ref": "#/features/34/engineFeatures/6"
        },
        {
          "$ref": "#/features/35/engineFeatures/6"
        },
        {
          "$ref": "#/features/36/engineFeatures/6"
        }
      ],
      "unsupported_features": [
        {
          "$ref": "#/features/4/engineFeatures/6"
        },
        {
          "$ref": "#/features/10/engineFeatures/6"
        },
        {
          "$ref": "#/features/11/engineFeatures/6"
        },
        {
          "$ref": "#/features/12/engineFeatures/6"
        },
        {
          "$ref": "#/features/18/engineFeatures/6"
        },
        {
          "$ref": "#/features/20/engineFeatures/6"
        },
        {
          "$ref": "#/features/21/engineFeatures/6"
        },
        {
          "$ref": "#/features/33/engineFeatures/6"
        },
        {
          "$ref": "#/features/37/engineFeatures/6"
        },
        {
          "$ref": "#/features/38/engineFeatures/6"
        },
        {
          "$ref": "#/features/39/engineFeatures/6"
        },
        {
          "$ref": "#/features/40/engineFeatures/6"
        },
        {
          "$ref": "#/features/41/engineFeatures/6"
        }
      ],
      "features": [
        {
          "$ref": "#/features/0/engineFeatures/6"
        },
        {
          "$ref": "#/features/1/engineFeatures/6"
        },
        {
          "$ref": "#/features/2/engineFeatures/6"
        },
        {
          "$ref": "#/features/3/engineFeatures/6"
        },
        {
          "$ref": "#/features/4/engineFeatures/6"
        },
        {
          "$ref": "#/features/5/engineFeatures/6"
        },
        {
          "$ref": "#/features/6/engineFeatures/6"
        },
        {
          "$ref": "#/features/7/engineFeatures/6"
        },
        {
          "$ref": "#/features/8/engineFeatures/6"
        },
        {
          "$ref": "#/features/9/engineFeatures/6"
        },
        {
          "$ref": "#/features/10/engineFeatures/6"
        },
        {
          "$ref": "#/features/11/engineFeatures/6"
        },
        {
          "$ref": "#/features/12/engineFeatures/6"
        },
        {
          "$ref": "#/features/13/engineFeatures/6"
        },
        {
          "$ref": "#/features/14/engineFeatures/6"
        },
        {
          "$ref": "#/features/15/engineFeatures/6"
        },
        {
          "$ref": "#/features/16/engineFeatures/6"
        },
        {
          "$ref": "#/features/17/engineFeatures/6"
        },
        {
          "$ref": "#/features/18/engineFeatures/6"
        },
        {
          "$ref": "#/features/19/engineFeatures/6"
        },
        {
          "$ref": "#/features/20/engineFeatures/6"
        },
        {
          "$ref": "#/features/21/engineFeatures/6"
        },
        {
          "$ref": "#/features/22/engineFeatures/6"
        },
        {
          "$ref": "#/features/23/engineFeatures/6"
        },
        {
          "$ref": "#/features/24/engineFeatures/6"
        },
        {
          "$ref": "#/features/25/engineFeatures/6"
        },
        {
          "$ref": "#/features/26/engineFeatures/6"
        },
        {
          "$ref": "#/features/27/engineFeatures/6"
        },
        {
          "$ref": "#/features/28/engineFeatures/6"
        },
        {
          "$ref": "#/features/29/engineFeatures/6"
        },
        {
          "$ref": "#/features/30/engineFeatures/6"
        },
        {
          "$ref": "#/features/31/engineFeatures/6"
        },
        {
          "$ref": "#/features/32/engineFeatures/6"
        },
        {
          "$ref": "#/features/33/engineFeatures/6"
        },
        {
          "$ref": "#/features/34/engineFeatures/6"
        },
        {
          "$ref": "#/features/35/engineFeatures/6"
        },
        {
          "$ref": "#/features/36/engineFeatures/6"
        },
        {
          "$ref": "#/features/37/engineFeatures/6"
        },
        {
          "$ref": "#/features/38/engineFeatures/6"
        },
        {
          "$ref": "#/features/39/engineFeatures/6"
        },
        {
          "$ref": "#/features/40/engineFeatures/6"
        },
        {
          "$ref": "#/features/41/engineFeatures/6"
        }
      ],
      "languages": [
        {
          "$ref": "#/languages/0"
        },
        {
          "$ref": "#/languages/1"
        }
      ],
      "content": "# Engine: ICU <a id=\"top\"></a>\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Engines](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Reference]</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/engine.md \"source for: name, reference\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/engines/icu/engine.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/engine.md)\r\n-->\r\n\r\n\r\n\r\n## Languages\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/engine.md \"source for: languages\")</sup>\r\n\r\n- [C]\r\n- [C++]\r\n\r\n## Features\r\n\r\n<a id=\"supported-features\"></a>The following features are supported:\r\n\r\n- ✔ [Flags]\r\n- ✔ [Anchors]\r\n- ✔ [Buffer Boundaries]\r\n- ✔ [Word Boundaries]\r\n- ✔ [Continuation Escape]\r\n- ✔ [Alternatives]\r\n- ✔ [Wildcard]\r\n- ✔ [Character Classes]\r\n- ✔ [Posix Character Classes]\r\n- ✔ [Character Class Escapes]\r\n- ✔ [Line Endings Escape]\r\n- ✔ [Character Property Escapes]\r\n- ✔ [Character Class Nested Set]\r\n- ✔ [Character Class Intersection]\r\n- ✔ [Character Class Subtraction]\r\n- ✔ [Quoted Characters]\r\n- ✔ [Quantifiers]\r\n- ✔ [Lazy Quantifiers]\r\n- ✔ [Possessive Quantifiers]\r\n- ✔ [Capturing Groups]\r\n- ✔ [Named Capturing Groups]\r\n- ✔ [Non-Capturing Groups]\r\n- ✔ [Backreferences]\r\n- ✔ [Comments]\r\n- ✔ [Line Comments]\r\n- ✔ [Modifiers]\r\n- ✔ [Lookahead]\r\n- ✔ [Lookbehind]\r\n- ✔ [Non-Backtracking Expressions]\r\n\r\n<a id=\"not-supported-features\"></a>The following features are *not* supported:\r\n\r\n- ❌ [Text Segment Boundaries]\r\n- ❌ [Negated Posix Character Classes]\r\n- ❌ [Collating Elements]\r\n- ❌ [Equivalence Classes]\r\n- ❌ [Character Class Union]\r\n- ❌ [Character Class Symmetric Difference]\r\n- ❌ [Character Class Complement]\r\n- ❌ [Branch Reset]\r\n- ❌ [Recursion]\r\n- ❌ [Conditional Expressions]\r\n- ❌ [Subroutines]\r\n- ❌ [Callouts]\r\n- ❌ [Backtracking Control Verbs]\r\n\r\n## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `w` &mdash; Unicode Word. Changes the behavior of `\\b` in a pattern.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]\r\n\r\n## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n\r\n## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.\r\n\r\n## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/negated-posix-character-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\N{<em>name</em>}</code> &mdash; Where *name* is a predefined unicode character name. Matches the named unicode character.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-nested-set.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-nested-set.md)\r\n-->\r\n\r\nA <dfn>Character Class Nested Set</dfn> allows you to to define a nested [character class] inside of a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[[…]]` &mdash; Matches any character in the set, just like a normal [character class].\r\n- `[[^…]]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set, just like a normal [negated character class].\r\n- <code>[[<em>a</em>-<em>z</em>]]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive), just like a normal [character class range].\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: example\")</sup>\r\n\r\n\r\n```\r\n[a-z&&[^d-q]]\r\n```\r\n\r\nIs equivalent to:\r\n\r\n```re\r\n[a-cr-z]\r\n```\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-intersection.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-intersection.md)\r\n-->\r\n\r\n<dfn>Character Class Intersection</dfn> allows you to indicate that only characters that are in both [character classes] should match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…&&…]` &mdash; Matches any character that is in both the left- and right-hand sets of `&&`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-subtraction.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-subtraction.md)\r\n-->\r\n\r\n<dfn>Character Class Subtraction</dfn> allows you to exclude a class of characters from another class of characters in a [character class].\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-subtraction.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…--…]` &mdash; Matches any character that is in the left-hand set of `--` but not in the right-hand set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n\r\n## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/quoted-characters.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/quoted-characters.md)\r\n-->\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.\r\n\r\n## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]\r\n\r\n## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n- `\\h` &mdash; Any horizontal whitespace character.\r\n- `\\H` &mdash; Any non-horizontal whitespace character.\r\n- `\\v` &mdash; Any vertical whitespace character.\r\n- `\\V` &mdash; Any non-vertical whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]\r\n\r\n## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/line-comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/line-comments.md)\r\n-->\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]\r\n\r\n## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imswx-imswx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imswx-imswx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]\r\n\r\n## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]\r\n\r\n## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]\r\n\r\n## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/non-backtracking-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/non-backtracking-expressions.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n\r\n## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/recursion.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/conditional-expressions.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/subroutines.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/icu/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/icu/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: #feature-flags\r\n[Flag]: #feature-flags\r\n[RegExp Flags]: #feature-flags\r\n[RegExp Flag]: #feature-flags\r\n[Anchors]: #feature-anchors\r\n[Anchor]: #feature-anchors\r\n[Buffer Boundaries]: #feature-buffer-boundaries\r\n[Buffer Boundary]: #feature-buffer-boundaries\r\n[Word Boundaries]: #feature-word-boundaries\r\n[Word Boundary]: #feature-word-boundaries\r\n[Text Segment Boundaries]: #feature-text-segment-boundaries\r\n[Text Segment Boundary]: #feature-text-segment-boundaries\r\n[Continuation Escape]: #feature-continuation-escape\r\n[Alternatives]: #feature-alternatives\r\n[Alternative]: #feature-alternatives\r\n[Wildcard]: #feature-wildcard\r\n[Wildcards]: #feature-wildcard\r\n[Character Classes]: #feature-character-classes\r\n[Character Class]: #feature-character-classes\r\n[Posix Character Classes]: #feature-posix-character-classes\r\n[Posix Character Class]: #feature-posix-character-classes\r\n[Negated Posix Character Classes]: #feature-negated-posix-character-classes\r\n[Negated Posix Character Class]: #feature-negated-posix-character-classes\r\n[Collating Elements]: #feature-collating-elements\r\n[Collating Element]: #feature-collating-elements\r\n[Equivalence Classes]: #feature-equivalence-classes\r\n[Equivalence Class]: #feature-equivalence-classes\r\n[Character Class Escapes]: #feature-character-class-escapes\r\n[Character Class Escape]: #feature-character-class-escapes\r\n[Line Endings Escape]: #feature-line-endings-escape\r\n[Character Property Escapes]: #feature-character-property-escapes\r\n[Character Property Escape]: #feature-character-property-escapes\r\n[Character Class Nested Set]: #feature-character-class-nested-set\r\n[Character Class Nested Sets]: #feature-character-class-nested-set\r\n[Character Class Intersection]: #feature-character-class-intersection\r\n[Character Class Intersections]: #feature-character-class-intersection\r\n[Character Class Union]: #feature-character-class-union\r\n[Character Class Unions]: #feature-character-class-union\r\n[Character Class Subtraction]: #feature-character-class-subtraction\r\n[Character Class Symmetric Difference]: #feature-character-class-symmetric-difference\r\n[Character Class Symmetric Differences]: #feature-character-class-symmetric-difference\r\n[Character Class Complement]: #feature-character-class-complement\r\n[Character Class Complements]: #feature-character-class-complement\r\n[Quoted Characters]: #feature-quoted-characters\r\n[Quantifiers]: #feature-quantifiers\r\n[Quantifier]: #feature-quantifiers\r\n[Lazy Quantifiers]: #feature-lazy-quantifiers\r\n[Lazy Quantifier]: #feature-lazy-quantifiers\r\n[Possessive Quantifiers]: #feature-possessive-quantifiers\r\n[Possessive Quantifier]: #feature-possessive-quantifiers\r\n[Capturing Groups]: #feature-capturing-groups\r\n[Capturing Group]: #feature-capturing-groups\r\n[Capture Groups]: #feature-capturing-groups\r\n[Capture Group]: #feature-capturing-groups\r\n[Named Capturing Groups]: #feature-named-capturing-groups\r\n[Named Capturing Group]: #feature-named-capturing-groups\r\n[Named Capture Groups]: #feature-named-capturing-groups\r\n[Named Capture Group]: #feature-named-capturing-groups\r\n[Non-Capturing Groups]: #feature-non-capturing-groups\r\n[Non-Capturing group]: #feature-non-capturing-groups\r\n[Backreferences]: #feature-backreferences\r\n[Backreference]: #feature-backreferences\r\n[Comments]: #feature-comments\r\n[Comment]: #feature-comments\r\n[Line Comments]: #feature-line-comments\r\n[Line Comment]: #feature-line-comments\r\n[x-mode Comments]: #feature-line-comments\r\n[x-mode Comment]: #feature-line-comments\r\n[Modifiers]: #feature-modifiers\r\n[Modifier]: #feature-modifiers\r\n[Branch Reset]: #feature-branch-reset\r\n[Lookahead]: #feature-lookahead\r\n[Lookbehind]: #feature-lookbehind\r\n[Non-Backtracking Expressions]: #feature-non-backtracking-expressions\r\n[Non-Backtracking Expression]: #feature-non-backtracking-expressions\r\n[Recursion]: #feature-recursion\r\n[Recursive Expression]: #feature-recursion\r\n[Conditional Expressions]: #feature-conditional-expressions\r\n[Conditional Expression]: #feature-conditional-expressions\r\n[Subroutines]: #feature-subroutines\r\n[Subroutine]: #feature-subroutines\r\n[Callouts]: #feature-callouts\r\n[Callout]: #feature-callouts\r\n[Backtracking Control Verbs]: #feature-backtracking-control-verbs\r\n[Backtracking Control Verb]: #feature-backtracking-control-verbs\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: https://unicode-org.github.io/icu/userguide/strings/regexp.html\r\n\r\n[reference:Flags]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#flag-options\r\n[reference:Anchors]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Buffer Boundaries]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Word Boundaries]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Text Segment Boundaries]: #not-supported-features\r\n[reference:Continuation Escape]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Alternatives]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Wildcard]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Character Classes]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Posix Character Classes]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#set-expressions-character-classes\r\n[reference:Negated Posix Character Classes]: #not-supported-features\r\n[reference:Collating Elements]: #not-supported-features\r\n[reference:Equivalence Classes]: #not-supported-features\r\n[reference:Character Class Escapes]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Line Endings Escape]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Character Property Escapes]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Character Class Nested Set]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#set-expressions-character-classes\r\n[reference:Character Class Intersection]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#set-expressions-character-classes\r\n[reference:Character Class Union]: #not-supported-features\r\n[reference:Character Class Subtraction]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#set-expressions-character-classes\r\n[reference:Character Class Symmetric Difference]: #not-supported-features\r\n[reference:Character Class Complement]: #not-supported-features\r\n[reference:Quoted Characters]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Quantifiers]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Lazy Quantifiers]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Possessive Quantifiers]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Capturing Groups]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Named Capturing Groups]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Non-Capturing Groups]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Backreferences]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-metacharacters\r\n[reference:Comments]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Line Comments]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#flag-options\r\n[reference:Modifiers]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Branch Reset]: #not-supported-features\r\n[reference:Lookahead]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Lookbehind]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Non-Backtracking Expressions]: https://unicode-org.github.io/icu/userguide/strings/regexp.html#regular-expression-operators\r\n[reference:Recursion]: #not-supported-features\r\n[reference:Conditional Expressions]: #not-supported-features\r\n[reference:Subroutines]: #not-supported-features\r\n[reference:Callouts]: #not-supported-features\r\n[reference:Backtracking Control Verbs]: #not-supported-features\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/icu/engine.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/engine-toc.yml"
      ],
      "referenceSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/icu/engine.md"
      ],
      "languagesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/icu/engine.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Engine",
      "id": "glib-gregex",
      "engine": "glib-gregex",
      "name": "Glib/GRegex",
      "built": true,
      "outFile": "engines/glib-gregex.md",
      "priority": 7,
      "reference": "https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html",
      "supported_features": [
        {
          "$ref": "#/features/0/engineFeatures/7"
        },
        {
          "$ref": "#/features/1/engineFeatures/7"
        },
        {
          "$ref": "#/features/2/engineFeatures/7"
        },
        {
          "$ref": "#/features/3/engineFeatures/7"
        },
        {
          "$ref": "#/features/5/engineFeatures/7"
        },
        {
          "$ref": "#/features/6/engineFeatures/7"
        },
        {
          "$ref": "#/features/7/engineFeatures/7"
        },
        {
          "$ref": "#/features/8/engineFeatures/7"
        },
        {
          "$ref": "#/features/9/engineFeatures/7"
        },
        {
          "$ref": "#/features/10/engineFeatures/7"
        },
        {
          "$ref": "#/features/13/engineFeatures/7"
        },
        {
          "$ref": "#/features/14/engineFeatures/7"
        },
        {
          "$ref": "#/features/15/engineFeatures/7"
        },
        {
          "$ref": "#/features/22/engineFeatures/7"
        },
        {
          "$ref": "#/features/23/engineFeatures/7"
        },
        {
          "$ref": "#/features/24/engineFeatures/7"
        },
        {
          "$ref": "#/features/25/engineFeatures/7"
        },
        {
          "$ref": "#/features/26/engineFeatures/7"
        },
        {
          "$ref": "#/features/27/engineFeatures/7"
        },
        {
          "$ref": "#/features/28/engineFeatures/7"
        },
        {
          "$ref": "#/features/29/engineFeatures/7"
        },
        {
          "$ref": "#/features/30/engineFeatures/7"
        },
        {
          "$ref": "#/features/31/engineFeatures/7"
        },
        {
          "$ref": "#/features/32/engineFeatures/7"
        },
        {
          "$ref": "#/features/34/engineFeatures/7"
        },
        {
          "$ref": "#/features/35/engineFeatures/7"
        },
        {
          "$ref": "#/features/36/engineFeatures/7"
        },
        {
          "$ref": "#/features/37/engineFeatures/7"
        },
        {
          "$ref": "#/features/38/engineFeatures/7"
        },
        {
          "$ref": "#/features/39/engineFeatures/7"
        }
      ],
      "unsupported_features": [
        {
          "$ref": "#/features/4/engineFeatures/7"
        },
        {
          "$ref": "#/features/11/engineFeatures/7"
        },
        {
          "$ref": "#/features/12/engineFeatures/7"
        },
        {
          "$ref": "#/features/16/engineFeatures/7"
        },
        {
          "$ref": "#/features/17/engineFeatures/7"
        },
        {
          "$ref": "#/features/18/engineFeatures/7"
        },
        {
          "$ref": "#/features/19/engineFeatures/7"
        },
        {
          "$ref": "#/features/20/engineFeatures/7"
        },
        {
          "$ref": "#/features/21/engineFeatures/7"
        },
        {
          "$ref": "#/features/33/engineFeatures/7"
        },
        {
          "$ref": "#/features/40/engineFeatures/7"
        },
        {
          "$ref": "#/features/41/engineFeatures/7"
        }
      ],
      "features": [
        {
          "$ref": "#/features/0/engineFeatures/7"
        },
        {
          "$ref": "#/features/1/engineFeatures/7"
        },
        {
          "$ref": "#/features/2/engineFeatures/7"
        },
        {
          "$ref": "#/features/3/engineFeatures/7"
        },
        {
          "$ref": "#/features/4/engineFeatures/7"
        },
        {
          "$ref": "#/features/5/engineFeatures/7"
        },
        {
          "$ref": "#/features/6/engineFeatures/7"
        },
        {
          "$ref": "#/features/7/engineFeatures/7"
        },
        {
          "$ref": "#/features/8/engineFeatures/7"
        },
        {
          "$ref": "#/features/9/engineFeatures/7"
        },
        {
          "$ref": "#/features/10/engineFeatures/7"
        },
        {
          "$ref": "#/features/11/engineFeatures/7"
        },
        {
          "$ref": "#/features/12/engineFeatures/7"
        },
        {
          "$ref": "#/features/13/engineFeatures/7"
        },
        {
          "$ref": "#/features/14/engineFeatures/7"
        },
        {
          "$ref": "#/features/15/engineFeatures/7"
        },
        {
          "$ref": "#/features/16/engineFeatures/7"
        },
        {
          "$ref": "#/features/17/engineFeatures/7"
        },
        {
          "$ref": "#/features/18/engineFeatures/7"
        },
        {
          "$ref": "#/features/19/engineFeatures/7"
        },
        {
          "$ref": "#/features/20/engineFeatures/7"
        },
        {
          "$ref": "#/features/21/engineFeatures/7"
        },
        {
          "$ref": "#/features/22/engineFeatures/7"
        },
        {
          "$ref": "#/features/23/engineFeatures/7"
        },
        {
          "$ref": "#/features/24/engineFeatures/7"
        },
        {
          "$ref": "#/features/25/engineFeatures/7"
        },
        {
          "$ref": "#/features/26/engineFeatures/7"
        },
        {
          "$ref": "#/features/27/engineFeatures/7"
        },
        {
          "$ref": "#/features/28/engineFeatures/7"
        },
        {
          "$ref": "#/features/29/engineFeatures/7"
        },
        {
          "$ref": "#/features/30/engineFeatures/7"
        },
        {
          "$ref": "#/features/31/engineFeatures/7"
        },
        {
          "$ref": "#/features/32/engineFeatures/7"
        },
        {
          "$ref": "#/features/33/engineFeatures/7"
        },
        {
          "$ref": "#/features/34/engineFeatures/7"
        },
        {
          "$ref": "#/features/35/engineFeatures/7"
        },
        {
          "$ref": "#/features/36/engineFeatures/7"
        },
        {
          "$ref": "#/features/37/engineFeatures/7"
        },
        {
          "$ref": "#/features/38/engineFeatures/7"
        },
        {
          "$ref": "#/features/39/engineFeatures/7"
        },
        {
          "$ref": "#/features/40/engineFeatures/7"
        },
        {
          "$ref": "#/features/41/engineFeatures/7"
        }
      ],
      "languages": [
        {
          "$ref": "#/languages/1"
        }
      ],
      "content": "# Engine: Glib/GRegex <a id=\"top\"></a>\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Engines](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Reference]</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/engine.md \"source for: name, reference\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/engines/glib-gregex/engine.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/engine.md)\r\n-->\r\n\r\n\r\n\r\n## Languages\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/engine.md \"source for: languages\")</sup>\r\n\r\n- [C++]\r\n\r\n## Features\r\n\r\n<a id=\"supported-features\"></a>The following features are supported:\r\n\r\n- ✔ [Flags]\r\n- ✔ [Anchors]\r\n- ✔ [Buffer Boundaries]\r\n- ✔ [Word Boundaries]\r\n- ✔ [Continuation Escape]\r\n- ✔ [Alternatives]\r\n- ✔ [Wildcard]\r\n- ✔ [Character Classes]\r\n- ✔ [Posix Character Classes]\r\n- ✔ [Negated Posix Character Classes]\r\n- ✔ [Character Class Escapes]\r\n- ✔ [Line Endings Escape]\r\n- ✔ [Character Property Escapes]\r\n- ✔ [Quoted Characters]\r\n- ✔ [Quantifiers]\r\n- ✔ [Lazy Quantifiers]\r\n- ✔ [Possessive Quantifiers]\r\n- ✔ [Capturing Groups]\r\n- ✔ [Named Capturing Groups]\r\n- ✔ [Non-Capturing Groups]\r\n- ✔ [Backreferences]\r\n- ✔ [Comments]\r\n- ✔ [Line Comments]\r\n- ✔ [Modifiers]\r\n- ✔ [Lookahead]\r\n- ✔ [Lookbehind]\r\n- ✔ [Non-Backtracking Expressions]\r\n- ✔ [Recursion]\r\n- ✔ [Conditional Expressions]\r\n- ✔ [Subroutines]\r\n\r\n<a id=\"not-supported-features\"></a>The following features are *not* supported:\r\n\r\n- ❌ [Text Segment Boundaries]\r\n- ❌ [Collating Elements]\r\n- ❌ [Equivalence Classes]\r\n- ❌ [Character Class Nested Set]\r\n- ❌ [Character Class Intersection]\r\n- ❌ [Character Class Union]\r\n- ❌ [Character Class Subtraction]\r\n- ❌ [Character Class Symmetric Difference]\r\n- ❌ [Character Class Complement]\r\n- ❌ [Branch Reset]\r\n- ❌ [Callouts]\r\n- ❌ [Backtracking Control Verbs]\r\n\r\n## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `x` &mdash; Extended Mode. Ignores whitespace in a pattern. Spaces must instead be represented by `\\s` or `\\ ` (an escaped space).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]\r\n\r\n## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/buffer-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/buffer-boundaries.md)\r\n-->\r\n\r\nA <dfn>Buffer Boundary</dfn> is an *Atom* that matches the start or the end of the input. This differs slightly from `^` and `$` which can be affected by [RegExp flags] like `m`.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\A` &mdash; Matches the start of the input.\r\n- `\\z` &mdash; Matches the end of the input.\r\n- `\\Z` &mdash; A zero-width assertion consisting of an optional newline at the end of the buffer. Equivalent to `(?=\\n?\\z)`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/continuation-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/continuation-escape.md)\r\n-->\r\n\r\nA <dfn>Continuation Escape</dfn> is a zero-width assertion that matches either the start of the input or the start of the last match.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\G` &mdash; Matches either the start of the input or the start of the last match.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n\r\n## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.\r\n\r\n## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/negated-posix-character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/negated-posix-character-classes.md)\r\n-->\r\n\r\nA <dfn>Negated Posix Character Class</dfn> is a member of a [Character Class] set that specifies a named, pre-defined set of excluded characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>[[:^<em>name</em>:]]</code> &mdash; Where *name* is in a set of predefined names. Matches any character not in the set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/line-endings-escape.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/line-endings-escape.md)\r\n-->\r\n\r\nA <dfn>Line Endings Escape</dfn> is an *Atom* that matches any line ending character sequence.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\R` &mdash; Equivalent to `(?>\\r\\n?|[\\x0A-\\x0C\\x85\\u{2028}\\u{2029}])`\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-nested-set.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-intersection.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-subtraction.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n\r\n## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/quoted-characters.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/quoted-characters.md)\r\n-->\r\n\r\n<dfn>Quoted Characters</dfn> are a sequence of characters treated as literal characters rather than RegExp characters.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\Q…\\E` &mdash; All characters following `\\Q` and preceding the next `\\E` are treated as literal characters. Example: `\\Q.+\\E` matches `.+` but not `aa`.\r\n- `\\Q…` &mdash; If there is no trailing `\\E`, all characters until the end of the pattern are treated as literal characters.\r\n\r\n## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/possessive-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/possessive-quantifiers.md)\r\n-->\r\n\r\n<dfn>Possessive Quantifiers</dfn> are like greedy (i.e., regular) [quantifiers], except that backtracking is not performed.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*+` &mdash; Match zero or more characters without backtracking.\r\n- `++` &mdash; Match one or more characters without backtracking.\r\n- `?+` &mdash; Match zero or one characters without backtracking.\r\n- <code>{<em>n</em>,}+</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times without backtracking.\r\n- <code>{<em>n</em>,<em>m</em>}+</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times without backtracking.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]\r\n\r\n## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?'<em>name</em>'…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n- <code>(?P&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n  - NOTE: If the *n* is > 9 it may be interpreted as an octal literal if there are less than *n* [capture groups] in the pattern.\r\n- <code>\\g<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g-<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g+<em>n</em></code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the same string as the [capture group] *n*.\r\n- <code>\\g{-<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th previous [capture group].\r\n- <code>\\g{+<em>n</em>}</code> &mdash; Where *n* is an integer >= 1. Matches the *n*th next [capture group].\r\n- <code>\\g{<em>name</em>}</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>\\k'<em>name</em>'</code> &mdash; Matches the [named capture group] with the name *name*.\r\n- <code>(?P=<em>name</em>)</code> &mdash; Matches the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/comments.md)\r\n-->\r\n\r\nA <dfn>Comment</dfn> is a sequence of characters that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?#…)` &mdash; The entire expression is removed from the pattern. A comment may not contain other `(` or `)` characters.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]\r\n\r\n## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/line-comments.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/line-comments.md)\r\n-->\r\n\r\nA <dfn>Line Comment</dfn> is a sequence of characters starting with `#` and ending with `\\n` (or the end of the pattern) that is ignored by pattern matching and can be used to document a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>#…<strong>\\n</strong></code> &mdash; The rest of the line starting from `#` is removed from the pattern. Only supported when the `x` (extended mode) [RegExp flag] is set.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]\r\n\r\n## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/modifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/modifiers.md)\r\n-->\r\n\r\n<dfn>Modifiers</dfn> allow you to change the currently active [RegExp flags] within a subexpression.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?imsx-imsx)` - Sets or unsets (using `-`) the specified [RegExp flags] starting at the current position until the next closing `)` or the end of the pattern. Example: `(?-i)A(?i)B(?-i)C` matches `ABC`, `AbC`.\r\n- `(?imsx-imsx:…)` - Sets or unsets (using `-`) the specified [RegExp flags] for the subexpression. Example: `(?-i:A(?i:B)C)` matches `ABC`, `AbC`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]\r\n\r\n## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]\r\n\r\n## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]\r\n\r\n## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/non-backtracking-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/non-backtracking-expressions.md)\r\n-->\r\n\r\nA <dfn>Non-Backtracking Expression</dfn> is matched independent of neighboring patterns, and will not backtrack in the event of a failed match. This is often used to improve performance.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?>…)` &mdash; Matches the provided pattern, but no backtracking is performed if the match fails.\r\n\r\n## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/recursion.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/recursion.md)\r\n-->\r\n\r\nA <dfn>Recursive Expression</dfn> provides a mechanism for re-evaluating a [capture group] inside of itself, to handle cases such as matching balanced parenthesis or brackets, etc.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?R)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n- <code>(?0)</code> &mdash; Reevaluates the entire pattern starting at the current position.\r\n\r\n## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/conditional-expressions.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/conditional-expressions.md)\r\n-->\r\n\r\nA <dfn>Conditional Expression</dfn> checks a condition and evaluates its first alternative if the condition is **true**; otherwise, it evaluates its second alternative.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>|<em>no-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches *no-pattern*.\r\n- <code>(?(<em>condition</em>)<em>yes-pattern</em>)</code> &mdash; Matches *yes-pattern* if *condition* is **true**; otherwise, matches the empty string.\r\n\r\n#### Conditions\r\n\r\nThe following conditions are supported:\r\n\r\n- <code>(?(?=<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(?!<em>test-pattern</em>)…)</code> &mdash; Evaluates to **true** if a negative [lookahead] for *test-pattern* matches; Otherwise, evaluates to **false**.\r\n- <code>(?(<em>n</em>)…)</code> &mdash; Evaluates to **true** if the [capture group] at offset *n* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(&lt;<em>name</em>&gt;)…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?('<em>name</em>')…)</code> &mdash; Evaluates to **true** if the [named capture group] with the name *name* was successfully matched; Otherwise, evaluates to **false**.\r\n- <code>(?(R)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression]; Otherwise, evaluates to **false**.\r\n- <code>(?(R<em>n</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [capture group] at offset *n*; Otherwise, evaluates to **false**.\r\n- <code>(?(R&<em>name</em>)…)</code> &mdash; Evaluates to **true** if inside a [recursive expression] for the [named capture group] with the name *name*; Otherwise, evaluates to **false**.\r\n- <a name=\"define-condition\"></a><code>(?(DEFINE)…)</code> &mdash; Always evaluates to **false**. This allows you to define [Subroutines].\r\n\r\n## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/subroutines.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/subroutines.md)\r\n-->\r\n\r\nA <dfn>Subroutine</dfn> is a pre-defined [capture group] or [named capture group] that can be reused in multiple places within the pattern to re-evaluate the subexpression from the group.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/subroutines.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?(DEFINE)…)` &mdash; Defines a set of reusable [capture groups] that can be referenced elsewhere in the pattern.\r\n- <code>(?<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is *n*.\r\n- <code>(?-<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the left of the current *Atom*. Example: `(?-1)` would revaluate the last declared [capture group].\r\n- <code>(?+<em>n</em>)</code> &mdash; Where *n* is an integer >= 1. Evaluates the [capture group] whose offset is the *n*th [capture group] declared to the right of the current *Atom*. Example: `(?+1)` would evaluate the next declared [capture group].\r\n- <code>(?&<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n- <code>(?P&gt;<em>name</em>)</code> &mdash; Evaluates the [named capture group] with the provided *name*.\r\n\r\n### Example\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: example\")</sup>\r\n\r\n\r\n```re\r\n(?(DEFINE)\r\n  (?<Year>\\d{4}|[+-]\\d{5,})\r\n  (?<Month>0[1-9]|1[0-2])\r\n  (?<Day>0[1-9]|2[0-9]|3[01])\r\n)\r\n(?<Date>(?&Year)-(?&Month)-(?&Day)|(?&Year)(?&Month)(?&Day))\r\n```\r\n\r\n## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/glib-gregex/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/glib-gregex/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: #feature-flags\r\n[Flag]: #feature-flags\r\n[RegExp Flags]: #feature-flags\r\n[RegExp Flag]: #feature-flags\r\n[Anchors]: #feature-anchors\r\n[Anchor]: #feature-anchors\r\n[Buffer Boundaries]: #feature-buffer-boundaries\r\n[Buffer Boundary]: #feature-buffer-boundaries\r\n[Word Boundaries]: #feature-word-boundaries\r\n[Word Boundary]: #feature-word-boundaries\r\n[Text Segment Boundaries]: #feature-text-segment-boundaries\r\n[Text Segment Boundary]: #feature-text-segment-boundaries\r\n[Continuation Escape]: #feature-continuation-escape\r\n[Alternatives]: #feature-alternatives\r\n[Alternative]: #feature-alternatives\r\n[Wildcard]: #feature-wildcard\r\n[Wildcards]: #feature-wildcard\r\n[Character Classes]: #feature-character-classes\r\n[Character Class]: #feature-character-classes\r\n[Posix Character Classes]: #feature-posix-character-classes\r\n[Posix Character Class]: #feature-posix-character-classes\r\n[Negated Posix Character Classes]: #feature-negated-posix-character-classes\r\n[Negated Posix Character Class]: #feature-negated-posix-character-classes\r\n[Collating Elements]: #feature-collating-elements\r\n[Collating Element]: #feature-collating-elements\r\n[Equivalence Classes]: #feature-equivalence-classes\r\n[Equivalence Class]: #feature-equivalence-classes\r\n[Character Class Escapes]: #feature-character-class-escapes\r\n[Character Class Escape]: #feature-character-class-escapes\r\n[Line Endings Escape]: #feature-line-endings-escape\r\n[Character Property Escapes]: #feature-character-property-escapes\r\n[Character Property Escape]: #feature-character-property-escapes\r\n[Character Class Nested Set]: #feature-character-class-nested-set\r\n[Character Class Nested Sets]: #feature-character-class-nested-set\r\n[Character Class Intersection]: #feature-character-class-intersection\r\n[Character Class Intersections]: #feature-character-class-intersection\r\n[Character Class Union]: #feature-character-class-union\r\n[Character Class Unions]: #feature-character-class-union\r\n[Character Class Subtraction]: #feature-character-class-subtraction\r\n[Character Class Symmetric Difference]: #feature-character-class-symmetric-difference\r\n[Character Class Symmetric Differences]: #feature-character-class-symmetric-difference\r\n[Character Class Complement]: #feature-character-class-complement\r\n[Character Class Complements]: #feature-character-class-complement\r\n[Quoted Characters]: #feature-quoted-characters\r\n[Quantifiers]: #feature-quantifiers\r\n[Quantifier]: #feature-quantifiers\r\n[Lazy Quantifiers]: #feature-lazy-quantifiers\r\n[Lazy Quantifier]: #feature-lazy-quantifiers\r\n[Possessive Quantifiers]: #feature-possessive-quantifiers\r\n[Possessive Quantifier]: #feature-possessive-quantifiers\r\n[Capturing Groups]: #feature-capturing-groups\r\n[Capturing Group]: #feature-capturing-groups\r\n[Capture Groups]: #feature-capturing-groups\r\n[Capture Group]: #feature-capturing-groups\r\n[Named Capturing Groups]: #feature-named-capturing-groups\r\n[Named Capturing Group]: #feature-named-capturing-groups\r\n[Named Capture Groups]: #feature-named-capturing-groups\r\n[Named Capture Group]: #feature-named-capturing-groups\r\n[Non-Capturing Groups]: #feature-non-capturing-groups\r\n[Non-Capturing group]: #feature-non-capturing-groups\r\n[Backreferences]: #feature-backreferences\r\n[Backreference]: #feature-backreferences\r\n[Comments]: #feature-comments\r\n[Comment]: #feature-comments\r\n[Line Comments]: #feature-line-comments\r\n[Line Comment]: #feature-line-comments\r\n[x-mode Comments]: #feature-line-comments\r\n[x-mode Comment]: #feature-line-comments\r\n[Modifiers]: #feature-modifiers\r\n[Modifier]: #feature-modifiers\r\n[Branch Reset]: #feature-branch-reset\r\n[Lookahead]: #feature-lookahead\r\n[Lookbehind]: #feature-lookbehind\r\n[Non-Backtracking Expressions]: #feature-non-backtracking-expressions\r\n[Non-Backtracking Expression]: #feature-non-backtracking-expressions\r\n[Recursion]: #feature-recursion\r\n[Recursive Expression]: #feature-recursion\r\n[Conditional Expressions]: #feature-conditional-expressions\r\n[Conditional Expression]: #feature-conditional-expressions\r\n[Subroutines]: #feature-subroutines\r\n[Subroutine]: #feature-subroutines\r\n[Callouts]: #feature-callouts\r\n[Callout]: #feature-callouts\r\n[Backtracking Control Verbs]: #feature-backtracking-control-verbs\r\n[Backtracking Control Verb]: #feature-backtracking-control-verbs\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html\r\n\r\n[reference:Flags]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.11\r\n[reference:Anchors]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.5\r\n[reference:Buffer Boundaries]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.12\r\n[reference:Word Boundaries]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.12\r\n[reference:Text Segment Boundaries]: #not-supported-features\r\n[reference:Continuation Escape]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.12\r\n[reference:Alternatives]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.10\r\n[reference:Wildcard]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.6\r\n[reference:Character Classes]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.8\r\n[reference:Posix Character Classes]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.9\r\n[reference:Negated Posix Character Classes]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.9\r\n[reference:Collating Elements]: #not-supported-features\r\n[reference:Equivalence Classes]: #not-supported-features\r\n[reference:Character Class Escapes]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.9\r\n[reference:Line Endings Escape]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.10\r\n[reference:Character Property Escapes]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4.11\r\n[reference:Character Class Nested Set]: #not-supported-features\r\n[reference:Character Class Intersection]: #not-supported-features\r\n[reference:Character Class Union]: #not-supported-features\r\n[reference:Character Class Subtraction]: #not-supported-features\r\n[reference:Character Class Symmetric Difference]: #not-supported-features\r\n[reference:Character Class Complement]: #not-supported-features\r\n[reference:Quoted Characters]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.4\r\n[reference:Quantifiers]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.14\r\n[reference:Lazy Quantifiers]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.14\r\n[reference:Possessive Quantifiers]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.15\r\n[reference:Capturing Groups]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.12\r\n[reference:Named Capturing Groups]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.13\r\n[reference:Non-Capturing Groups]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.12\r\n[reference:Backreferences]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.16\r\n[reference:Comments]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.19\r\n[reference:Line Comments]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.19\r\n[reference:Modifiers]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.11\r\n[reference:Branch Reset]: #not-supported-features\r\n[reference:Lookahead]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.17.5\r\n[reference:Lookbehind]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.17.6\r\n[reference:Non-Backtracking Expressions]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.15\r\n[reference:Recursion]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.20\r\n[reference:Conditional Expressions]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.18\r\n[reference:Subroutines]: https://developer-old.gnome.org/glib/unstable/glib-regex-syntax.html#id-1.5.25.18.9\r\n[reference:Callouts]: #not-supported-features\r\n[reference:Backtracking Control Verbs]: #not-supported-features\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/engine.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/engine-toc.yml"
      ],
      "referenceSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/engine.md"
      ],
      "languagesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/glib-gregex/engine.md"
      ]
    },
    {
      "docs": {
        "$ref": "#"
      },
      "type": "Engine",
      "id": "ecmascript",
      "engine": "ecmascript",
      "name": "ECMAScript",
      "built": true,
      "outFile": "engines/ecmascript.md",
      "priority": 8,
      "reference": "https://tc39.es/ecma262/#sec-regexp-regular-expression-objects",
      "supported_features": [
        {
          "$ref": "#/features/0/engineFeatures/8"
        },
        {
          "$ref": "#/features/1/engineFeatures/8"
        },
        {
          "$ref": "#/features/3/engineFeatures/8"
        },
        {
          "$ref": "#/features/6/engineFeatures/8"
        },
        {
          "$ref": "#/features/7/engineFeatures/8"
        },
        {
          "$ref": "#/features/8/engineFeatures/8"
        },
        {
          "$ref": "#/features/13/engineFeatures/8"
        },
        {
          "$ref": "#/features/15/engineFeatures/8"
        },
        {
          "$ref": "#/features/23/engineFeatures/8"
        },
        {
          "$ref": "#/features/24/engineFeatures/8"
        },
        {
          "$ref": "#/features/26/engineFeatures/8"
        },
        {
          "$ref": "#/features/27/engineFeatures/8"
        },
        {
          "$ref": "#/features/28/engineFeatures/8"
        },
        {
          "$ref": "#/features/29/engineFeatures/8"
        },
        {
          "$ref": "#/features/34/engineFeatures/8"
        },
        {
          "$ref": "#/features/35/engineFeatures/8"
        }
      ],
      "unsupported_features": [
        {
          "$ref": "#/features/2/engineFeatures/8"
        },
        {
          "$ref": "#/features/4/engineFeatures/8"
        },
        {
          "$ref": "#/features/5/engineFeatures/8"
        },
        {
          "$ref": "#/features/9/engineFeatures/8"
        },
        {
          "$ref": "#/features/10/engineFeatures/8"
        },
        {
          "$ref": "#/features/11/engineFeatures/8"
        },
        {
          "$ref": "#/features/12/engineFeatures/8"
        },
        {
          "$ref": "#/features/14/engineFeatures/8"
        },
        {
          "$ref": "#/features/16/engineFeatures/8"
        },
        {
          "$ref": "#/features/17/engineFeatures/8"
        },
        {
          "$ref": "#/features/18/engineFeatures/8"
        },
        {
          "$ref": "#/features/19/engineFeatures/8"
        },
        {
          "$ref": "#/features/20/engineFeatures/8"
        },
        {
          "$ref": "#/features/21/engineFeatures/8"
        },
        {
          "$ref": "#/features/22/engineFeatures/8"
        },
        {
          "$ref": "#/features/25/engineFeatures/8"
        },
        {
          "$ref": "#/features/30/engineFeatures/8"
        },
        {
          "$ref": "#/features/31/engineFeatures/8"
        },
        {
          "$ref": "#/features/32/engineFeatures/8"
        },
        {
          "$ref": "#/features/33/engineFeatures/8"
        },
        {
          "$ref": "#/features/36/engineFeatures/8"
        },
        {
          "$ref": "#/features/37/engineFeatures/8"
        },
        {
          "$ref": "#/features/38/engineFeatures/8"
        },
        {
          "$ref": "#/features/39/engineFeatures/8"
        },
        {
          "$ref": "#/features/40/engineFeatures/8"
        },
        {
          "$ref": "#/features/41/engineFeatures/8"
        }
      ],
      "features": [
        {
          "$ref": "#/features/0/engineFeatures/8"
        },
        {
          "$ref": "#/features/1/engineFeatures/8"
        },
        {
          "$ref": "#/features/2/engineFeatures/8"
        },
        {
          "$ref": "#/features/3/engineFeatures/8"
        },
        {
          "$ref": "#/features/4/engineFeatures/8"
        },
        {
          "$ref": "#/features/5/engineFeatures/8"
        },
        {
          "$ref": "#/features/6/engineFeatures/8"
        },
        {
          "$ref": "#/features/7/engineFeatures/8"
        },
        {
          "$ref": "#/features/8/engineFeatures/8"
        },
        {
          "$ref": "#/features/9/engineFeatures/8"
        },
        {
          "$ref": "#/features/10/engineFeatures/8"
        },
        {
          "$ref": "#/features/11/engineFeatures/8"
        },
        {
          "$ref": "#/features/12/engineFeatures/8"
        },
        {
          "$ref": "#/features/13/engineFeatures/8"
        },
        {
          "$ref": "#/features/14/engineFeatures/8"
        },
        {
          "$ref": "#/features/15/engineFeatures/8"
        },
        {
          "$ref": "#/features/16/engineFeatures/8"
        },
        {
          "$ref": "#/features/17/engineFeatures/8"
        },
        {
          "$ref": "#/features/18/engineFeatures/8"
        },
        {
          "$ref": "#/features/19/engineFeatures/8"
        },
        {
          "$ref": "#/features/20/engineFeatures/8"
        },
        {
          "$ref": "#/features/21/engineFeatures/8"
        },
        {
          "$ref": "#/features/22/engineFeatures/8"
        },
        {
          "$ref": "#/features/23/engineFeatures/8"
        },
        {
          "$ref": "#/features/24/engineFeatures/8"
        },
        {
          "$ref": "#/features/25/engineFeatures/8"
        },
        {
          "$ref": "#/features/26/engineFeatures/8"
        },
        {
          "$ref": "#/features/27/engineFeatures/8"
        },
        {
          "$ref": "#/features/28/engineFeatures/8"
        },
        {
          "$ref": "#/features/29/engineFeatures/8"
        },
        {
          "$ref": "#/features/30/engineFeatures/8"
        },
        {
          "$ref": "#/features/31/engineFeatures/8"
        },
        {
          "$ref": "#/features/32/engineFeatures/8"
        },
        {
          "$ref": "#/features/33/engineFeatures/8"
        },
        {
          "$ref": "#/features/34/engineFeatures/8"
        },
        {
          "$ref": "#/features/35/engineFeatures/8"
        },
        {
          "$ref": "#/features/36/engineFeatures/8"
        },
        {
          "$ref": "#/features/37/engineFeatures/8"
        },
        {
          "$ref": "#/features/38/engineFeatures/8"
        },
        {
          "$ref": "#/features/39/engineFeatures/8"
        },
        {
          "$ref": "#/features/40/engineFeatures/8"
        },
        {
          "$ref": "#/features/41/engineFeatures/8"
        }
      ],
      "languages": [
        {
          "$ref": "#/languages/4"
        }
      ],
      "content": "# Engine: ECMAScript <a id=\"top\"></a>\r\n<sup>[Home](../index.md)</sup>\n<sup> \\| </sup>\n<sup>[Engines](index.md)</sup>\n<sup> \\| </sup>\n<sup>[Reference]</sup>\n<sup> \\| </sup>\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/engine.md \"source for: name, reference\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/engines/ecmascript/engine.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/engine.md)\r\n-->\r\n\r\n\r\n\r\n## Languages\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/engine.md \"source for: languages\")</sup>\r\n\r\n- [ECMAScript]\r\n\r\n## Features\r\n\r\n<a id=\"supported-features\"></a>The following features are supported:\r\n\r\n- ✔ [Flags]\r\n- ✔ [Anchors]\r\n- ✔ [Word Boundaries]\r\n- ✔ [Alternatives]\r\n- ✔ [Wildcard]\r\n- ✔ [Character Classes]\r\n- ✔ [Character Class Escapes]\r\n- ✔ [Character Property Escapes]\r\n- ✔ [Quantifiers]\r\n- ✔ [Lazy Quantifiers]\r\n- ✔ [Capturing Groups]\r\n- ✔ [Named Capturing Groups]\r\n- ✔ [Non-Capturing Groups]\r\n- ✔ [Backreferences]\r\n- ✔ [Lookahead]\r\n- ✔ [Lookbehind]\r\n\r\n<a id=\"not-supported-features\"></a>The following features are *not* supported:\r\n\r\n- ❌ [Buffer Boundaries]\r\n- ❌ [Text Segment Boundaries]\r\n- ❌ [Continuation Escape]\r\n- ❌ [Posix Character Classes]\r\n- ❌ [Negated Posix Character Classes]\r\n- ❌ [Collating Elements]\r\n- ❌ [Equivalence Classes]\r\n- ❌ [Line Endings Escape]\r\n- ❌ [Character Class Nested Set]\r\n- ❌ [Character Class Intersection]\r\n- ❌ [Character Class Union]\r\n- ❌ [Character Class Subtraction]\r\n- ❌ [Character Class Symmetric Difference]\r\n- ❌ [Character Class Complement]\r\n- ❌ [Quoted Characters]\r\n- ❌ [Possessive Quantifiers]\r\n- ❌ [Comments]\r\n- ❌ [Line Comments]\r\n- ❌ [Modifiers]\r\n- ❌ [Branch Reset]\r\n- ❌ [Non-Backtracking Expressions]\r\n- ❌ [Recursion]\r\n- ❌ [Conditional Expressions]\r\n- ❌ [Subroutines]\r\n- ❌ [Callouts]\r\n- ❌ [Backtracking Control Verbs]\r\n\r\n## Feature: Flags\r\n<sup>[Main article][article:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Flags]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/flags.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/flags.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/flags.md)\r\n-->\r\n\r\n<dfn>Flags</dfn> control certain aspects of the matching behavior of a pattern.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/flags.md \"source for: syntax\")</sup>\r\n\r\n\r\nThe following flags are supported:\r\n- `i` &mdash; Ignore Case. Matches [character classes] using a case-insensitive comparison.\r\n- `m` &mdash; Multiline. Causes the [anchors] `^` and `$` to match the start and end of each line (respectively), rather than the start and end of the input.\r\n- `s` &mdash; Singleline. Causes the [wildcard] `.` to match newline characters.\r\n- `u` &mdash; Unicode. Enforces stricter parsing of `RegExp` patterns, improved handling of escaped Unicode surrogate pairs, and allows the use of <code>\\u{<em>CodePoint</em>}</code>.\r\n- `g` &mdash; Global. Indicates the match must start at or after the index specified by the `lastIndex` property of the `RegExp`. When matching completes successfully, `lastIndex` will be updated with the ending index of the last match.\r\n- `y` &mdash; Sticky. Indicates the match must start at the index specified by the `lastIndex` property of the `RegExp`. When matching completes successfully, `lastIndex` will be updated with the ending index of the last match.\r\n- `d` &mdash; Indices. Indicates the match result object will include an `indices` property with the start and end indices of each captured subexpression.\r\n  > NOTE: This feature is at Stage 4 of the ECMA-262 specification process. See the [RegExp Match Indices proposal](https://github.com/tc39/proposal-regexp-match-indices) for more information.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/flags.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Modifiers]\r\n\r\n## Feature: Anchors\r\n<sup>[Main article][article:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Anchors]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/anchors.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/anchors.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/anchors.md)\r\n-->\r\n\r\n<dfn>Anchors</dfn> match the start or end of a line.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `^` &mdash; Matches the start of a line when the `m` (multiline) [flag] is set. Otherwise, matches the start of the input.\r\n- `$` &mdash; Matches the end of a line when the `m` (multiline) [flag] is set. Otherwise, matches the end of the input.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/anchors.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Buffer Boundaries\r\n<sup>[Main article][article:Buffer Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/buffer-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/buffer-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/buffer-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Word Boundaries\r\n<sup>[Main article][article:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Word Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/word-boundaries.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/word-boundaries.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/word-boundaries.md)\r\n-->\r\n\r\nA <dfn>Word Boundary</dfn> is an *Atom* that matches the start or the end of a word.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\b` &mdash; Matches the start or the end of a word.\r\n- `\\B` &mdash; Matches when *not* at the start or the end of a word.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/word-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Text Segment Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Text Segment Boundaries\r\n<sup>[Main article][article:Text Segment Boundaries]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/text-segment-boundaries.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/text-segment-boundaries.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/text-segment-boundaries.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Continuation Escape]\r\n\r\n## Feature: Continuation Escape\r\n<sup>[Main article][article:Continuation Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/continuation-escape.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/anchors-and-boundaries/continuation-escape.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/anchors-and-boundaries/continuation-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Anchors]\r\n- [Buffer Boundaries]\r\n- [Word Boundaries]\r\n- [Text Segment Boundaries]\r\n\r\n## Feature: Alternatives\r\n<sup>[Main article][article:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Alternatives]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/alternatives.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/alternatives.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/alternatives.md)\r\n-->\r\n\r\nAn <dfn>Alternative</dfn> represents two or more branches in a pattern. If first branch of a pattern fails to match, each alternative is attempted from left to right until a match is found.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/alternatives.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `…|…` &mdash; Matches the pattern to the left of the `|`. If that fails, matches the pattern to the right of `|`.\r\n\r\n## Feature: Wildcard\r\n<sup>[Main article][article:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Wildcard]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/wildcard.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/wildcard.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/wildcard.md)\r\n-->\r\n\r\nA <dfn>Wildcard</dfn> matches a single, non-newline character.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/wildcard.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `.` &mdash; Matches any character except newline characters. If the `s` (single-line) [flag] is set then this matches any character.\r\n\r\n## Feature: Character Classes\r\n<sup>[Main article][article:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-classes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-classes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-classes.md)\r\n-->\r\n\r\nA <dfn>Character Class</dfn> is an *Atom* that specifies a set of characters to match a single character in the set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `[…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `^` at the start and `-` between two entries in the set. Matches a character in the set. Example: `[abc]` matches `a`, `b`, or `c`.\r\n- <a id=\"negated-character-class\"></a>`[^…]` &mdash; Where `…` is one or more single characters or character class escapes, excluding `-` between two entries in the set. Matches any character not in the set. Example: `[^abc]` matches `d`, `e`, or `f`, etc., but not `a`, `b`, or `c`.\r\n- <a id=\"character-class-range\"></a><code>[<em>a</em>-<em>z</em>]</code> &mdash; Where *a* and *z* are single characters or character escapes. Matches any character in the range between *a* and *z* (inclusive). Example: `[a-c]` matches `a`, `b`, or `c`, but not `d`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Posix Character Classes\r\n<sup>[Main article][article:Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/posix-character-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Negated Posix Character Classes\r\n<sup>[Main article][article:Negated Posix Character Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/negated-posix-character-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/negated-posix-character-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/negated-posix-character-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Collating Elements\r\n<sup>[Main article][article:Collating Elements]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/collating-elements.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/collating-elements.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/collating-elements.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Equivalence Classes\r\n<sup>[Main article][article:Equivalence Classes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/equivalence-classes.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/equivalence-classes.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/equivalence-classes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Escapes\r\n<sup>[Main article][article:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Class Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Class Escape</dfn> is a single character escape that represents an entire character class. They can be used as an element of a [Character Class] or as an *Atom*. It is often the case that a lower-case escape character is the inclusive set, while an upper-case variant of the same character excludes that set.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `\\d` &mdash; A decimal digit character in the range 0-9. Equivalent to `[0-9]`.\r\n- `\\D` &mdash; Any character not in the range 0-9. Equivalent to `[^0-9]`.\r\n- `\\w` &mdash; Any \"word\" character. Equivalent to `[a-zA-Z0-9_]`.\r\n- `\\W` &mdash; Any non-\"word\" character. Equivalent to `[^a-zA-Z0-9_]`.\r\n- `\\s` &mdash; Any whitespace character.\r\n- `\\S` &mdash; Any non-whitespace character.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Line Endings Escape\r\n<sup>[Main article][article:Line Endings Escape]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/line-endings-escape.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/line-endings-escape.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/line-endings-escape.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Property Escapes\r\n<sup>[Main article][article:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Character Property Escapes]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-property-escapes.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-property-escapes.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-property-escapes.md)\r\n-->\r\n\r\nA <dfn>Character Property Escape</dfn> is an escape sequence used to match a character with a specific character property.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>\\p<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that has the property *X*.\r\n- <code>\\p{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that has the property *name*.\r\n- <code>\\P<em>X</em></code> &mdash; Where *X* is a single character. Matches a character that does not have the property *X*.\r\n- <code>\\P{<em>name</em>}</code> &mdash; Where *name* is a predefined property name. Matches a character that does not have the property *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-property-escapes.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Nested Set\r\n<sup>[Main article][article:Character Class Nested Set]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-nested-set.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-nested-set.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-nested-set.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-nested-set.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Intersection\r\n<sup>[Main article][article:Character Class Intersection]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-intersection.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-intersection.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-intersection.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-intersection.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Union\r\n<sup>[Main article][article:Character Class Union]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-union.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-union.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-union.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-union.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Subtraction\r\n<sup>[Main article][article:Character Class Subtraction]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: name\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-subtraction.md \"source for: reference, supported, description\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-subtraction.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-subtraction.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-subtraction.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Symmetric Difference]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Symmetric Difference\r\n<sup>[Main article][article:Character Class Symmetric Difference]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-symmetric-difference.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-symmetric-difference.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-symmetric-difference.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-symmetric-difference.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Complement]\r\n\r\n## Feature: Character Class Complement\r\n<sup>[Main article][article:Character Class Complement]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/character-class-complement.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/character-classes/character-class-complement.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/character-class-complement.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/character-classes/character-class-complement.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Character Classes]\r\n- [Posix Character Classes]\r\n- [Negated Posix Character Classes]\r\n- [Collating Elements]\r\n- [Equivalence Classes]\r\n- [Character Class Escapes]\r\n- [Line Endings Escape]\r\n- [Character Property Escapes]\r\n- [Character Class Nested Set]\r\n- [Character Class Intersection]\r\n- [Character Class Union]\r\n- [Character Class Subtraction]\r\n- [Character Class Symmetric Difference]\r\n\r\n## Feature: Quoted Characters\r\n<sup>[Main article][article:Quoted Characters]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quoted-characters.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/quoted-characters.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quoted-characters.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Quantifiers\r\n<sup>[Main article][article:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/quantifiers.md)\r\n-->\r\n\r\n<dfn>Quantifiers</dfn> specify repetition of an *Atom*. By default, quantifiers are \"greedy\" in that they attempt to match as many instances of the preceding *Atom* as possible to satisfy the pattern before backtracking.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*` &mdash; Matches the preceding *Atom* zero or more times. Example: `a*b` matches `b`, `ab`, `aab`, `aaab`, etc.\r\n- `+` &mdash; Matches the preceding *Atom* one or more times. Example: `a+b` matches `ab`, `aab`, `aaab`, etc., but not `b`.\r\n- `?` &mdash; Matches the preceding *Atom* zero or one times. Example: `a?b` matches `b`, `ab`.\r\n- <code>{<em>n</em>}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times. Example: `a{2}` matches `aa` but not `a` or `aaa`.\r\n- <code>{<em>n</em>,}</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times. Example: `a{2,}` matches `aa`, `aaa`, `aaaa`, etc., but not `a`.\r\n- <code>{<em>n</em>,<em>m</em>}</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times. Example: `a{2,3}` matches `aa`, `aaa`, `aaaa`, etc., but not `a` or `aaaa`.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lazy Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Lazy Quantifiers\r\n<sup>[Main article][article:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lazy Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/lazy-quantifiers.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/lazy-quantifiers.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/lazy-quantifiers.md)\r\n-->\r\n\r\n<dfn>Lazy Quantifiers</dfn> specify repetition of an *Atom*, but attempt to match as few instances of the preceding *Atom* as possible to satisfy the pattern before advancing.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `*?` &mdash; Matches the preceding *Atom* zero or more times.\r\n- `+?` &mdash; Matches the preceding *Atom* one or more times.\r\n- `??` &mdash; Matches the preceding *Atom* zero or one times.\r\n- <code>{<em>n</em>}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* exactly *n* times.\r\n- <code>{<em>n</em>,}?</code> &mdash; Where *n* is an integer. Matches the preceding *Atom* at-least *n* times.\r\n- <code>{<em>n</em>,<em>m</em>}?</code> &mdash; Where *n* and *m* are integers, and *m* >= *n*. Matches the preceding *Atom* at-least *n* times and at-most *m* times.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/lazy-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Possessive Quantifiers]\r\n\r\n## Feature: Possessive Quantifiers\r\n<sup>[Main article][article:Possessive Quantifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/possessive-quantifiers.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/quantifiers/possessive-quantifiers.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/quantifiers/possessive-quantifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Quantifiers]\r\n- [Lazy Quantifiers]\r\n\r\n## Feature: Capturing Groups\r\n<sup>[Main article][article:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by index. A Capturing Group can be captured and returned by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(…)` &mdash; Groups the subexpression as a single *Atom*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Named Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Named Capturing Groups\r\n<sup>[Main article][article:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Named Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/named-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/named-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/named-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Named Capturing Group</dfn> is a subexpression that can be captured and returned by the matching algorithm. A Named Capturing Group is also an *Atom* and can be repeated using [Quantifiers] and referenced using [Backreferences] by name.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/named-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>(?&lt;<em>name</em>&gt;…)</code> &mdash; Groups the subexpression as a single *Atom* associated with the provided *name*. The result is captured and returned by the matching algorithm.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/named-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Non-Capturing Groups]\r\n- [Backreferences]\r\n- [Recursion]\r\n- [Subroutines]\r\n\r\n## Feature: Non-Capturing Groups\r\n<sup>[Main article][article:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Non-Capturing Groups]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/non-capturing-groups.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-capturing-groups.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/non-capturing-groups.md)\r\n-->\r\n\r\nA <dfn>Non-capturing Group</dfn> is a subexpression that can be treated as an *Atom* and can be repeated using [Quantifiers] but cannot be referenced using [Backreferences]. A Non-capturing Group is not captured by the matching algorithm.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: syntax\")</sup>\r\n\r\n\r\n- `(?:…)` &mdash; Groups the subexpression as a single *Atom*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-capturing-groups.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Backreferences\r\n<sup>[Main article][article:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Backreferences]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/backreferences.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backreferences.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/backreferences.md)\r\n-->\r\n\r\n<dfn>Backreferences</dfn> allow a pattern to re-match a previously matched capture group<sup>[1][Capturing Groups] [2][Named Capturing Groups]</sup> either by number (_n_) or by _name_.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <code>&#x5c;<em>n</em></code> &mdash; Where *n* is a decimal digit in the range 1-9. Matches the same string as the [capture group] *n*.\r\n- <code>\\k&lt;<em>name</em>&gt;</code> &mdash; Matches the same string as the [named capture group] with the name *name*.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backreferences.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Capturing Groups]\r\n- [Named Capturing Groups]\r\n\r\n## Feature: Comments\r\n<sup>[Main article][article:Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/comments.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/comments.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Line Comments]\r\n\r\n## Feature: Line Comments\r\n<sup>[Main article][article:Line Comments]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/line-comments.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/comments/line-comments.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/comments/line-comments.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Comments]\r\n\r\n## Feature: Modifiers\r\n<sup>[Main article][article:Modifiers]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/modifiers.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/flags-and-modifiers/modifiers.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/flags-and-modifiers/modifiers.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Flags]\r\n\r\n## Feature: Branch Reset\r\n<sup>[Main article][article:Branch Reset]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/branch-reset.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/branch-reset.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/branch-reset.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Lookahead\r\n<sup>[Main article][article:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookahead]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/lookahead.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookahead.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/lookahead.md)\r\n-->\r\n\r\nA <dfn>Lookahead</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the right of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookahead\"></a>`(?=…)` &mdash; Positive Lookahead. Matches if the provided pattern would match but does not advance the current position.\r\n- <a id=\"negative-lookahead\"></a>`(?!…)` &mdash; Negative Lookahead. Matches if the provided pattern would not match, but does not advance the current position.\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookahead.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookbehind]\r\n\r\n## Feature: Lookbehind\r\n<sup>[Main article][article:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Reference][reference:Lookbehind]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/lookbehind.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/lookaround/lookbehind.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/lookbehind.md)\r\n-->\r\n\r\nA <dfn>Lookbehind</dfn> is a zero-width assertion that matches if the provided pattern would match the characters to the left of the current position.\r\n\r\n### Syntax\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: syntax\")</sup>\r\n\r\n\r\n- <a id=\"positive-lookbehind\"></a>`(?<=…)` &mdash; Positive Lookbehind. Matches if the provided pattern would match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n- <a id=\"negative-lookbehind\"></a>`(?<!…)` &mdash; Negative Lookbehind. Matches if the provided pattern would not match the preceding characters, but does not advance the current position. The pattern must have a fixed length (unbounded [quantifiers] are not permitted).\r\n\r\n### See Also\r\n<sup>[Improve this section](https://github.com/rbuckton/regexp-features/edit/main/src/features/lookaround/lookbehind.md \"source for: see_also\")</sup>\r\n\r\n\r\n- [Lookahead]\r\n\r\n## Feature: Non-Backtracking Expressions\r\n<sup>[Main article][article:Non-Backtracking Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/non-backtracking-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/non-backtracking-expressions.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/non-backtracking-expressions.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Recursion\r\n<sup>[Main article][article:Recursion]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/recursion.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/recursion.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/recursion.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Conditional Expressions\r\n<sup>[Main article][article:Conditional Expressions]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/alternatives/conditional-expressions.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/conditional-expressions.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/alternatives/conditional-expressions.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Subroutines\r\n<sup>[Main article][article:Subroutines]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/subroutines.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/subroutines.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/subroutines.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Callouts\r\n<sup>[Main article][article:Callouts]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/callouts.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/callouts.md \"source for: supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/callouts.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n## Feature: Backtracking Control Verbs\r\n<sup>[Main article][article:Backtracking Control Verbs]</sup>\n<sup> \\| </sup>\n<sup>[Back to top](#top)</sup>\n<sup> \\| </sup>\n<sup>Improve this section: [1](https://github.com/rbuckton/regexp-features/edit/main/src/features/groups-and-backtracking/backtracking-control-verbs.md \"source for: name, description\"), [2](https://github.com/rbuckton/regexp-features/edit/main/src/engines/ecmascript/features/backtracking-control-verbs.md \"source for: reference, supported\")</sup>\r\n\r\n\r\n<!--\r\n'name' sources:\r\n  - [](../../src/features/groups-and-backtracking/backtracking-control-verbs.md)\r\n-->\r\n\r\n\r\n<!--\r\n'reference' sources:\r\n  - [](../../src/engines/ecmascript/features/backtracking-control-verbs.md)\r\n-->\r\n\r\n> ❌ This feature is not supported.\r\n\r\n\r\n\r\n\r\n[new engine]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-engines\r\n[new feature]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-features\r\n[new language]: https://github.com/rbuckton/regexp-features/blob/main/CONTRIBUTING.md#adding-new-languages\r\n\r\n[Flags]: #feature-flags\r\n[Flag]: #feature-flags\r\n[RegExp Flags]: #feature-flags\r\n[RegExp Flag]: #feature-flags\r\n[Anchors]: #feature-anchors\r\n[Anchor]: #feature-anchors\r\n[Buffer Boundaries]: #feature-buffer-boundaries\r\n[Buffer Boundary]: #feature-buffer-boundaries\r\n[Word Boundaries]: #feature-word-boundaries\r\n[Word Boundary]: #feature-word-boundaries\r\n[Text Segment Boundaries]: #feature-text-segment-boundaries\r\n[Text Segment Boundary]: #feature-text-segment-boundaries\r\n[Continuation Escape]: #feature-continuation-escape\r\n[Alternatives]: #feature-alternatives\r\n[Alternative]: #feature-alternatives\r\n[Wildcard]: #feature-wildcard\r\n[Wildcards]: #feature-wildcard\r\n[Character Classes]: #feature-character-classes\r\n[Character Class]: #feature-character-classes\r\n[Posix Character Classes]: #feature-posix-character-classes\r\n[Posix Character Class]: #feature-posix-character-classes\r\n[Negated Posix Character Classes]: #feature-negated-posix-character-classes\r\n[Negated Posix Character Class]: #feature-negated-posix-character-classes\r\n[Collating Elements]: #feature-collating-elements\r\n[Collating Element]: #feature-collating-elements\r\n[Equivalence Classes]: #feature-equivalence-classes\r\n[Equivalence Class]: #feature-equivalence-classes\r\n[Character Class Escapes]: #feature-character-class-escapes\r\n[Character Class Escape]: #feature-character-class-escapes\r\n[Line Endings Escape]: #feature-line-endings-escape\r\n[Character Property Escapes]: #feature-character-property-escapes\r\n[Character Property Escape]: #feature-character-property-escapes\r\n[Character Class Nested Set]: #feature-character-class-nested-set\r\n[Character Class Nested Sets]: #feature-character-class-nested-set\r\n[Character Class Intersection]: #feature-character-class-intersection\r\n[Character Class Intersections]: #feature-character-class-intersection\r\n[Character Class Union]: #feature-character-class-union\r\n[Character Class Unions]: #feature-character-class-union\r\n[Character Class Subtraction]: #feature-character-class-subtraction\r\n[Character Class Symmetric Difference]: #feature-character-class-symmetric-difference\r\n[Character Class Symmetric Differences]: #feature-character-class-symmetric-difference\r\n[Character Class Complement]: #feature-character-class-complement\r\n[Character Class Complements]: #feature-character-class-complement\r\n[Quoted Characters]: #feature-quoted-characters\r\n[Quantifiers]: #feature-quantifiers\r\n[Quantifier]: #feature-quantifiers\r\n[Lazy Quantifiers]: #feature-lazy-quantifiers\r\n[Lazy Quantifier]: #feature-lazy-quantifiers\r\n[Possessive Quantifiers]: #feature-possessive-quantifiers\r\n[Possessive Quantifier]: #feature-possessive-quantifiers\r\n[Capturing Groups]: #feature-capturing-groups\r\n[Capturing Group]: #feature-capturing-groups\r\n[Capture Groups]: #feature-capturing-groups\r\n[Capture Group]: #feature-capturing-groups\r\n[Named Capturing Groups]: #feature-named-capturing-groups\r\n[Named Capturing Group]: #feature-named-capturing-groups\r\n[Named Capture Groups]: #feature-named-capturing-groups\r\n[Named Capture Group]: #feature-named-capturing-groups\r\n[Non-Capturing Groups]: #feature-non-capturing-groups\r\n[Non-Capturing group]: #feature-non-capturing-groups\r\n[Backreferences]: #feature-backreferences\r\n[Backreference]: #feature-backreferences\r\n[Comments]: #feature-comments\r\n[Comment]: #feature-comments\r\n[Line Comments]: #feature-line-comments\r\n[Line Comment]: #feature-line-comments\r\n[x-mode Comments]: #feature-line-comments\r\n[x-mode Comment]: #feature-line-comments\r\n[Modifiers]: #feature-modifiers\r\n[Modifier]: #feature-modifiers\r\n[Branch Reset]: #feature-branch-reset\r\n[Lookahead]: #feature-lookahead\r\n[Lookbehind]: #feature-lookbehind\r\n[Non-Backtracking Expressions]: #feature-non-backtracking-expressions\r\n[Non-Backtracking Expression]: #feature-non-backtracking-expressions\r\n[Recursion]: #feature-recursion\r\n[Recursive Expression]: #feature-recursion\r\n[Conditional Expressions]: #feature-conditional-expressions\r\n[Conditional Expression]: #feature-conditional-expressions\r\n[Subroutines]: #feature-subroutines\r\n[Subroutine]: #feature-subroutines\r\n[Callouts]: #feature-callouts\r\n[Callout]: #feature-callouts\r\n[Backtracking Control Verbs]: #feature-backtracking-control-verbs\r\n[Backtracking Control Verb]: #feature-backtracking-control-verbs\r\n\r\n\r\n[article:Flags]: ../features/flags.md\r\n[article:Anchors]: ../features/anchors.md\r\n[article:Buffer Boundaries]: ../features/buffer-boundaries.md\r\n[article:Word Boundaries]: ../features/word-boundaries.md\r\n[article:Text Segment Boundaries]: ../features/text-segment-boundaries.md\r\n[article:Continuation Escape]: ../features/continuation-escape.md\r\n[article:Alternatives]: ../features/alternatives.md\r\n[article:Wildcard]: ../features/wildcard.md\r\n[article:Character Classes]: ../features/character-classes.md\r\n[article:Posix Character Classes]: ../features/posix-character-classes.md\r\n[article:Negated Posix Character Classes]: ../features/negated-posix-character-classes.md\r\n[article:Collating Elements]: ../features/collating-elements.md\r\n[article:Equivalence Classes]: ../features/equivalence-classes.md\r\n[article:Character Class Escapes]: ../features/character-class-escapes.md\r\n[article:Line Endings Escape]: ../features/line-endings-escape.md\r\n[article:Character Property Escapes]: ../features/character-property-escapes.md\r\n[article:Character Class Nested Set]: ../features/character-class-nested-set.md\r\n[article:Character Class Intersection]: ../features/character-class-intersection.md\r\n[article:Character Class Union]: ../features/character-class-union.md\r\n[article:Character Class Subtraction]: ../features/character-class-subtraction.md\r\n[article:Character Class Symmetric Difference]: ../features/character-class-symmetric-difference.md\r\n[article:Character Class Complement]: ../features/character-class-complement.md\r\n[article:Quoted Characters]: ../features/quoted-characters.md\r\n[article:Quantifiers]: ../features/quantifiers.md\r\n[article:Lazy Quantifiers]: ../features/lazy-quantifiers.md\r\n[article:Possessive Quantifiers]: ../features/possessive-quantifiers.md\r\n[article:Capturing Groups]: ../features/capturing-groups.md\r\n[article:Named Capturing Groups]: ../features/named-capturing-groups.md\r\n[article:Non-Capturing Groups]: ../features/non-capturing-groups.md\r\n[article:Backreferences]: ../features/backreferences.md\r\n[article:Comments]: ../features/comments.md\r\n[article:Line Comments]: ../features/line-comments.md\r\n[article:Modifiers]: ../features/modifiers.md\r\n[article:Branch Reset]: ../features/branch-reset.md\r\n[article:Lookahead]: ../features/lookahead.md\r\n[article:Lookbehind]: ../features/lookbehind.md\r\n[article:Non-Backtracking Expressions]: ../features/non-backtracking-expressions.md\r\n[article:Recursion]: ../features/recursion.md\r\n[article:Conditional Expressions]: ../features/conditional-expressions.md\r\n[article:Subroutines]: ../features/subroutines.md\r\n[article:Callouts]: ../features/callouts.md\r\n[article:Backtracking Control Verbs]: ../features/backtracking-control-verbs.md\r\n\r\n[Reference]: https://tc39.es/ecma262/#sec-regexp-regular-expression-objects\r\n\r\n[reference:Flags]: https://tc39.es/ecma262/#sec-regexpinitialize\r\n[reference:Anchors]: https://tc39.es/ecma262/#sec-assertion\r\n[reference:Buffer Boundaries]: #not-supported-features\r\n[reference:Word Boundaries]: https://tc39.es/ecma262/#sec-assertion\r\n[reference:Text Segment Boundaries]: #not-supported-features\r\n[reference:Continuation Escape]: #not-supported-features\r\n[reference:Alternatives]: https://tc39.es/ecma262/#sec-alternative\r\n[reference:Wildcard]: https://tc39.es/ecma262/#sec-atom\r\n[reference:Character Classes]: https://tc39.es/ecma262/#sec-characterclass\r\n[reference:Posix Character Classes]: #not-supported-features\r\n[reference:Negated Posix Character Classes]: #not-supported-features\r\n[reference:Collating Elements]: #not-supported-features\r\n[reference:Equivalence Classes]: #not-supported-features\r\n[reference:Character Class Escapes]: https://tc39.es/ecma262/#sec-characterclassescape\r\n[reference:Line Endings Escape]: #not-supported-features\r\n[reference:Character Property Escapes]: https://tc39.es/ecma262/#sec-characterclassescape\r\n[reference:Character Class Nested Set]: https://github.com/tc39/proposal-regexp-set-notation\r\n[reference:Character Class Intersection]: https://github.com/tc39/proposal-regexp-set-notation\r\n[reference:Character Class Union]: #not-supported-features\r\n[reference:Character Class Subtraction]: https://github.com/tc39/proposal-regexp-set-notation\r\n[reference:Character Class Symmetric Difference]: #not-supported-features\r\n[reference:Character Class Complement]: #not-supported-features\r\n[reference:Quoted Characters]: #not-supported-features\r\n[reference:Quantifiers]: https://tc39.es/ecma262/#sec-quantifier\r\n[reference:Lazy Quantifiers]: https://tc39.es/ecma262/#sec-quantifier\r\n[reference:Possessive Quantifiers]: #not-supported-features\r\n[reference:Capturing Groups]: https://tc39.es/ecma262/#sec-atom\r\n[reference:Named Capturing Groups]: https://tc39.es/ecma262/#sec-atom\r\n[reference:Non-Capturing Groups]: https://tc39.es/ecma262/#sec-atom\r\n[reference:Backreferences]: https://tc39.es/ecma262/#sec-atomescape\r\n[reference:Comments]: #not-supported-features\r\n[reference:Line Comments]: #not-supported-features\r\n[reference:Modifiers]: #not-supported-features\r\n[reference:Branch Reset]: #not-supported-features\r\n[reference:Lookahead]: https://tc39.es/ecma262/#sec-assertion\r\n[reference:Lookbehind]: https://tc39.es/ecma262/#sec-assertion\r\n[reference:Non-Backtracking Expressions]: #not-supported-features\r\n[reference:Recursion]: #not-supported-features\r\n[reference:Conditional Expressions]: #not-supported-features\r\n[reference:Subroutines]: #not-supported-features\r\n[reference:Callouts]: #not-supported-features\r\n[reference:Backtracking Control Verbs]: #not-supported-features\r\n\r\n[C]: ../languages/c.md\r\n[C++]: ../languages/cpp.md\r\n[C#]: ../languages/csharp.md\r\n[D]: ../languages/d.md\r\n[ECMAScript]: ../languages/ecmascript.md\r\n[F#]: ../languages/fsharp.md\r\n[Haskell]: ../languages/haskell.md\r\n[Java]: ../languages/java.md\r\n[Julia]: ../languages/julia.md\r\n[Lua]: ../languages/lua.md\r\n[Object Pascal]: ../languages/object-pascal.md\r\n[Perl]: ../languages/perl.md\r\n[Python]: ../languages/python.md\r\n[Ruby]: ../languages/ruby.md\r\n[Rust]: ../languages/rust.md\r\n[Tcl]: ../languages/tcl.md\r\n[VB.net]: ../languages/vbnet.md",
      "nameSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/engine.md"
      ],
      "prioritySources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/engine-toc.yml"
      ],
      "referenceSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/engine.md"
      ],
      "languagesSources": [
        "/home/runner/work/regexp-features/regexp-features/src/engines/ecmascript/engine.md"
      ]
    }
  ],
  "featureMatrixes": [
    {
      "columns": [
        {
          "$ref": "#/engines/0"
        },
        {
          "$ref": "#/engines/1"
        },
        {
          "$ref": "#/engines/2"
        },
        {
          "$ref": "#/engines/3"
        },
        {
          "$ref": "#/engines/4"
        },
        {
          "$ref": "#/engines/5"
        },
        {
          "$ref": "#/engines/6"
        }
      ],
      "rows": [
        {
          "feature": {
            "$ref": "#/features/0"
          },
          "cells": [
            {
              "$ref": "#/features/0/engineFeatures/0"
            },
            {
              "$ref": "#/features/0/engineFeatures/1"
            },
            {
              "$ref": "#/features/0/engineFeatures/2"
            },
            {
              "$ref": "#/features/0/engineFeatures/3"
            },
            {
              "$ref": "#/features/0/engineFeatures/4"
            },
            {
              "$ref": "#/features/0/engineFeatures/5"
            },
            {
              "$ref": "#/features/0/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/1"
          },
          "cells": [
            {
              "$ref": "#/features/1/engineFeatures/0"
            },
            {
              "$ref": "#/features/1/engineFeatures/1"
            },
            {
              "$ref": "#/features/1/engineFeatures/2"
            },
            {
              "$ref": "#/features/1/engineFeatures/3"
            },
            {
              "$ref": "#/features/1/engineFeatures/4"
            },
            {
              "$ref": "#/features/1/engineFeatures/5"
            },
            {
              "$ref": "#/features/1/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/2"
          },
          "cells": [
            {
              "$ref": "#/features/2/engineFeatures/0"
            },
            {
              "$ref": "#/features/2/engineFeatures/1"
            },
            {
              "$ref": "#/features/2/engineFeatures/2"
            },
            {
              "$ref": "#/features/2/engineFeatures/3"
            },
            {
              "$ref": "#/features/2/engineFeatures/4"
            },
            {
              "$ref": "#/features/2/engineFeatures/5"
            },
            {
              "$ref": "#/features/2/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/3"
          },
          "cells": [
            {
              "$ref": "#/features/3/engineFeatures/0"
            },
            {
              "$ref": "#/features/3/engineFeatures/1"
            },
            {
              "$ref": "#/features/3/engineFeatures/2"
            },
            {
              "$ref": "#/features/3/engineFeatures/3"
            },
            {
              "$ref": "#/features/3/engineFeatures/4"
            },
            {
              "$ref": "#/features/3/engineFeatures/5"
            },
            {
              "$ref": "#/features/3/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/4"
          },
          "cells": [
            {
              "$ref": "#/features/4/engineFeatures/0"
            },
            {
              "$ref": "#/features/4/engineFeatures/1"
            },
            {
              "$ref": "#/features/4/engineFeatures/2"
            },
            {
              "$ref": "#/features/4/engineFeatures/3"
            },
            {
              "$ref": "#/features/4/engineFeatures/4"
            },
            {
              "$ref": "#/features/4/engineFeatures/5"
            },
            {
              "$ref": "#/features/4/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/5"
          },
          "cells": [
            {
              "$ref": "#/features/5/engineFeatures/0"
            },
            {
              "$ref": "#/features/5/engineFeatures/1"
            },
            {
              "$ref": "#/features/5/engineFeatures/2"
            },
            {
              "$ref": "#/features/5/engineFeatures/3"
            },
            {
              "$ref": "#/features/5/engineFeatures/4"
            },
            {
              "$ref": "#/features/5/engineFeatures/5"
            },
            {
              "$ref": "#/features/5/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/6"
          },
          "cells": [
            {
              "$ref": "#/features/6/engineFeatures/0"
            },
            {
              "$ref": "#/features/6/engineFeatures/1"
            },
            {
              "$ref": "#/features/6/engineFeatures/2"
            },
            {
              "$ref": "#/features/6/engineFeatures/3"
            },
            {
              "$ref": "#/features/6/engineFeatures/4"
            },
            {
              "$ref": "#/features/6/engineFeatures/5"
            },
            {
              "$ref": "#/features/6/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/7"
          },
          "cells": [
            {
              "$ref": "#/features/7/engineFeatures/0"
            },
            {
              "$ref": "#/features/7/engineFeatures/1"
            },
            {
              "$ref": "#/features/7/engineFeatures/2"
            },
            {
              "$ref": "#/features/7/engineFeatures/3"
            },
            {
              "$ref": "#/features/7/engineFeatures/4"
            },
            {
              "$ref": "#/features/7/engineFeatures/5"
            },
            {
              "$ref": "#/features/7/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/8"
          },
          "cells": [
            {
              "$ref": "#/features/8/engineFeatures/0"
            },
            {
              "$ref": "#/features/8/engineFeatures/1"
            },
            {
              "$ref": "#/features/8/engineFeatures/2"
            },
            {
              "$ref": "#/features/8/engineFeatures/3"
            },
            {
              "$ref": "#/features/8/engineFeatures/4"
            },
            {
              "$ref": "#/features/8/engineFeatures/5"
            },
            {
              "$ref": "#/features/8/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/9"
          },
          "cells": [
            {
              "$ref": "#/features/9/engineFeatures/0"
            },
            {
              "$ref": "#/features/9/engineFeatures/1"
            },
            {
              "$ref": "#/features/9/engineFeatures/2"
            },
            {
              "$ref": "#/features/9/engineFeatures/3"
            },
            {
              "$ref": "#/features/9/engineFeatures/4"
            },
            {
              "$ref": "#/features/9/engineFeatures/5"
            },
            {
              "$ref": "#/features/9/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/10"
          },
          "cells": [
            {
              "$ref": "#/features/10/engineFeatures/0"
            },
            {
              "$ref": "#/features/10/engineFeatures/1"
            },
            {
              "$ref": "#/features/10/engineFeatures/2"
            },
            {
              "$ref": "#/features/10/engineFeatures/3"
            },
            {
              "$ref": "#/features/10/engineFeatures/4"
            },
            {
              "$ref": "#/features/10/engineFeatures/5"
            },
            {
              "$ref": "#/features/10/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/11"
          },
          "cells": [
            {
              "$ref": "#/features/11/engineFeatures/0"
            },
            {
              "$ref": "#/features/11/engineFeatures/1"
            },
            {
              "$ref": "#/features/11/engineFeatures/2"
            },
            {
              "$ref": "#/features/11/engineFeatures/3"
            },
            {
              "$ref": "#/features/11/engineFeatures/4"
            },
            {
              "$ref": "#/features/11/engineFeatures/5"
            },
            {
              "$ref": "#/features/11/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/12"
          },
          "cells": [
            {
              "$ref": "#/features/12/engineFeatures/0"
            },
            {
              "$ref": "#/features/12/engineFeatures/1"
            },
            {
              "$ref": "#/features/12/engineFeatures/2"
            },
            {
              "$ref": "#/features/12/engineFeatures/3"
            },
            {
              "$ref": "#/features/12/engineFeatures/4"
            },
            {
              "$ref": "#/features/12/engineFeatures/5"
            },
            {
              "$ref": "#/features/12/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/13"
          },
          "cells": [
            {
              "$ref": "#/features/13/engineFeatures/0"
            },
            {
              "$ref": "#/features/13/engineFeatures/1"
            },
            {
              "$ref": "#/features/13/engineFeatures/2"
            },
            {
              "$ref": "#/features/13/engineFeatures/3"
            },
            {
              "$ref": "#/features/13/engineFeatures/4"
            },
            {
              "$ref": "#/features/13/engineFeatures/5"
            },
            {
              "$ref": "#/features/13/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/14"
          },
          "cells": [
            {
              "$ref": "#/features/14/engineFeatures/0"
            },
            {
              "$ref": "#/features/14/engineFeatures/1"
            },
            {
              "$ref": "#/features/14/engineFeatures/2"
            },
            {
              "$ref": "#/features/14/engineFeatures/3"
            },
            {
              "$ref": "#/features/14/engineFeatures/4"
            },
            {
              "$ref": "#/features/14/engineFeatures/5"
            },
            {
              "$ref": "#/features/14/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/15"
          },
          "cells": [
            {
              "$ref": "#/features/15/engineFeatures/0"
            },
            {
              "$ref": "#/features/15/engineFeatures/1"
            },
            {
              "$ref": "#/features/15/engineFeatures/2"
            },
            {
              "$ref": "#/features/15/engineFeatures/3"
            },
            {
              "$ref": "#/features/15/engineFeatures/4"
            },
            {
              "$ref": "#/features/15/engineFeatures/5"
            },
            {
              "$ref": "#/features/15/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/16"
          },
          "cells": [
            {
              "$ref": "#/features/16/engineFeatures/0"
            },
            {
              "$ref": "#/features/16/engineFeatures/1"
            },
            {
              "$ref": "#/features/16/engineFeatures/2"
            },
            {
              "$ref": "#/features/16/engineFeatures/3"
            },
            {
              "$ref": "#/features/16/engineFeatures/4"
            },
            {
              "$ref": "#/features/16/engineFeatures/5"
            },
            {
              "$ref": "#/features/16/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/17"
          },
          "cells": [
            {
              "$ref": "#/features/17/engineFeatures/0"
            },
            {
              "$ref": "#/features/17/engineFeatures/1"
            },
            {
              "$ref": "#/features/17/engineFeatures/2"
            },
            {
              "$ref": "#/features/17/engineFeatures/3"
            },
            {
              "$ref": "#/features/17/engineFeatures/4"
            },
            {
              "$ref": "#/features/17/engineFeatures/5"
            },
            {
              "$ref": "#/features/17/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/18"
          },
          "cells": [
            {
              "$ref": "#/features/18/engineFeatures/0"
            },
            {
              "$ref": "#/features/18/engineFeatures/1"
            },
            {
              "$ref": "#/features/18/engineFeatures/2"
            },
            {
              "$ref": "#/features/18/engineFeatures/3"
            },
            {
              "$ref": "#/features/18/engineFeatures/4"
            },
            {
              "$ref": "#/features/18/engineFeatures/5"
            },
            {
              "$ref": "#/features/18/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/19"
          },
          "cells": [
            {
              "$ref": "#/features/19/engineFeatures/0"
            },
            {
              "$ref": "#/features/19/engineFeatures/1"
            },
            {
              "$ref": "#/features/19/engineFeatures/2"
            },
            {
              "$ref": "#/features/19/engineFeatures/3"
            },
            {
              "$ref": "#/features/19/engineFeatures/4"
            },
            {
              "$ref": "#/features/19/engineFeatures/5"
            },
            {
              "$ref": "#/features/19/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/20"
          },
          "cells": [
            {
              "$ref": "#/features/20/engineFeatures/0"
            },
            {
              "$ref": "#/features/20/engineFeatures/1"
            },
            {
              "$ref": "#/features/20/engineFeatures/2"
            },
            {
              "$ref": "#/features/20/engineFeatures/3"
            },
            {
              "$ref": "#/features/20/engineFeatures/4"
            },
            {
              "$ref": "#/features/20/engineFeatures/5"
            },
            {
              "$ref": "#/features/20/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/21"
          },
          "cells": [
            {
              "$ref": "#/features/21/engineFeatures/0"
            },
            {
              "$ref": "#/features/21/engineFeatures/1"
            },
            {
              "$ref": "#/features/21/engineFeatures/2"
            },
            {
              "$ref": "#/features/21/engineFeatures/3"
            },
            {
              "$ref": "#/features/21/engineFeatures/4"
            },
            {
              "$ref": "#/features/21/engineFeatures/5"
            },
            {
              "$ref": "#/features/21/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/22"
          },
          "cells": [
            {
              "$ref": "#/features/22/engineFeatures/0"
            },
            {
              "$ref": "#/features/22/engineFeatures/1"
            },
            {
              "$ref": "#/features/22/engineFeatures/2"
            },
            {
              "$ref": "#/features/22/engineFeatures/3"
            },
            {
              "$ref": "#/features/22/engineFeatures/4"
            },
            {
              "$ref": "#/features/22/engineFeatures/5"
            },
            {
              "$ref": "#/features/22/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/23"
          },
          "cells": [
            {
              "$ref": "#/features/23/engineFeatures/0"
            },
            {
              "$ref": "#/features/23/engineFeatures/1"
            },
            {
              "$ref": "#/features/23/engineFeatures/2"
            },
            {
              "$ref": "#/features/23/engineFeatures/3"
            },
            {
              "$ref": "#/features/23/engineFeatures/4"
            },
            {
              "$ref": "#/features/23/engineFeatures/5"
            },
            {
              "$ref": "#/features/23/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/24"
          },
          "cells": [
            {
              "$ref": "#/features/24/engineFeatures/0"
            },
            {
              "$ref": "#/features/24/engineFeatures/1"
            },
            {
              "$ref": "#/features/24/engineFeatures/2"
            },
            {
              "$ref": "#/features/24/engineFeatures/3"
            },
            {
              "$ref": "#/features/24/engineFeatures/4"
            },
            {
              "$ref": "#/features/24/engineFeatures/5"
            },
            {
              "$ref": "#/features/24/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/25"
          },
          "cells": [
            {
              "$ref": "#/features/25/engineFeatures/0"
            },
            {
              "$ref": "#/features/25/engineFeatures/1"
            },
            {
              "$ref": "#/features/25/engineFeatures/2"
            },
            {
              "$ref": "#/features/25/engineFeatures/3"
            },
            {
              "$ref": "#/features/25/engineFeatures/4"
            },
            {
              "$ref": "#/features/25/engineFeatures/5"
            },
            {
              "$ref": "#/features/25/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/26"
          },
          "cells": [
            {
              "$ref": "#/features/26/engineFeatures/0"
            },
            {
              "$ref": "#/features/26/engineFeatures/1"
            },
            {
              "$ref": "#/features/26/engineFeatures/2"
            },
            {
              "$ref": "#/features/26/engineFeatures/3"
            },
            {
              "$ref": "#/features/26/engineFeatures/4"
            },
            {
              "$ref": "#/features/26/engineFeatures/5"
            },
            {
              "$ref": "#/features/26/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/27"
          },
          "cells": [
            {
              "$ref": "#/features/27/engineFeatures/0"
            },
            {
              "$ref": "#/features/27/engineFeatures/1"
            },
            {
              "$ref": "#/features/27/engineFeatures/2"
            },
            {
              "$ref": "#/features/27/engineFeatures/3"
            },
            {
              "$ref": "#/features/27/engineFeatures/4"
            },
            {
              "$ref": "#/features/27/engineFeatures/5"
            },
            {
              "$ref": "#/features/27/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/28"
          },
          "cells": [
            {
              "$ref": "#/features/28/engineFeatures/0"
            },
            {
              "$ref": "#/features/28/engineFeatures/1"
            },
            {
              "$ref": "#/features/28/engineFeatures/2"
            },
            {
              "$ref": "#/features/28/engineFeatures/3"
            },
            {
              "$ref": "#/features/28/engineFeatures/4"
            },
            {
              "$ref": "#/features/28/engineFeatures/5"
            },
            {
              "$ref": "#/features/28/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/29"
          },
          "cells": [
            {
              "$ref": "#/features/29/engineFeatures/0"
            },
            {
              "$ref": "#/features/29/engineFeatures/1"
            },
            {
              "$ref": "#/features/29/engineFeatures/2"
            },
            {
              "$ref": "#/features/29/engineFeatures/3"
            },
            {
              "$ref": "#/features/29/engineFeatures/4"
            },
            {
              "$ref": "#/features/29/engineFeatures/5"
            },
            {
              "$ref": "#/features/29/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/30"
          },
          "cells": [
            {
              "$ref": "#/features/30/engineFeatures/0"
            },
            {
              "$ref": "#/features/30/engineFeatures/1"
            },
            {
              "$ref": "#/features/30/engineFeatures/2"
            },
            {
              "$ref": "#/features/30/engineFeatures/3"
            },
            {
              "$ref": "#/features/30/engineFeatures/4"
            },
            {
              "$ref": "#/features/30/engineFeatures/5"
            },
            {
              "$ref": "#/features/30/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/31"
          },
          "cells": [
            {
              "$ref": "#/features/31/engineFeatures/0"
            },
            {
              "$ref": "#/features/31/engineFeatures/1"
            },
            {
              "$ref": "#/features/31/engineFeatures/2"
            },
            {
              "$ref": "#/features/31/engineFeatures/3"
            },
            {
              "$ref": "#/features/31/engineFeatures/4"
            },
            {
              "$ref": "#/features/31/engineFeatures/5"
            },
            {
              "$ref": "#/features/31/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/32"
          },
          "cells": [
            {
              "$ref": "#/features/32/engineFeatures/0"
            },
            {
              "$ref": "#/features/32/engineFeatures/1"
            },
            {
              "$ref": "#/features/32/engineFeatures/2"
            },
            {
              "$ref": "#/features/32/engineFeatures/3"
            },
            {
              "$ref": "#/features/32/engineFeatures/4"
            },
            {
              "$ref": "#/features/32/engineFeatures/5"
            },
            {
              "$ref": "#/features/32/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/33"
          },
          "cells": [
            {
              "$ref": "#/features/33/engineFeatures/0"
            },
            {
              "$ref": "#/features/33/engineFeatures/1"
            },
            {
              "$ref": "#/features/33/engineFeatures/2"
            },
            {
              "$ref": "#/features/33/engineFeatures/3"
            },
            {
              "$ref": "#/features/33/engineFeatures/4"
            },
            {
              "$ref": "#/features/33/engineFeatures/5"
            },
            {
              "$ref": "#/features/33/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/34"
          },
          "cells": [
            {
              "$ref": "#/features/34/engineFeatures/0"
            },
            {
              "$ref": "#/features/34/engineFeatures/1"
            },
            {
              "$ref": "#/features/34/engineFeatures/2"
            },
            {
              "$ref": "#/features/34/engineFeatures/3"
            },
            {
              "$ref": "#/features/34/engineFeatures/4"
            },
            {
              "$ref": "#/features/34/engineFeatures/5"
            },
            {
              "$ref": "#/features/34/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/35"
          },
          "cells": [
            {
              "$ref": "#/features/35/engineFeatures/0"
            },
            {
              "$ref": "#/features/35/engineFeatures/1"
            },
            {
              "$ref": "#/features/35/engineFeatures/2"
            },
            {
              "$ref": "#/features/35/engineFeatures/3"
            },
            {
              "$ref": "#/features/35/engineFeatures/4"
            },
            {
              "$ref": "#/features/35/engineFeatures/5"
            },
            {
              "$ref": "#/features/35/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/36"
          },
          "cells": [
            {
              "$ref": "#/features/36/engineFeatures/0"
            },
            {
              "$ref": "#/features/36/engineFeatures/1"
            },
            {
              "$ref": "#/features/36/engineFeatures/2"
            },
            {
              "$ref": "#/features/36/engineFeatures/3"
            },
            {
              "$ref": "#/features/36/engineFeatures/4"
            },
            {
              "$ref": "#/features/36/engineFeatures/5"
            },
            {
              "$ref": "#/features/36/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/37"
          },
          "cells": [
            {
              "$ref": "#/features/37/engineFeatures/0"
            },
            {
              "$ref": "#/features/37/engineFeatures/1"
            },
            {
              "$ref": "#/features/37/engineFeatures/2"
            },
            {
              "$ref": "#/features/37/engineFeatures/3"
            },
            {
              "$ref": "#/features/37/engineFeatures/4"
            },
            {
              "$ref": "#/features/37/engineFeatures/5"
            },
            {
              "$ref": "#/features/37/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/38"
          },
          "cells": [
            {
              "$ref": "#/features/38/engineFeatures/0"
            },
            {
              "$ref": "#/features/38/engineFeatures/1"
            },
            {
              "$ref": "#/features/38/engineFeatures/2"
            },
            {
              "$ref": "#/features/38/engineFeatures/3"
            },
            {
              "$ref": "#/features/38/engineFeatures/4"
            },
            {
              "$ref": "#/features/38/engineFeatures/5"
            },
            {
              "$ref": "#/features/38/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/39"
          },
          "cells": [
            {
              "$ref": "#/features/39/engineFeatures/0"
            },
            {
              "$ref": "#/features/39/engineFeatures/1"
            },
            {
              "$ref": "#/features/39/engineFeatures/2"
            },
            {
              "$ref": "#/features/39/engineFeatures/3"
            },
            {
              "$ref": "#/features/39/engineFeatures/4"
            },
            {
              "$ref": "#/features/39/engineFeatures/5"
            },
            {
              "$ref": "#/features/39/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/40"
          },
          "cells": [
            {
              "$ref": "#/features/40/engineFeatures/0"
            },
            {
              "$ref": "#/features/40/engineFeatures/1"
            },
            {
              "$ref": "#/features/40/engineFeatures/2"
            },
            {
              "$ref": "#/features/40/engineFeatures/3"
            },
            {
              "$ref": "#/features/40/engineFeatures/4"
            },
            {
              "$ref": "#/features/40/engineFeatures/5"
            },
            {
              "$ref": "#/features/40/engineFeatures/6"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/41"
          },
          "cells": [
            {
              "$ref": "#/features/41/engineFeatures/0"
            },
            {
              "$ref": "#/features/41/engineFeatures/1"
            },
            {
              "$ref": "#/features/41/engineFeatures/2"
            },
            {
              "$ref": "#/features/41/engineFeatures/3"
            },
            {
              "$ref": "#/features/41/engineFeatures/4"
            },
            {
              "$ref": "#/features/41/engineFeatures/5"
            },
            {
              "$ref": "#/features/41/engineFeatures/6"
            }
          ]
        }
      ]
    },
    {
      "columns": [
        {
          "$ref": "#/engines/7"
        },
        {
          "$ref": "#/engines/8"
        }
      ],
      "rows": [
        {
          "feature": {
            "$ref": "#/features/0"
          },
          "cells": [
            {
              "$ref": "#/features/0/engineFeatures/7"
            },
            {
              "$ref": "#/features/0/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/1"
          },
          "cells": [
            {
              "$ref": "#/features/1/engineFeatures/7"
            },
            {
              "$ref": "#/features/1/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/2"
          },
          "cells": [
            {
              "$ref": "#/features/2/engineFeatures/7"
            },
            {
              "$ref": "#/features/2/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/3"
          },
          "cells": [
            {
              "$ref": "#/features/3/engineFeatures/7"
            },
            {
              "$ref": "#/features/3/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/4"
          },
          "cells": [
            {
              "$ref": "#/features/4/engineFeatures/7"
            },
            {
              "$ref": "#/features/4/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/5"
          },
          "cells": [
            {
              "$ref": "#/features/5/engineFeatures/7"
            },
            {
              "$ref": "#/features/5/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/6"
          },
          "cells": [
            {
              "$ref": "#/features/6/engineFeatures/7"
            },
            {
              "$ref": "#/features/6/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/7"
          },
          "cells": [
            {
              "$ref": "#/features/7/engineFeatures/7"
            },
            {
              "$ref": "#/features/7/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/8"
          },
          "cells": [
            {
              "$ref": "#/features/8/engineFeatures/7"
            },
            {
              "$ref": "#/features/8/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/9"
          },
          "cells": [
            {
              "$ref": "#/features/9/engineFeatures/7"
            },
            {
              "$ref": "#/features/9/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/10"
          },
          "cells": [
            {
              "$ref": "#/features/10/engineFeatures/7"
            },
            {
              "$ref": "#/features/10/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/11"
          },
          "cells": [
            {
              "$ref": "#/features/11/engineFeatures/7"
            },
            {
              "$ref": "#/features/11/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/12"
          },
          "cells": [
            {
              "$ref": "#/features/12/engineFeatures/7"
            },
            {
              "$ref": "#/features/12/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/13"
          },
          "cells": [
            {
              "$ref": "#/features/13/engineFeatures/7"
            },
            {
              "$ref": "#/features/13/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/14"
          },
          "cells": [
            {
              "$ref": "#/features/14/engineFeatures/7"
            },
            {
              "$ref": "#/features/14/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/15"
          },
          "cells": [
            {
              "$ref": "#/features/15/engineFeatures/7"
            },
            {
              "$ref": "#/features/15/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/16"
          },
          "cells": [
            {
              "$ref": "#/features/16/engineFeatures/7"
            },
            {
              "$ref": "#/features/16/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/17"
          },
          "cells": [
            {
              "$ref": "#/features/17/engineFeatures/7"
            },
            {
              "$ref": "#/features/17/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/18"
          },
          "cells": [
            {
              "$ref": "#/features/18/engineFeatures/7"
            },
            {
              "$ref": "#/features/18/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/19"
          },
          "cells": [
            {
              "$ref": "#/features/19/engineFeatures/7"
            },
            {
              "$ref": "#/features/19/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/20"
          },
          "cells": [
            {
              "$ref": "#/features/20/engineFeatures/7"
            },
            {
              "$ref": "#/features/20/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/21"
          },
          "cells": [
            {
              "$ref": "#/features/21/engineFeatures/7"
            },
            {
              "$ref": "#/features/21/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/22"
          },
          "cells": [
            {
              "$ref": "#/features/22/engineFeatures/7"
            },
            {
              "$ref": "#/features/22/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/23"
          },
          "cells": [
            {
              "$ref": "#/features/23/engineFeatures/7"
            },
            {
              "$ref": "#/features/23/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/24"
          },
          "cells": [
            {
              "$ref": "#/features/24/engineFeatures/7"
            },
            {
              "$ref": "#/features/24/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/25"
          },
          "cells": [
            {
              "$ref": "#/features/25/engineFeatures/7"
            },
            {
              "$ref": "#/features/25/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/26"
          },
          "cells": [
            {
              "$ref": "#/features/26/engineFeatures/7"
            },
            {
              "$ref": "#/features/26/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/27"
          },
          "cells": [
            {
              "$ref": "#/features/27/engineFeatures/7"
            },
            {
              "$ref": "#/features/27/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/28"
          },
          "cells": [
            {
              "$ref": "#/features/28/engineFeatures/7"
            },
            {
              "$ref": "#/features/28/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/29"
          },
          "cells": [
            {
              "$ref": "#/features/29/engineFeatures/7"
            },
            {
              "$ref": "#/features/29/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/30"
          },
          "cells": [
            {
              "$ref": "#/features/30/engineFeatures/7"
            },
            {
              "$ref": "#/features/30/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/31"
          },
          "cells": [
            {
              "$ref": "#/features/31/engineFeatures/7"
            },
            {
              "$ref": "#/features/31/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/32"
          },
          "cells": [
            {
              "$ref": "#/features/32/engineFeatures/7"
            },
            {
              "$ref": "#/features/32/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/33"
          },
          "cells": [
            {
              "$ref": "#/features/33/engineFeatures/7"
            },
            {
              "$ref": "#/features/33/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/34"
          },
          "cells": [
            {
              "$ref": "#/features/34/engineFeatures/7"
            },
            {
              "$ref": "#/features/34/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/35"
          },
          "cells": [
            {
              "$ref": "#/features/35/engineFeatures/7"
            },
            {
              "$ref": "#/features/35/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/36"
          },
          "cells": [
            {
              "$ref": "#/features/36/engineFeatures/7"
            },
            {
              "$ref": "#/features/36/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/37"
          },
          "cells": [
            {
              "$ref": "#/features/37/engineFeatures/7"
            },
            {
              "$ref": "#/features/37/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/38"
          },
          "cells": [
            {
              "$ref": "#/features/38/engineFeatures/7"
            },
            {
              "$ref": "#/features/38/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/39"
          },
          "cells": [
            {
              "$ref": "#/features/39/engineFeatures/7"
            },
            {
              "$ref": "#/features/39/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/40"
          },
          "cells": [
            {
              "$ref": "#/features/40/engineFeatures/7"
            },
            {
              "$ref": "#/features/40/engineFeatures/8"
            }
          ]
        },
        {
          "feature": {
            "$ref": "#/features/41"
          },
          "cells": [
            {
              "$ref": "#/features/41/engineFeatures/7"
            },
            {
              "$ref": "#/features/41/engineFeatures/8"
            }
          ]
        }
      ]
    }
  ]
}